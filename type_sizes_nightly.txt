print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `<ScopedKey<T>>::set::Reset`: 16 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.val`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/scoped-tls-0.1.0/src/lib.rs:126:31: 126:50 self:&&mut <ScopedKey<T>>::set::Reset]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<usize>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `AllocatorC`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Calloc`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Malloc`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Custom`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `LogRecord`: 80 bytes, alignment: 8 bytes
print-type-size     field `.metadata`: 24 bytes
print-type-size     field `.location`: 8 bytes
print-type-size     field `.args`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::str::Bytes, std::str::Bytes>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `LogLocation`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__module_path`: 16 bytes
print-type-size     field `.__file`: 16 bytes
print-type-size     field `.__line`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `LogMetadata`: 24 bytes, alignment: 8 bytes
print-type-size     field `.level`: 8 bytes
print-type-size     field `.target`: 16 bytes
print-type-size type: `std::result::Result<*const Log, ShutdownLoggerError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `LoggerGuard`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::option::IntoIter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:344:29: 344:44]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::option::IntoIter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:344:29: 344:44]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:345:26: 345:66]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::IntoIter<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::option::Item<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 16 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<LogLevelFilter>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<LoggerGuard>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<Box<Log>, ShutdownLoggerError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<LogLevelFilter, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `LogLevel`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `LogLevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:342:31: 342:72 level:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:450:31: 450:72 level:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::str::Bytes, std::str::Bytes>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<&str>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<LogLevel>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::result::Result<LogLevel, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<(u8, u8)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:u8]`: 1 bytes, alignment: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `MaxLogLevelFilter`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `NopLogger`: 0 bytes, alignment: 1 bytes
print-type-size type: `SetLoggerError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `ShutdownLoggerError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:332:15: 332:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:344:29: 344:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:345:26: 345:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:451:26: 451:68]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.6/src/lib.rs:707:31: 707:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `Request`: 56 bytes, alignment: 8 bytes
print-type-size     field `.method`: 16 bytes
print-type-size     field `.path`: 16 bytes
print-type-size     field `.version`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.headers`: 16 bytes, alignment: 8 bytes
print-type-size type: `Response`: 40 bytes, alignment: 8 bytes
print-type-size     field `.version`: 2 bytes
print-type-size     field `.code`: 4 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.reason`: 16 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 16 bytes
print-type-size type: `Header`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<Status<(usize, &[Header])>, Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<Status<(usize, u64)>, InvalidChunkSize>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Status<(usize, &[Header])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Complete`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `Status<(usize, u64)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Complete`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Partial`: 0 bytes
print-type-size type: `iter::Bytes`: 24 bytes, alignment: 8 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size type: `std::result::Result<Status<&str>, Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<Status<usize>, Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Status<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Complete`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `Status<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Complete`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Partial`: 0 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<Header>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `iter::Bytes8`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<iter::Bytes8>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<Header>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::option::Option<&mut Header>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::result::Result<Status<u16>, Error>`: 6 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 5 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 4 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Status<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Complete`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Partial`: 0 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::result::Result<Status<u8>, Error>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Status<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Complete`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Partial`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<Status<()>, Error>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Error`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `HeaderName`: 0 bytes
print-type-size     variant `HeaderValue`: 0 bytes
print-type-size     variant `NewLine`: 0 bytes
print-type-size     variant `Status`: 0 bytes
print-type-size     variant `Token`: 0 bytes
print-type-size     variant `TooManyHeaders`: 0 bytes
print-type-size     variant `Version`: 0 bytes
print-type-size type: `Status<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Complete`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Partial`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `InvalidChunkSize`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut Header>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 232 bytes
print-type-size type: `std::sys::imp::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.env`: 40 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.envp`: 24 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.closures`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stdin`: 12 bytes
print-type-size     field `.stdout`: 12 bytes
print-type-size     field `.stderr`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<Library, Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::result::Result<Library, std::string::String>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sys::imp::fs::FileAttr, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `Library`: 144 bytes, alignment: 8 bytes
print-type-size     field `.libs`: 24 bytes
print-type-size     field `.link_paths`: 24 bytes
print-type-size     field `.frameworks`: 24 bytes
print-type-size     field `.framework_paths`: 24 bytes
print-type-size     field `.include_paths`: 24 bytes
print-type-size     field `.version`: 24 bytes
print-type-size     field `._priv`: 0 bytes
print-type-size type: `libc::unix::notbsd::linux::other::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `std::fs::Metadata`: 144 bytes, alignment: 8 bytes
print-type-size     field `.0`: 144 bytes
print-type-size type: `std::sys::imp::fs::FileAttr`: 144 bytes, alignment: 8 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, Error>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `Error`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `EnvNoPkgConfig`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `CrossCompilation`: 0 bytes
print-type-size     variant `Command`: 40 bytes
print-type-size         field `.command`: 24 bytes
print-type-size         field `.cause`: 16 bytes
print-type-size     variant `Failure`: 80 bytes
print-type-size         field `.command`: 24 bytes
print-type-size         field `.output`: 56 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Filter<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:370:35: 370:50]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:370:35: 370:50]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:371:32: 371:61]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `Config`: 64 bytes, alignment: 8 bytes
print-type-size     field `.statik`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.atleast_version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.extra_args`: 24 bytes
print-type-size     field `.cargo_metadata`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.stdout`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(std::ffi::OsString, (usize, std::ffi::CString))>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::option::Option<std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::ffi::OsString, (usize, std::ffi::CString)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(&str, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::ffi::OsString, (usize, std::ffi::CString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<*const i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(&str, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:448:22: 450:6 root:&&std::path::Path, libname:&std::string::String]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&str, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::OsString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ffi::OsString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::ffi::OsString, (usize, std::ffi::CString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::str::Chars, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:440:22: 440:48]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:440:54: 442:6]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::Chars, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:440:22: 440:48]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(&str, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::ffi::OsString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `std::option::Option<std::sys::imp::process::Stdio>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `OutputDebugger`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:327:36: 327:57 name:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (&str, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const *const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(&str, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<(&str, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sys::imp::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:233:33: 233:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:294:34: 294:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:323:49: 323:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:370:35: 370:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:371:32: 371:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:440:22: 440:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-config-0.3.8/src/lib.rs:440:54: 442:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::ffi::OsString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, (usize, std::ffi::CString))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::OsString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::InternalNode<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 88 bytes
print-type-size     field `.vals`: 440 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `collections::btree::node::InsertResult<u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 88 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.2`: 40 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 88 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.2`: 40 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `world::World`: 96 bytes, alignment: 8 bytes
print-type-size     field `.components`: 40 bytes
print-type-size     field `.entities`: 32 bytes
print-type-size     field `.ent_data`: 24 bytes
print-type-size type: `std::collections::btree_map::IntoIter<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, dynvec::DynVec)>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `dynvec::DynVec`: 64 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.unused`: 24 bytes
print-type-size     field `.t`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::collections::btree_map::Range<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::any::TypeId, dynvec::DynVec, &mut std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::any::TypeId, usize, &std::collections::hash::table::RawTable<std::any::TypeId, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::collections::btree_map::Entry<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `sim::SimBuilder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.errors`: 24 bytes
print-type-size     field `.sim`: 24 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::any::TypeId, dynvec::DynVec, &mut std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::any::TypeId, usize, &std::collections::hash::table::RawTable<std::any::TypeId, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::IntoIter<std::any::TypeId, usize>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::collections::hash_map::IntoIter<std::any::TypeId, usize>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::option::Option<(u64, std::collections::HashMap<std::any::TypeId, usize>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, dynvec::DynVec>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::any::TypeId, dynvec::DynVec, &mut std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::any::TypeId, usize, &std::collections::hash::table::RawTable<std::any::TypeId, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::HashMap<std::any::TypeId, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, &mut collections::btree::node::Root<u64, std::collections::HashMap<std::any::TypeId, usize>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::map::UnderflowResult<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AtRoot`: 0 bytes
print-type-size     variant `EmptyParent`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Merged`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Stole`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `entity::Entities`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dead`: 24 bytes
print-type-size     field `.next_id`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::any::TypeId, dynvec::DynVec, &mut std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::any::TypeId, usize, &std::collections::hash::table::RawTable<std::any::TypeId, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::any::TypeId, dynvec::DynVec, &mut std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::any::TypeId, usize, &std::collections::hash::table::RawTable<std::any::TypeId, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::any::TypeId, dynvec::DynVec, &mut std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::any::TypeId, usize, &std::collections::hash::table::RawTable<std::any::TypeId, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::any::TypeId, dynvec::DynVec>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::any::TypeId, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, dynvec::DynVec>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash_map::Iter<std::any::TypeId, dynvec::DynVec>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::any::TypeId, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::option::Option<(std::collections::hash::table::SafeHash, std::any::TypeId, usize)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::any::TypeId, dynvec::DynVec, &mut std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::any::TypeId, usize, &std::collections::hash::table::RawTable<std::any::TypeId, usize>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<sim::Simulation, std::vec::Vec<std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u64, std::collections::HashMap<std::any::TypeId, usize>, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `sim::Simulation`: 24 bytes, alignment: 8 bytes
print-type-size     field `.procs`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<'static, std::any::TypeId, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::any::TypeId, dynvec::DynVec>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::any::TypeId, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, dynvec::DynVec>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::any::TypeId, dynvec::DynVec>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::any::TypeId, usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<Box<processor::Processor + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<processor::Processor>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<processor::Processor + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<processor::Processor>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `collections::btree::node::Root<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<Box<processor::Processor>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<collections::btree::node::BoxedNode<u64, std::collections::HashMap<std::any::TypeId, usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::collections::HashMap<std::any::TypeId, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, dynvec::DynVec>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<(&std::any::TypeId, &dynvec::DynVec)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::any::TypeId, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u64, &std::collections::HashMap<std::any::TypeId, usize>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<collections::btree::node::Root<u64, std::collections::HashMap<std::any::TypeId, usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<Box<processor::Processor>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::any::TypeId, dynvec::DynVec>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::any::TypeId, usize>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1298) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[42]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::IntoIter<std::any::TypeId, usize>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&std::any::TypeId]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1456) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search_mut[0]::{{closure}}[0] } 0:&&std::any::TypeId]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u64>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5678) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::contains[0]::{{closure}}[0] } 0:&&u64]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5678) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::contains[0]::{{closure}}[0] } 0:&&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<u64, std::collections::HashMap<std::any::TypeId, usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<processor::Processor + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<processor::Processor>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<u64, std::collections::HashMap<std::any::TypeId, usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::option::Option<&mut Box<processor::Processor>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut dynvec::DynVec>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::collections::HashMap<std::any::TypeId, usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<Box<processor::Processor + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<processor::Processor>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<u64, std::collections::HashMap<std::any::TypeId, usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1565) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get_mut[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1818) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[26]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1723) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::unwrap_unchecked[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1786) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1793) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Immut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Mut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&'static ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (u64, std::collections::HashMap<std::any::TypeId, usize>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut Box<processor::Processor>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, dynvec::DynVec)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<processor::Processor + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<processor::Processor>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<u64, std::collections::HashMap<std::any::TypeId, usize>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<version::Version, version::ParseError>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `version::ParseError`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NonAsciiIdentifier`: 0 bytes
print-type-size     variant `IncorrectParse`: 96 bytes
print-type-size         field `.0`: 72 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `GenericFailure`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `version_req::Lexer`: 80 bytes, alignment: 8 bytes
print-type-size     field `.c`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.idx`: 8 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.mark`: 16 bytes
print-type-size     field `.input`: 16 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<version::Version>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `version::Version`: 72 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size     field `.pre`: 24 bytes
print-type-size     field `.build`: 24 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::result::Result<version_req::Predicate, version_req::ReqParseError>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 55 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `version_req::PredBuilder`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 3 bytes
print-type-size     padding: 5 bytes
print-type-size     field `.major`: 16 bytes, alignment: 8 bytes
print-type-size     field `.minor`: 16 bytes
print-type-size     field `.patch`: 16 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(version::Identifier, std::option::Option<char>)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `version_req::Predicate`: 48 bytes, alignment: 8 bytes
print-type-size     field `.op`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.major`: 8 bytes, alignment: 8 bytes
print-type-size     field `.minor`: 16 bytes
print-type-size     field `.patch`: 16 bytes
print-type-size type: `std::option::Option<(u64, u64, u64, std::option::Option<char>)>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<version_req::Token>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<version_req::VersionReq, version_req::ReqParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `version::Identifier`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Numeric`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AlphaNumeric`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<version::Identifier>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<version_req::Predicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(u64, std::option::Option<char>)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(u64, u64)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<version_req::VersionComponent, version_req::ReqParseError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<version::Identifier>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<version_req::Predicate>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `version_req::Token`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Sigil`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `AlphaNum`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Comma`: 0 bytes
print-type-size     variant `Dot`: 0 bytes
print-type-size type: `version_req::VersionReq`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:291:38: 291:62 major:&u64, minor:&u64]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:294:32: 296:10 major:&u64, minor:&u64]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<version::Identifier>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<version_req::Predicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<version::Identifier>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<version_req::Predicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &version::Identifier)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &version_req::Predicate)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u64, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<version::Identifier>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<version_req::Predicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `version_req::VersionComponent`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NumericVersionComponent`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `WildcardVersionComponent`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:288:34: 288:49 major:&u64]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:289:17: 293:6 rdr:&mut &mut std::str::Chars]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:290:32: 292:10 major:&u64]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:293:17: 297:6 rdr:&mut &mut std::str::Chars]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version_req.rs:171:54: 171:76 predicates:&mut std::vec::Vec<version_req::Predicate>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version_req.rs:224:36: 224:58 version:&&version::Version]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<version::Identifier>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<version_req::Predicate>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const version::Identifier>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const version_req::Predicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&version::Identifier>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&version_req::Predicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<version::Identifier>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<version_req::Predicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<version_req::Op>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), version_req::ReqParseError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `version_req::Op`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ex`: 0 bytes
print-type-size     variant `Gt`: 0 bytes
print-type-size     variant `GtEq`: 0 bytes
print-type-size     variant `Lt`: 0 bytes
print-type-size     variant `LtEq`: 0 bytes
print-type-size     variant `Tilde`: 0 bytes
print-type-size     variant `Compatible`: 0 bytes
print-type-size     variant `Wildcard`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `version_req::LexState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `LexInit`: 0 bytes
print-type-size     variant `LexStart`: 0 bytes
print-type-size     variant `LexVersionComponent`: 0 bytes
print-type-size     variant `LexSigil`: 0 bytes
print-type-size     variant `LexErr`: 0 bytes
print-type-size type: `version_req::ReqParseError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidVersionRequirement`: 0 bytes
print-type-size     variant `OpAlreadySet`: 0 bytes
print-type-size     variant `InvalidSigil`: 0 bytes
print-type-size     variant `VersionComponentsMustBeNumeric`: 0 bytes
print-type-size     variant `MajorVersionRequired`: 0 bytes
print-type-size     variant `UnimplementedVersionRequirement`: 0 bytes
print-type-size type: `version_req::WildcardVersion`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Major`: 0 bytes
print-type-size     variant `Minor`: 0 bytes
print-type-size     variant `Patch`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:256:45: 256:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:264:44: 264:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:268:29: 268:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.1.20/src/version.rs:287:45: 289:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(715) => std/8a732dca6b5bfa0e664f890723f35836::ascii[0]::{{impl}}[0]::is_ascii[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&version::Identifier>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&version_req::Predicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<version::Identifier>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<version_req::Predicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::option::Option<Range>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `Range`: 16 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::ucontext_t`: 936 bytes, alignment: 8 bytes
print-type-size     field `.uc_flags`: 8 bytes
print-type-size     field `.uc_link`: 8 bytes
print-type-size     field `.uc_stack`: 24 bytes
print-type-size     field `.uc_mcontext`: 256 bytes
print-type-size     field `.uc_sigmask`: 128 bytes
print-type-size     field `.__private`: 512 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::_libc_fpstate`: 512 bytes, alignment: 8 bytes
print-type-size     field `.cwd`: 2 bytes
print-type-size     field `.swd`: 2 bytes
print-type-size     field `.ftw`: 2 bytes
print-type-size     field `.fop`: 2 bytes
print-type-size     field `.rip`: 8 bytes
print-type-size     field `.rdp`: 8 bytes
print-type-size     field `.mxcsr`: 4 bytes
print-type-size     field `.mxcr_mask`: 4 bytes
print-type-size     field `._st`: 128 bytes
print-type-size     field `._xmm`: 256 bytes
print-type-size     field `.__private`: 96 bytes
print-type-size type: `unix::notbsd::utsname`: 390 bytes, alignment: 1 bytes
print-type-size     field `.sysname`: 65 bytes
print-type-size     field `.nodename`: 65 bytes
print-type-size     field `.release`: 65 bytes
print-type-size     field `.version`: 65 bytes
print-type-size     field `.machine`: 65 bytes
print-type-size     field `.domainname`: 65 bytes
print-type-size type: `unix::notbsd::linux::other::utmpx`: 384 bytes, alignment: 4 bytes
print-type-size     field `.ut_type`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.ut_pid`: 4 bytes, alignment: 4 bytes
print-type-size     field `.ut_line`: 32 bytes
print-type-size     field `.ut_id`: 4 bytes
print-type-size     field `.ut_user`: 32 bytes
print-type-size     field `.ut_host`: 256 bytes
print-type-size     field `.ut_exit`: 4 bytes
print-type-size     field `.ut_session`: 4 bytes
print-type-size     field `.ut_tv`: 8 bytes
print-type-size     field `.ut_addr_v6`: 16 bytes
print-type-size     field `.__glibc_reserved`: 20 bytes
print-type-size type: `unix::notbsd::linux::dirent`: 280 bytes, alignment: 8 bytes
print-type-size     field `.d_ino`: 8 bytes
print-type-size     field `.d_off`: 8 bytes
print-type-size     field `.d_reclen`: 2 bytes
print-type-size     field `.d_type`: 1 bytes
print-type-size     field `.d_name`: 256 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `unix::notbsd::linux::dirent64`: 280 bytes, alignment: 8 bytes
print-type-size     field `.d_ino`: 8 bytes
print-type-size     field `.d_off`: 8 bytes
print-type-size     field `.d_reclen`: 2 bytes
print-type-size     field `.d_type`: 1 bytes
print-type-size     field `.d_name`: 256 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::mcontext_t`: 256 bytes, alignment: 8 bytes
print-type-size     field `.gregs`: 184 bytes
print-type-size     field `.fpregs`: 8 bytes
print-type-size     field `.__private`: 64 bytes
print-type-size type: `unix::notbsd::linux::other::sigaction`: 152 bytes, alignment: 8 bytes
print-type-size     field `.sa_sigaction`: 8 bytes
print-type-size     field `.sa_mask`: 128 bytes
print-type-size     field `.sa_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `._restorer`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::stat`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__unused`: 24 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `unix::rusage`: 144 bytes, alignment: 8 bytes
print-type-size     field `.ru_utime`: 16 bytes
print-type-size     field `.ru_stime`: 16 bytes
print-type-size     field `.ru_maxrss`: 8 bytes
print-type-size     field `.ru_ixrss`: 8 bytes
print-type-size     field `.ru_idrss`: 8 bytes
print-type-size     field `.ru_isrss`: 8 bytes
print-type-size     field `.ru_minflt`: 8 bytes
print-type-size     field `.ru_majflt`: 8 bytes
print-type-size     field `.ru_nswap`: 8 bytes
print-type-size     field `.ru_inblock`: 8 bytes
print-type-size     field `.ru_oublock`: 8 bytes
print-type-size     field `.ru_msgsnd`: 8 bytes
print-type-size     field `.ru_msgrcv`: 8 bytes
print-type-size     field `.ru_nsignals`: 8 bytes
print-type-size     field `.ru_nvcsw`: 8 bytes
print-type-size     field `.ru_nivcsw`: 8 bytes
print-type-size type: `unix::notbsd::fd_set`: 128 bytes, alignment: 8 bytes
print-type-size     field `.fds_bits`: 128 bytes
print-type-size type: `unix::notbsd::linux::cpu_set_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 128 bytes
print-type-size type: `unix::notbsd::linux::other::b64::sigset_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.__val`: 128 bytes
print-type-size type: `unix::notbsd::linux::other::siginfo_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.si_signo`: 4 bytes
print-type-size     field `.si_errno`: 4 bytes
print-type-size     field `.si_code`: 4 bytes
print-type-size     field `._pad`: 116 bytes
print-type-size     field `._align`: 0 bytes
print-type-size type: `unix::notbsd::linux::signalfd_siginfo`: 128 bytes, alignment: 8 bytes
print-type-size     field `.ssi_signo`: 4 bytes
print-type-size     field `.ssi_errno`: 4 bytes
print-type-size     field `.ssi_code`: 4 bytes
print-type-size     field `.ssi_pid`: 4 bytes
print-type-size     field `.ssi_uid`: 4 bytes
print-type-size     field `.ssi_fd`: 4 bytes
print-type-size     field `.ssi_tid`: 4 bytes
print-type-size     field `.ssi_band`: 4 bytes
print-type-size     field `.ssi_overrun`: 4 bytes
print-type-size     field `.ssi_trapno`: 4 bytes
print-type-size     field `.ssi_status`: 4 bytes
print-type-size     field `.ssi_int`: 4 bytes
print-type-size     field `.ssi_ptr`: 8 bytes
print-type-size     field `.ssi_utime`: 8 bytes
print-type-size     field `.ssi_stime`: 8 bytes
print-type-size     field `.ssi_addr`: 8 bytes
print-type-size     field `._pad`: 48 bytes
print-type-size type: `unix::notbsd::sockaddr_storage`: 128 bytes, alignment: 8 bytes
print-type-size     field `.ss_family`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.__ss_align`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__ss_pad2`: 112 bytes
print-type-size type: `unix::notbsd::linux::other::b64::msqid_ds`: 120 bytes, alignment: 8 bytes
print-type-size     field `.msg_perm`: 48 bytes
print-type-size     field `.msg_stime`: 8 bytes
print-type-size     field `.msg_rtime`: 8 bytes
print-type-size     field `.msg_ctime`: 8 bytes
print-type-size     field `.__msg_cbytes`: 8 bytes
print-type-size     field `.msg_qnum`: 8 bytes
print-type-size     field `.msg_qbytes`: 8 bytes
print-type-size     field `.msg_lspid`: 4 bytes
print-type-size     field `.msg_lrpid`: 4 bytes
print-type-size     field `.__glibc_reserved4`: 8 bytes
print-type-size     field `.__glibc_reserved5`: 8 bytes
print-type-size type: `unix::notbsd::linux::other::statfs`: 120 bytes, alignment: 8 bytes
print-type-size     field `.f_type`: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_namelen`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_spare`: 40 bytes
print-type-size type: `unix::notbsd::linux::other::b64::sysinfo`: 112 bytes, alignment: 8 bytes
print-type-size     field `.uptime`: 8 bytes
print-type-size     field `.loads`: 24 bytes
print-type-size     field `.totalram`: 8 bytes
print-type-size     field `.freeram`: 8 bytes
print-type-size     field `.sharedram`: 8 bytes
print-type-size     field `.bufferram`: 8 bytes
print-type-size     field `.totalswap`: 8 bytes
print-type-size     field `.freeswap`: 8 bytes
print-type-size     field `.procs`: 2 bytes
print-type-size     field `.pad`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.totalhigh`: 8 bytes, alignment: 8 bytes
print-type-size     field `.freehigh`: 8 bytes
print-type-size     field `.mem_unit`: 4 bytes
print-type-size     field `._f`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::shmid_ds`: 112 bytes, alignment: 8 bytes
print-type-size     field `.shm_perm`: 48 bytes
print-type-size     field `.shm_segsz`: 8 bytes
print-type-size     field `.shm_atime`: 8 bytes
print-type-size     field `.shm_dtime`: 8 bytes
print-type-size     field `.shm_ctime`: 8 bytes
print-type-size     field `.shm_cpid`: 4 bytes
print-type-size     field `.shm_lpid`: 4 bytes
print-type-size     field `.shm_nattch`: 8 bytes
print-type-size     field `.__unused4`: 8 bytes
print-type-size     field `.__unused5`: 8 bytes
print-type-size type: `unix::notbsd::linux::statvfs`: 112 bytes, alignment: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_favail`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_flag`: 8 bytes
print-type-size     field `.f_namemax`: 8 bytes
print-type-size     field `.__f_spare`: 24 bytes
print-type-size type: `unix::notbsd::sockaddr_un`: 110 bytes, alignment: 2 bytes
print-type-size     field `.sun_family`: 2 bytes
print-type-size     field `.sun_path`: 108 bytes
print-type-size type: `unix::notbsd::lconv`: 96 bytes, alignment: 8 bytes
print-type-size     field `.decimal_point`: 8 bytes
print-type-size     field `.thousands_sep`: 8 bytes
print-type-size     field `.grouping`: 8 bytes
print-type-size     field `.int_curr_symbol`: 8 bytes
print-type-size     field `.currency_symbol`: 8 bytes
print-type-size     field `.mon_decimal_point`: 8 bytes
print-type-size     field `.mon_thousands_sep`: 8 bytes
print-type-size     field `.mon_grouping`: 8 bytes
print-type-size     field `.positive_sign`: 8 bytes
print-type-size     field `.negative_sign`: 8 bytes
print-type-size     field `.int_frac_digits`: 1 bytes
print-type-size     field `.frac_digits`: 1 bytes
print-type-size     field `.p_cs_precedes`: 1 bytes
print-type-size     field `.p_sep_by_space`: 1 bytes
print-type-size     field `.n_cs_precedes`: 1 bytes
print-type-size     field `.n_sep_by_space`: 1 bytes
print-type-size     field `.p_sign_posn`: 1 bytes
print-type-size     field `.n_sign_posn`: 1 bytes
print-type-size     field `.int_p_cs_precedes`: 1 bytes
print-type-size     field `.int_p_sep_by_space`: 1 bytes
print-type-size     field `.int_n_cs_precedes`: 1 bytes
print-type-size     field `.int_n_sep_by_space`: 1 bytes
print-type-size     field `.int_p_sign_posn`: 1 bytes
print-type-size     field `.int_n_sign_posn`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `unix::notbsd::linux::dqblk`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dqb_bhardlimit`: 8 bytes
print-type-size     field `.dqb_bsoftlimit`: 8 bytes
print-type-size     field `.dqb_curspace`: 8 bytes
print-type-size     field `.dqb_ihardlimit`: 8 bytes
print-type-size     field `.dqb_isoftlimit`: 8 bytes
print-type-size     field `.dqb_curinodes`: 8 bytes
print-type-size     field `.dqb_btime`: 8 bytes
print-type-size     field `.dqb_itime`: 8 bytes
print-type-size     field `.dqb_valid`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::notbsd::linux::glob_t`: 72 bytes, alignment: 8 bytes
print-type-size     field `.gl_pathc`: 8 bytes
print-type-size     field `.gl_pathv`: 8 bytes
print-type-size     field `.gl_offs`: 8 bytes
print-type-size     field `.gl_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.__unused1`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__unused2`: 8 bytes
print-type-size     field `.__unused3`: 8 bytes
print-type-size     field `.__unused4`: 8 bytes
print-type-size     field `.__unused5`: 8 bytes
print-type-size type: `unix::notbsd::linux::other::glob64_t`: 72 bytes, alignment: 8 bytes
print-type-size     field `.gl_pathc`: 8 bytes
print-type-size     field `.gl_pathv`: 8 bytes
print-type-size     field `.gl_offs`: 8 bytes
print-type-size     field `.gl_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.__unused1`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__unused2`: 8 bytes
print-type-size     field `.__unused3`: 8 bytes
print-type-size     field `.__unused4`: 8 bytes
print-type-size     field `.__unused5`: 8 bytes
print-type-size type: `unix::notbsd::linux::spwd`: 72 bytes, alignment: 8 bytes
print-type-size     field `.sp_namp`: 8 bytes
print-type-size     field `.sp_pwdp`: 8 bytes
print-type-size     field `.sp_lstchg`: 8 bytes
print-type-size     field `.sp_min`: 8 bytes
print-type-size     field `.sp_max`: 8 bytes
print-type-size     field `.sp_warn`: 8 bytes
print-type-size     field `.sp_inact`: 8 bytes
print-type-size     field `.sp_expire`: 8 bytes
print-type-size     field `.sp_flag`: 8 bytes
print-type-size type: `unix::notbsd::linux::mq_attr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.mq_flags`: 8 bytes
print-type-size     field `.mq_maxmsg`: 8 bytes
print-type-size     field `.mq_msgsize`: 8 bytes
print-type-size     field `.mq_curmsgs`: 8 bytes
print-type-size     field `.pad`: 32 bytes
print-type-size type: `unix::notbsd::linux::other::termios`: 60 bytes, alignment: 4 bytes
print-type-size     field `.c_iflag`: 4 bytes
print-type-size     field `.c_oflag`: 4 bytes
print-type-size     field `.c_cflag`: 4 bytes
print-type-size     field `.c_lflag`: 4 bytes
print-type-size     field `.c_line`: 1 bytes
print-type-size     field `.c_cc`: 32 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.c_ispeed`: 4 bytes, alignment: 4 bytes
print-type-size     field `.c_ospeed`: 4 bytes
print-type-size type: `unix::notbsd::linux::ifaddrs`: 56 bytes, alignment: 8 bytes
print-type-size     field `.ifa_next`: 8 bytes
print-type-size     field `.ifa_name`: 8 bytes
print-type-size     field `.ifa_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ifa_addr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ifa_netmask`: 8 bytes
print-type-size     field `.ifa_ifu`: 8 bytes
print-type-size     field `.ifa_data`: 8 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::pthread_attr_t`: 56 bytes, alignment: 8 bytes
print-type-size     field `.__size`: 56 bytes
print-type-size type: `unix::notbsd::linux::other::msghdr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.msg_name`: 8 bytes
print-type-size     field `.msg_namelen`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.msg_iov`: 8 bytes, alignment: 8 bytes
print-type-size     field `.msg_iovlen`: 8 bytes
print-type-size     field `.msg_control`: 8 bytes
print-type-size     field `.msg_controllen`: 8 bytes
print-type-size     field `.msg_flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::notbsd::linux::pthread_rwlock_t`: 56 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 56 bytes
print-type-size type: `unix::notbsd::tm`: 56 bytes, alignment: 8 bytes
print-type-size     field `.tm_sec`: 4 bytes
print-type-size     field `.tm_min`: 4 bytes
print-type-size     field `.tm_hour`: 4 bytes
print-type-size     field `.tm_mday`: 4 bytes
print-type-size     field `.tm_mon`: 4 bytes
print-type-size     field `.tm_year`: 4 bytes
print-type-size     field `.tm_wday`: 4 bytes
print-type-size     field `.tm_yday`: 4 bytes
print-type-size     field `.tm_isdst`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.tm_gmtoff`: 8 bytes, alignment: 8 bytes
print-type-size     field `.tm_zone`: 8 bytes
print-type-size type: `unix::notbsd::addrinfo`: 48 bytes, alignment: 8 bytes
print-type-size     field `.ai_flags`: 4 bytes
print-type-size     field `.ai_family`: 4 bytes
print-type-size     field `.ai_socktype`: 4 bytes
print-type-size     field `.ai_protocol`: 4 bytes
print-type-size     field `.ai_addrlen`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ai_addr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ai_canonname`: 8 bytes
print-type-size     field `.ai_next`: 8 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::ipc_perm`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__key`: 4 bytes
print-type-size     field `.uid`: 4 bytes
print-type-size     field `.gid`: 4 bytes
print-type-size     field `.cuid`: 4 bytes
print-type-size     field `.cgid`: 4 bytes
print-type-size     field `.mode`: 2 bytes
print-type-size     field `.__pad1`: 2 bytes
print-type-size     field `.__seq`: 2 bytes
print-type-size     field `.__pad2`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.__unused1`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__unused2`: 8 bytes
print-type-size type: `unix::notbsd::linux::passwd`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pw_name`: 8 bytes
print-type-size     field `.pw_passwd`: 8 bytes
print-type-size     field `.pw_uid`: 4 bytes
print-type-size     field `.pw_gid`: 4 bytes
print-type-size     field `.pw_gecos`: 8 bytes
print-type-size     field `.pw_dir`: 8 bytes
print-type-size     field `.pw_shell`: 8 bytes
print-type-size type: `unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `unix::group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.gr_name`: 8 bytes
print-type-size     field `.gr_passwd`: 8 bytes
print-type-size     field `.gr_gid`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.gr_mem`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::hostent`: 32 bytes, alignment: 8 bytes
print-type-size     field `.h_name`: 8 bytes
print-type-size     field `.h_aliases`: 8 bytes
print-type-size     field `.h_addrtype`: 4 bytes
print-type-size     field `.h_length`: 4 bytes
print-type-size     field `.h_addr_list`: 8 bytes
print-type-size type: `unix::notbsd::Dl_info`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dli_fname`: 8 bytes
print-type-size     field `.dli_fbase`: 8 bytes
print-type-size     field `.dli_sname`: 8 bytes
print-type-size     field `.dli_saddr`: 8 bytes
print-type-size type: `unix::notbsd::linux::msginfo`: 32 bytes, alignment: 4 bytes
print-type-size     field `.msgpool`: 4 bytes
print-type-size     field `.msgmap`: 4 bytes
print-type-size     field `.msgmax`: 4 bytes
print-type-size     field `.msgmnb`: 4 bytes
print-type-size     field `.msgmni`: 4 bytes
print-type-size     field `.msgssz`: 4 bytes
print-type-size     field `.msgtql`: 4 bytes
print-type-size     field `.msgseg`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `unix::notbsd::linux::other::flock`: 32 bytes, alignment: 8 bytes
print-type-size     field `.l_type`: 2 bytes
print-type-size     field `.l_whence`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.l_start`: 8 bytes, alignment: 8 bytes
print-type-size     field `.l_len`: 8 bytes
print-type-size     field `.l_pid`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::notbsd::linux::other::sem_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.__size`: 32 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `unix::notbsd::linux::other::stack_t`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ss_sp`: 8 bytes
print-type-size     field `.ss_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ss_size`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::ipv6_mreq`: 20 bytes, alignment: 4 bytes
print-type-size     field `.ipv6mr_multiaddr`: 16 bytes
print-type-size     field `.ipv6mr_interface`: 4 bytes
print-type-size type: `unix::notbsd::sockaddr_ll`: 20 bytes, alignment: 4 bytes
print-type-size     field `.sll_family`: 2 bytes
print-type-size     field `.sll_protocol`: 2 bytes
print-type-size     field `.sll_ifindex`: 4 bytes
print-type-size     field `.sll_hatype`: 2 bytes
print-type-size     field `.sll_pkttype`: 1 bytes
print-type-size     field `.sll_halen`: 1 bytes
print-type-size     field `.sll_addr`: 8 bytes
print-type-size type: `unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `unix::iovec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iov_base`: 8 bytes
print-type-size     field `.iov_len`: 8 bytes
print-type-size type: `unix::notbsd::linux::if_nameindex`: 16 bytes, alignment: 8 bytes
print-type-size     field `.if_index`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.if_name`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::_libc_fpxreg`: 16 bytes, alignment: 2 bytes
print-type-size     field `.significand`: 8 bytes
print-type-size     field `.exponent`: 2 bytes
print-type-size     field `.__private`: 6 bytes
print-type-size type: `unix::notbsd::linux::other::b64::x86_64::_libc_xmmreg`: 16 bytes, alignment: 4 bytes
print-type-size     field `.element`: 16 bytes
print-type-size type: `unix::notbsd::linux::rlimit64`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rlim_cur`: 8 bytes
print-type-size     field `.rlim_max`: 8 bytes
print-type-size type: `unix::notbsd::sockaddr`: 16 bytes, alignment: 2 bytes
print-type-size     field `.sa_family`: 2 bytes
print-type-size     field `.sa_data`: 14 bytes
print-type-size type: `unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `unix::rlimit`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rlim_cur`: 8 bytes
print-type-size     field `.rlim_max`: 8 bytes
print-type-size type: `unix::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `unix::timeval`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_usec`: 8 bytes
print-type-size type: `unix::utimbuf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.actime`: 8 bytes
print-type-size     field `.modtime`: 8 bytes
print-type-size type: `unix::notbsd::epoll_event`: 12 bytes, alignment: 1 bytes
print-type-size     field `.events`: 4 bytes
print-type-size     field `.u64`: 8 bytes
print-type-size type: `unix::notbsd::linux::other::ucred`: 12 bytes, alignment: 4 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size     field `.uid`: 4 bytes
print-type-size     field `.gid`: 4 bytes
print-type-size type: `unix::notbsd::sockaddr_nl`: 12 bytes, alignment: 4 bytes
print-type-size     field `.nl_family`: 2 bytes
print-type-size     field `.nl_pad`: 2 bytes
print-type-size     field `.nl_pid`: 4 bytes
print-type-size     field `.nl_groups`: 4 bytes
print-type-size type: `unix::ip_mreq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.imr_multiaddr`: 4 bytes
print-type-size     field `.imr_interface`: 4 bytes
print-type-size type: `unix::linger`: 8 bytes, alignment: 4 bytes
print-type-size     field `.l_onoff`: 4 bytes
print-type-size     field `.l_linger`: 4 bytes
print-type-size type: `unix::notbsd::linux::fsid_t`: 8 bytes, alignment: 4 bytes
print-type-size     field `.__val`: 8 bytes
print-type-size type: `unix::notbsd::linux::other::__timeval`: 8 bytes, alignment: 4 bytes
print-type-size     field `.tv_sec`: 4 bytes
print-type-size     field `.tv_usec`: 4 bytes
print-type-size type: `unix::pollfd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `.events`: 2 bytes
print-type-size     field `.revents`: 2 bytes
print-type-size type: `unix::winsize`: 8 bytes, alignment: 2 bytes
print-type-size     field `.ws_row`: 2 bytes
print-type-size     field `.ws_col`: 2 bytes
print-type-size     field `.ws_xpixel`: 2 bytes
print-type-size     field `.ws_ypixel`: 2 bytes
print-type-size type: `unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `unix::notbsd::linux::other::__exit_status`: 4 bytes, alignment: 2 bytes
print-type-size     field `.e_termination`: 2 bytes
print-type-size     field `.e_exit`: 2 bytes
print-type-size type: `unix::notbsd::linux::pthread_condattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `unix::notbsd::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `unix::notbsd::sched_param`: 4 bytes, alignment: 4 bytes
print-type-size     field `.sched_priority`: 4 bytes
print-type-size type: `c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `FILE`: 0 bytes, alignment: 1 bytes
print-type-size type: `fpos_t`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::DIR`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::locale_t`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::notbsd::linux::fpos64_t`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::notbsd::timezone`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::InternalNode<u8, std::vec::Vec<std::string::String>>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.data`: 296 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>`: 296 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 11 bytes
print-type-size     padding: 5 bytes
print-type-size     field `.vals`: 264 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `collections::btree::node::InternalNode<(&u8, &std::vec::Vec<std::string::String>), ()>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.data`: 192 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<(&u8, &std::vec::Vec<std::string::String>), ()>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 176 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<LanguageTag, Error>`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 175 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `LanguageTag`: 168 bytes, alignment: 8 bytes
print-type-size     field `.language`: 24 bytes
print-type-size     field `.extlangs`: 24 bytes
print-type-size     field `.script`: 24 bytes
print-type-size     field `.region`: 24 bytes
print-type-size     field `.variants`: 24 bytes
print-type-size     field `.extensions`: 24 bytes
print-type-size     field `.privateuse`: 24 bytes
print-type-size type: `std::iter::Zip<std::collections::btree_map::Iter<(&u8, &std::vec::Vec<std::string::String>), ()>, std::collections::btree_map::Iter<(&u8, &std::vec::Vec<std::string::String>), ()>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.a`: 72 bytes
print-type-size     field `.b`: 72 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 72 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.2`: 24 bytes, alignment: 8 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 72 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.2`: 24 bytes, alignment: 8 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::collections::btree_map::IntoIter<(&u8, &std::vec::Vec<std::string::String>), ()>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::IntoIter<u8, std::vec::Vec<std::string::String>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<(&u8, &std::vec::Vec<std::string::String>), ()>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<u8, std::vec::Vec<std::string::String>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Keys<u8, std::vec::Vec<std::string::String>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 72 bytes
print-type-size type: `std::collections::btree_map::Values<u8, std::vec::Vec<std::string::String>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 72 bytes
print-type-size type: `collections::btree::node::InsertResult<(&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 56 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 16 bytes
print-type-size         field `.2`: 0 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<(&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 56 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 16 bytes
print-type-size         field `.2`: 0 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `std::collections::btree_map::Entry<(&u8, &std::vec::Vec<std::string::String>), ()>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::collections::btree_map::Range<(&u8, &std::vec::Vec<std::string::String>), ()>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::collections::btree_map::Range<u8, std::vec::Vec<std::string::String>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::collections::btree_map::Entry<u8, std::vec::Vec<std::string::String>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<(&u8, &std::vec::Vec<std::string::String>), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<u8, std::vec::Vec<std::string::String>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.handle`: 32 bytes, alignment: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<std::string::String>, std::slice::Iter<std::string::String>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<u8>, std::slice::Iter<u8>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<(&u8, &std::vec::Vec<std::string::String>), ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<u8, std::vec::Vec<std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, &mut collections::btree::node::Root<(&u8, &std::vec::Vec<std::string::String>), ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, &mut collections::btree::node::Root<u8, std::vec::Vec<std::string::String>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<((&(&u8, &std::vec::Vec<std::string::String>), &()), (&(&u8, &std::vec::Vec<std::string::String>), &()))>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(u8, std::vec::Vec<std::string::String>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::vec::IntoIter<(&u8, &std::vec::Vec<std::string::String>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, (&u8, &std::vec::Vec<std::string::String>), (), collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<(&u8, &std::vec::Vec<std::string::String>), ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::BTreeMap<u8, std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::BTreeSet<(&u8, &std::vec::Vec<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(&u8, &std::vec::Vec<std::string::String>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<std::str::Chars>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:499:35: 505:31]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::StepBy<usize, std::ops::Range<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.step_by`: 8 bytes
print-type-size     field `.range`: 16 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(&u8, &std::vec::Vec<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:379:36: 379:89 self:&&LanguageTag, other:&&LanguageTag]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:(&(&u8, &std::vec::Vec<std::string::String>), &())]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&u8, &std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `collections::btree::node::Root<(&u8, &std::vec::Vec<std::string::String>), ()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `collections::btree::node::Root<u8, std::vec::Vec<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(&str, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, std::option::Option<&str>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(&u8, &std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<collections::btree::node::BoxedNode<(&u8, &std::vec::Vec<std::string::String>), ()>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<collections::btree::node::BoxedNode<u8, std::vec::Vec<std::string::String>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::string::String>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:351:33: 357:29]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&(&u8, &std::vec::Vec<std::string::String>), &())>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u8, &std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<((&u8, &std::vec::Vec<std::string::String>), ())>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &(&u8, &std::vec::Vec<std::string::String>))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(&str, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(&str, std::option::Option<&str>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(&u8, &std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:324:70: 326:14 language:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:336:68: 338:14 language:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:343:66: 345:14 region:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:456:60: 456:96 t:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::collections::btree_map::Iter<(&u8, &std::vec::Vec<std::string::String>), ()>, std::collections::btree_map::Iter<(&u8, &std::vec::Vec<std::string::String>), ()>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<(&u8, &std::vec::Vec<std::string::String>)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::str::Chars>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<(&u8, &std::vec::Vec<std::string::String>), ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<u8, std::vec::Vec<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (&u8, &std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<(&u8, &std::vec::Vec<std::string::String>), ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&(&str, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(&str, std::option::Option<&str>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(&u8, &std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<(&u8, &std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(&u8, &std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<(&u8, &std::vec::Vec<std::string::String>), ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u8, Error>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Error`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `DuplicateExtension`: 0 bytes
print-type-size     variant `EmptyExtension`: 0 bytes
print-type-size     variant `EmptyPrivateUse`: 0 bytes
print-type-size     variant `ForbiddenChar`: 0 bytes
print-type-size     variant `InvalidSubtag`: 0 bytes
print-type-size     variant `InvalidLanguage`: 0 bytes
print-type-size     variant `SubtagTooLong`: 0 bytes
print-type-size     variant `TooManyExtlangs`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:295:40: 295:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:351:33: 357:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:373:62: 373:96]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:461:44: 461:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:499:35: 505:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:516:28: 516:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:63:19: 63:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:67:19: 67:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs:72:11: 72:95]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(747) => std/8a732dca6b5bfa0e664f890723f35836::ascii[0]::{{impl}}[1]::eq_ignore_ascii_case[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1428) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[24]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1463) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[29]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1673) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[54]::eq[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1723) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::unwrap_unchecked[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1786) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1793) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Immut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Mut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, std::option::Option<&str>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&u8, &std::vec::Vec<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ((&u8, &std::vec::Vec<std::string::String>), ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (u8, std::vec::Vec<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&u8, &std::vec::Vec<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<(&u8, &std::vec::Vec<std::string::String>), ()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs:207:34: 207:68 b1:&u8, b2:&u8, b3:&u8]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs:166:34: 166:57 b1:&u8, b2:&u8]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs:194:48: 194:61 i:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-0.1.11/src/lib.rs:237:57: 237:70 i:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-normalization-0.1.2/src/normalize.rs:85:34: 102:6 a:&char, b:&char]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `core::slice::Repr<(char, &[(char, char)])>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(char, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(char, char, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(char, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[(char, char)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-normalization-0.1.2/src/normalize.rs:18:30: 22:6 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-normalization-0.1.2/src/normalize.rs:89:51: 93:18 b:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-normalization-0.1.2/src/tables.rs:2592:34: 2596:10 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-normalization-0.1.2/src/tables.rs:2722:28: 2730:11 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `decompose::DecompositionType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Canonical`: 0 bytes
print-type-size     variant `Compatible`: 0 bytes
print-type-size type: `recompose::RecompositionState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Composing`: 0 bytes
print-type-size     variant `Purging`: 0 bytes
print-type-size     variant `Finished`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Take<std::iter::Skip<std::str::CharIndices>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Skip<std::str::CharIndices>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Skip<std::str::CharIndices>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(usize, (usize, char))>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<char, range::Range<ParseStringError>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, range::Range<ParseStringError>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ReadToken`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `range::Range<ParseStringError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::slice::IterMut<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Take<std::str::Chars>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:32:18: 32:34]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Take<std::str::Chars>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:343:18: 343:34]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Take<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(char, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(char, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<range::Range>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `range::Range`: 16 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &mut u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<f64, ParseNumberError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u64, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::iter::Take<std::iter::Skip<std::str::CharIndices>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::IterMut<u32>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::str::Chars>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `NumberSettings`: 1 bytes, alignment: 1 bytes
print-type-size     field `.allow_underscore`: 1 bytes
print-type-size type: `ParseNumberError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ExpectedDigits`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size     variant `OverflowInfinity`: 0 bytes
print-type-size     variant `OverflowNegInfinity`: 0 bytes
print-type-size type: `ParseStringError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ExpectedFourHexadecimals`: 0 bytes
print-type-size     variant `ExpectedHexadecimal`: 0 bytes
print-type-size     variant `ExpectedValidUnicode`: 0 bytes
print-type-size     variant `ExpectedValidEscapeCharacter`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:32:18: 32:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:32:44: 32:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:343:18: 343:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:343:44: 343:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:32:44: 32:56], 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:32:18: 32:34]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:343:44: 343:56], 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/read_token-0.6.2/src/lib.rs:343:18: 343:34]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `OptGroup`: 104 bytes, alignment: 8 bytes
print-type-size     field `.short_name`: 24 bytes
print-type-size     field `.long_name`: 24 bytes
print-type-size     field `.hint`: 24 bytes
print-type-size     field `.desc`: 24 bytes
print-type-size     field `.hasarg`: 1 bytes
print-type-size     field `.occur`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `Matches`: 72 bytes, alignment: 8 bytes
print-type-size     field `.opts`: 24 bytes
print-type-size     field `.vals`: 24 bytes
print-type-size     field `.free`: 24 bytes
print-type-size type: `core::str::SplitInternal<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:523:36: 523:63]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Filter<std::str::Split<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:523:36: 523:63]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:524:37: 524:54]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::str::Split<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:523:36: 523:63]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `Opt`: 64 bytes, alignment: 8 bytes
print-type-size     field `.name`: 32 bytes
print-type-size     field `.hasarg`: 1 bytes
print-type-size     field `.occur`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.aliases`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:955:23: 1003:6 slice_start:&mut usize, lim:&usize, state:&mut SplitWithinState, last_start:&mut usize, ss:&&str, it:&mut [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:533:31: 536:14 desc_rows:&mut std::vec::Vec<std::string::String>], last_end:&mut usize]`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:523:36: 523:63]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:523:36: 523:63]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `Fail`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ArgumentMissing`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `UnrecognizedOption`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `OptionMissing`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `OptionDuplicated`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `UnexpectedArgument`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `Name`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Long`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Short`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `Options`: 32 bytes, alignment: 8 bytes
print-type-size     field `.grps`: 24 bytes
print-type-size     field `.parsing_style`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::FilterMap<std::vec::IntoIter<Optval>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:794:50: 799:10]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<OptGroup>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:458:41: 543:10 any_short:&bool, desc_sep:&std::string::String]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::option::Option<Optval>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<Optval>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `Optval`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Val`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<std::string::String>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:781:33: 786:10 self:&&Matches]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<Opt>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<OptGroup>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Optval>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<Optval>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:1005:27: 1005:52 machine:&mut [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:955:23: 1003:6 slice_start:&mut usize, lim:&usize, state:&mut SplitWithinState, last_start:&mut usize, ss:&&str, it:&mut [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:533:31: 536:14 desc_rows:&mut std::vec::Vec<std::string::String>], last_end:&mut usize], cont:&mut bool]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:458:41: 543:10 any_short:&bool, desc_sep:&std::string::String]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<Opt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<OptGroup>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Optval>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<Optval>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<Opt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<OptGroup>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Optval>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<Optval>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<Optval>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<Opt>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<OptGroup>, fn(&OptGroup) -> std::string::String {format_option}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::string::String>, [closure@DefId { krate: CrateNum(3), node: DefIndex(3263) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::concat[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::string::String>, [closure@DefId { krate: CrateNum(3), node: DefIndex(3271) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::join[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Repeat<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.element`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &Opt)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<Opt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<OptGroup>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<Optval>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:533:31: 536:14 desc_rows:&mut std::vec::Vec<std::string::String>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:771:26: 776:10 self:&&Matches]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:781:33: 786:10 self:&&Matches]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:832:36: 832:56 nm:&Name]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:839:46: 839:66 nm:&Name]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:840:41: 840:73 candidate:&&Opt]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<Opt>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Opt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const OptGroup>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Optval>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<Optval>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<&Opt>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&OptGroup>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&Optval>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<Optval>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Opt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<OptGroup>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Optval>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::vec::Vec<Optval>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `FailType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ArgumentMissing_`: 0 bytes
print-type-size     variant `UnrecognizedOption_`: 0 bytes
print-type-size     variant `OptionMissing_`: 0 bytes
print-type-size     variant `OptionDuplicated_`: 0 bytes
print-type-size     variant `UnexpectedArgument_`: 0 bytes
print-type-size type: `HasArg`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Yes`: 0 bytes
print-type-size     variant `No`: 0 bytes
print-type-size     variant `Maybe`: 0 bytes
print-type-size type: `LengthLimit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `UnderLim`: 0 bytes
print-type-size     variant `OverLim`: 0 bytes
print-type-size type: `Occur`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Req`: 0 bytes
print-type-size     variant `Optional`: 0 bytes
print-type-size     variant `Multi`: 0 bytes
print-type-size type: `ParsingStyle`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `FloatingFrees`: 0 bytes
print-type-size     variant `StopAtFirstFree`: 0 bytes
print-type-size type: `SplitWithinState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `A`: 0 bytes
print-type-size     variant `B`: 0 bytes
print-type-size     variant `C`: 0 bytes
print-type-size type: `Whitespace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ws`: 0 bytes
print-type-size     variant `Cr`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:454:46: 456:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:523:36: 523:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:524:37: 524:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:794:50: 799:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:fn(usize, usize) -> usize {<usize as std::ops::Add>::add}, 1:[closure@DefId { krate: CrateNum(3), node: DefIndex(3263) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::concat[0]::{{closure}}[0] }]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:fn(usize, usize) -> usize {<usize as std::ops::Add>::add}, 1:[closure@DefId { krate: CrateNum(3), node: DefIndex(3271) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::join[0]::{{closure}}[0] }]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(3263) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::concat[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(3271) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::join[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&Opt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&OptGroup>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&Optval>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Opt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<OptGroup>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Optval>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<Optval>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::CharEqPattern<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.14/src/lib.rs:523:36: 523:63]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `std::result::Result<std::option::Option<std::io::Error>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<std::time::Duration>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 28 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::time::Duration>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&tcp::TcpBuilder, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&udp::UdpBuilder, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<bool, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<i32, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<libc::linger, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<libc::timeval, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<socket::Socket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::net::TcpListener, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::net::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<u32>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<sys::Socket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<tcp::TcpBuilder, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u32, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<udp::UdpBuilder, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `libc::ipv6_mreq`: 20 bytes, alignment: 4 bytes
print-type-size     field `.ipv6mr_multiaddr`: 16 bytes
print-type-size     field `.ipv6mr_interface`: 4 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `libc::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::sockaddr`: 16 bytes, alignment: 2 bytes
print-type-size     field `.sa_family`: 2 bytes
print-type-size     field `.sa_data`: 14 bytes
print-type-size type: `libc::timeval`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_usec`: 8 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `std::cell::Ref<std::option::Option<socket::Socket>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefCell<std::option::Option<socket::Socket>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::RefMut<std::option::Option<socket::Socket>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::net::SocketAddrV4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::cell::Ref<std::option::Option<socket::Socket>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<std::option::Option<socket::Socket>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `tcp::TcpBuilder`: 16 bytes, alignment: 8 bytes
print-type-size     field `.socket`: 16 bytes
print-type-size type: `udp::UdpBuilder`: 16 bytes, alignment: 8 bytes
print-type-size     field `.socket`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1247:18: 1247:27 self:&&tcp::TcpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1257:18: 1257:27 self:&&tcp::TcpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1267:36: 1267:45 self:&&tcp::TcpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1305:18: 1305:27 self:&&udp::UdpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1315:18: 1315:27 self:&&udp::UdpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1325:36: 1325:45 self:&&udp::UdpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/tcp.rs:68:26: 70:10 backlog:&i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/tcp.rs:70:21: 72:10 self:&&tcp::TcpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/unix.rs:25:41: 25:50 self:&&tcp::TcpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/unix.rs:50:41: 50:50 self:&&udp::UdpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `libc::ip_mreq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.imr_multiaddr`: 4 bytes
print-type-size     field `.imr_interface`: 4 bytes
print-type-size type: `libc::linger`: 8 bytes, alignment: 4 bytes
print-type-size     field `.l_onoff`: 4 bytes
print-type-size     field `.l_linger`: 4 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<socket::Socket>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&socket::Socket>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<socket::Socket>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::net::TcpListener>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::net::TcpStream>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `libc::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `socket::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::net::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::net::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys_common::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::net::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `sys::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1056:36: 1056:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1066:37: 1066:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1080:85: 1080:99]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1098:22: 1098:36]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1135:12: 1135:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:1209:18: 1209:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:671:33: 671:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:772:36: 772:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:782:37: 782:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:791:18: 791:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:963:18: 963:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/ext.rs:980:18: 980:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/socket.rs:35:61: 35:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/socket.rs:41:61: 41:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/socket.rs:48:64: 48:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/tcp.rs:103:45: 103:81]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.26/src/tcp.rs:116:18: 116:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `state::Rasterizer`: 28 bytes, alignment: 4 bytes
print-type-size     field `.front_face`: 1 bytes
print-type-size     field `.cull_face`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.method`: 8 bytes, alignment: 4 bytes
print-type-size     field `.offset`: 12 bytes
print-type-size     field `.samples`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `state::RefValues`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stencil`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.blend`: 16 bytes, alignment: 4 bytes
print-type-size type: `bitflags::<unnamed>::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `state::Color`: 12 bytes, alignment: 1 bytes
print-type-size     field `.mask`: 1 bytes
print-type-size     field `.blend`: 11 bytes
print-type-size type: `state::Stencil`: 12 bytes, alignment: 1 bytes
print-type-size     field `.front`: 6 bytes
print-type-size     field `.back`: 6 bytes
print-type-size type: `std::option::Option<state::Offset>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<state::Blend>`: 11 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 10 bytes
print-type-size         field `.0`: 10 bytes
print-type-size type: `state::Blend`: 10 bytes, alignment: 1 bytes
print-type-size     field `.color`: 5 bytes
print-type-size     field `.alpha`: 5 bytes
print-type-size type: `state::Offset`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size type: `state::RasterMethod`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Point`: 0 bytes
print-type-size     variant `Line`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fill`: 0 bytes
print-type-size type: `std::option::Option<&f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `target::Rect`: 8 bytes, alignment: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size     field `.w`: 2 bytes
print-type-size     field `.h`: 2 bytes
print-type-size type: `state::StencilSide`: 6 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.mask_read`: 1 bytes
print-type-size     field `.mask_write`: 1 bytes
print-type-size     field `.op_fail`: 1 bytes
print-type-size     field `.op_depth_fail`: 1 bytes
print-type-size     field `.op_pass`: 1 bytes
print-type-size type: `state::BlendChannel`: 5 bytes, alignment: 1 bytes
print-type-size     field `.equation`: 1 bytes
print-type-size     field `.source`: 2 bytes
print-type-size     field `.destination`: 2 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `state::Depth`: 2 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size type: `state::Factor`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `SourceAlphaSaturated`: 0 bytes
print-type-size     variant `ZeroPlus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `OneMinus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `<state::ColorMask as std::fmt::Debug>::fmt::dummy::ColorMask`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `<target::Mirror as std::fmt::Debug>::fmt::dummy::Mirror`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `state::BlendValue`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SourceColor`: 0 bytes
print-type-size     variant `SourceAlpha`: 0 bytes
print-type-size     variant `DestColor`: 0 bytes
print-type-size     variant `DestAlpha`: 0 bytes
print-type-size     variant `ConstColor`: 0 bytes
print-type-size     variant `ConstAlpha`: 0 bytes
print-type-size type: `state::ColorMask`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `state::Comparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Never`: 0 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `LessEqual`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `GreaterEqual`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size     variant `NotEqual`: 0 bytes
print-type-size     variant `Always`: 0 bytes
print-type-size type: `state::CullFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nothing`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `state::Equation`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Sub`: 0 bytes
print-type-size     variant `RevSub`: 0 bytes
print-type-size     variant `Min`: 0 bytes
print-type-size     variant `Max`: 0 bytes
print-type-size type: `state::FrontFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Clockwise`: 0 bytes
print-type-size     variant `CounterClockwise`: 0 bytes
print-type-size type: `state::StencilOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Keep`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Replace`: 0 bytes
print-type-size     variant `IncrementClamp`: 0 bytes
print-type-size     variant `IncrementWrap`: 0 bytes
print-type-size     variant `DecrementClamp`: 0 bytes
print-type-size     variant `DecrementWrap`: 0 bytes
print-type-size     variant `Invert`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::option::Option<state::MultiSample>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `target::Mirror`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `bitflags::<unnamed>::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `state::MultiSample`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 232 bytes
print-type-size type: `std::sys::imp::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.env`: 40 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.envp`: 24 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.closures`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stdin`: 12 bytes
print-type-size     field `.stdout`: 12 bytes
print-type-size     field `.stderr`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `VersionMeta`: 200 bytes, alignment: 8 bytes
print-type-size     field `.semver`: 72 bytes
print-type-size     field `.commit_hash`: 24 bytes
print-type-size     field `.commit_date`: 24 bytes
print-type-size     field `.build_date`: 24 bytes
print-type-size     field `.channel`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.host`: 24 bytes, alignment: 8 bytes
print-type-size     field `.short_version_string`: 24 bytes
print-type-size type: `std::result::Result<semver::Version, semver::ParseError>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `semver::ParseError`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NonAsciiIdentifier`: 0 bytes
print-type-size     variant `IncorrectParse`: 96 bytes
print-type-size         field `.0`: 72 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `GenericFailure`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Map<std::str::SplitTerminator<char>, core::str::LinesAnyMap>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::str::Lines`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::str::SplitTerminator<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `semver::Version`: 72 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size     field `.pre`: 24 bytes
print-type-size     field `.build`: 24 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.stdout`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `semver::version_req::Predicate`: 48 bytes, alignment: 8 bytes
print-type-size     field `.op`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.major`: 8 bytes, alignment: 8 bytes
print-type-size     field `.minor`: 16 bytes
print-type-size     field `.patch`: 16 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(std::ffi::OsString, (usize, std::ffi::CString))>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::option::Option<std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `semver::Identifier`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Numeric`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AlphaNumeric`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::ffi::OsString, (usize, std::ffi::CString)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<semver::VersionReq, semver::ReqParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `semver::VersionReq`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 24 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::ffi::OsString, (usize, std::ffi::CString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<*const i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<semver::Identifier>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<semver::version_req::Predicate>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<semver::Identifier>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<semver::version_req::Predicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<semver::Identifier>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<semver::version_req::Predicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::ffi::OsString, (usize, std::ffi::CString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::option::Option<std::sys::imp::process::Stdio>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const &str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const *const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const semver::Identifier>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const semver::version_req::Predicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<semver::Identifier>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<semver::version_req::Predicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sys::imp::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `semver::version_req::Op`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ex`: 0 bytes
print-type-size     variant `Gt`: 0 bytes
print-type-size     variant `GtEq`: 0 bytes
print-type-size     variant `Lt`: 0 bytes
print-type-size     variant `LtEq`: 0 bytes
print-type-size     variant `Tilde`: 0 bytes
print-type-size     variant `Compatible`: 0 bytes
print-type-size     variant `Wildcard`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Channel`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Dev`: 0 bytes
print-type-size     variant `Nightly`: 0 bytes
print-type-size     variant `Beta`: 0 bytes
print-type-size     variant `Stable`: 0 bytes
print-type-size type: `semver::ReqParseError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidVersionRequirement`: 0 bytes
print-type-size     variant `OpAlreadySet`: 0 bytes
print-type-size     variant `InvalidSigil`: 0 bytes
print-type-size     variant `VersionComponentsMustBeNumeric`: 0 bytes
print-type-size     variant `MajorVersionRequired`: 0 bytes
print-type-size     variant `UnimplementedVersionRequirement`: 0 bytes
print-type-size type: `semver::version_req::WildcardVersion`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Major`: 0 bytes
print-type-size     variant `Minor`: 0 bytes
print-type-size     variant `Patch`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc_version-0.1.7/src/lib.rs:104:51: 104:77]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc_version-0.1.7/src/lib.rs:109:25: 109:79]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::str::LinesAnyMap`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, (usize, std::ffi::CString))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<semver::Identifier>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<semver::version_req::Predicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<u32, huffman::HuffmanCodeSymbol>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::Entry<u32, huffman::HuffmanCodeSymbol>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::iter::Enumerate<HeaderTableIter>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 64 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `HeaderTable`: 64 bytes, alignment: 8 bytes
print-type-size     field `.static_table`: 16 bytes
print-type-size     field `.dynamic_table`: 48 bytes
print-type-size type: `HeaderTableIter`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `decoder::Decoder`: 64 bytes, alignment: 8 bytes
print-type-size     field `.header_table`: 64 bytes
print-type-size type: `encoder::Encoder`: 64 bytes, alignment: 8 bytes
print-type-size     field `.header_table`: 64 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<u32, huffman::HuffmanCodeSymbol, &std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<u32, huffman::HuffmanCodeSymbol, std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<u32, huffman::HuffmanCodeSymbol>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.elem`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.elem`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::slice::Iter<(&[u8], &[u8])>, fn(&(&[u8], &[u8])) -> (&[u8], &[u8])>, DynamicTableIter>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 32 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<((std::vec::Vec<u8>, std::vec::Vec<u8>), usize), decoder::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::collections::hash::table::Bucket<u32, huffman::HuffmanCodeSymbol, std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, huffman::HuffmanCodeSymbol, std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `DynamicTable`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.max_size`: 8 bytes
print-type-size type: `huffman::HuffmanDecoder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 40 bytes
print-type-size     field `.eos_codepoint`: 8 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<u32, huffman::HuffmanCodeSymbol, &std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<(u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `log::LogLocation`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__module_path`: 16 bytes
print-type-size     field `.__file`: 16 bytes
print-type-size     field `.__line`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<u32, huffman::HuffmanCodeSymbol, &std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<u32, huffman::HuffmanCodeSymbol>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.elem`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, (&[u8], &[u8]))>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<(&[u8], &[u8]), decoder::DecoderError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `std::result::Result<(std::vec::Vec<u8>, usize), decoder::DecoderError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `DynamicTableIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `huffman::BitIterator<std::slice::Iter<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buffer_iterator`: 16 bytes
print-type-size     field `.current_byte`: 8 bytes
print-type-size     field `.pos`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::collections::VecDeque<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size type: `std::collections::hash::table::Bucket<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<u32, huffman::HuffmanCodeSymbol, &std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, huffman::HuffmanCodeSymbol, &std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, &mut std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, &std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<u32, huffman::HuffmanCodeSymbol>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::vec_deque::Iter<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ring`: 16 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::option::Option<(&[u8], &[u8])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<u32, huffman::HuffmanCodeSymbol, &std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &mut std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>, &std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>, decoder::DecoderError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, huffman::HuffmanDecoderError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawTable<u32, huffman::HuffmanCodeSymbol>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(u32, u8)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(&[u8], &[u8])>, fn(&(&[u8], &[u8])) -> (&[u8], &[u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::option::Option<(usize, bool)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(usize, usize), decoder::DecoderError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(&[u8], &[u8])>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(u32, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<u32, huffman::HuffmanCodeSymbol>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &(u32, u8))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(&[u8], &[u8])>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(u32, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `std::option::Option<(u32, huffman::HuffmanCodeSymbol)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(u32, u8)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1456) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search_mut[0]::{{closure}}[0] } 0:&&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<HeaderTableIter>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<(u32, u8)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `log::LogLevel`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `log::LogLevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&(&[u8], &[u8])>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(u32, u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&huffman::HuffmanCodeSymbol>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `decoder::DecoderError`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `HeaderIndexOutOfBounds`: 0 bytes
print-type-size     variant `IntegerDecodingError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `StringDecodingError`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `InvalidMaxDynamicSize`: 0 bytes
print-type-size type: `std::option::Option<huffman::HuffmanCodeSymbol>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `decoder::StringDecodingError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `HuffmanDecoderError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `huffman::HuffmanCodeSymbol`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Symbol`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `EndOfString`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `decoder::FieldRepresentation`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Indexed`: 0 bytes
print-type-size     variant `LiteralWithIncrementalIndexing`: 0 bytes
print-type-size     variant `SizeUpdate`: 0 bytes
print-type-size     variant `LiteralNeverIndexed`: 0 bytes
print-type-size     variant `LiteralWithoutIndexing`: 0 bytes
print-type-size type: `decoder::IntegerDecodingError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TooManyOctets`: 0 bytes
print-type-size     variant `ValueTooLarge`: 0 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `InvalidPrefix`: 0 bytes
print-type-size type: `huffman::HuffmanDecoderError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PaddingTooLarge`: 0 bytes
print-type-size     variant `InvalidPadding`: 0 bytes
print-type-size     variant `EOSInString`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::iter::ChainState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `std::num::Wrapping<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1565) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get_mut[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&[u8], &[u8])>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(u32, u8)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u32, huffman::HuffmanCodeSymbol)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u8, std::collections::HashMap<u32, huffman::HuffmanCodeSymbol>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, bool>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, bool>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, bool>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::iter::Map<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.1.0/src/lib.rs:30:52: 30:64]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, bool>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::collections::HashMap<std::string::String, bool>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::io::BufReader<std::fs::File>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.buf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::io::Lines<std::io::BufReader<std::fs::File>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 40 bytes
print-type-size type: `std::iter::FilterMap<std::io::Lines<std::io::BufReader<std::fs::File>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.1.0/src/lib.rs:29:43: 29:63]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<std::string::String, std::io::Error>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::option::Option<(std::string::String, bool)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::string::String, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[u8], std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::append_to_string::Guard`: 16 bytes, alignment: 8 bytes
print-type-size     field `.s`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::str::Chars>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sys::imp::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_flags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4266) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::BufRead[0]::read_line[0]::{{closure}}[0] } 0:&mut &mut std::io::BufReader<std::fs::File>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const &str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.1.0/src/lib.rs:29:43: 29:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.1.0/src/lib.rs:30:52: 30:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4161) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::append_to_string[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, bool)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<semver::Version, semver::ParseError>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `semver::ParseError`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NonAsciiIdentifier`: 0 bytes
print-type-size     variant `IncorrectParse`: 96 bytes
print-type-size         field `.0`: 72 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `GenericFailure`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `semver::Version`: 72 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size     field `.pre`: 24 bytes
print-type-size     field `.build`: 24 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `semver::Identifier`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Numeric`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AlphaNumeric`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<semver::Identifier>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<semver::Identifier>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<semver::Identifier>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::nonzero::NonZero<*const semver::Identifier>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Unique<semver::Identifier>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<semver::Identifier>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `mem::epoch::global::EpochState`: 1032 bytes, alignment: 8 bytes
print-type-size     field `.epoch`: 256 bytes
print-type-size     field `.garbage`: 768 bytes
print-type-size     field `.participants`: 8 bytes
print-type-size type: `mem::cache_padded::CachePadded<mem::epoch::garbage::ConcBag>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.data`: 256 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `mem::cache_padded::CachePadded<mem::epoch::participant::Participant>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.data`: 256 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `mem::cache_padded::CachePadded<std::sync::atomic::AtomicUsize>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.data`: 256 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `mem::epoch::participants::ParticipantNode`: 256 bytes, alignment: 8 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `std::cell::UnsafeCell<[usize; 32]>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.value`: 256 bytes
print-type-size type: `mem::epoch::participant::Participant`: 104 bytes, alignment: 8 bytes
print-type-size     field `.epoch`: 8 bytes
print-type-size     field `.in_critical`: 8 bytes
print-type-size     field `.garbage`: 72 bytes
print-type-size     field `.active`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.next`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<std::thread::Inner>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `mem::epoch::garbage::Local`: 72 bytes, alignment: 8 bytes
print-type-size     field `.old`: 24 bytes
print-type-size     field `.cur`: 24 bytes
print-type-size     field `.new`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<mem::epoch::garbage::Local>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::thread::Inner`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.lock`: 16 bytes
print-type-size     field `.cvar`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_cond_t>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::sys::imp::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::sys_common::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `mem::cache_padded::Padding`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size     field `.2`: 8 bytes
print-type-size     field `.3`: 8 bytes
print-type-size type: `mem::epoch::garbage::Node`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `scoped::JoinState`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Running`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `scoped::Scope`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dtors`: 32 bytes
print-type-size type: `std::cell::RefCell<std::option::Option<scoped::DtorChain>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::thread::JoinHandle<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::thread::JoinInner<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.native`: 16 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.packet`: 8 bytes
print-type-size type: `mem::epoch::garbage::Bag`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `mem::epoch::participants::Iter`: 24 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `.needs_acq`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `scoped::DtorChain`: 24 bytes, alignment: 8 bytes
print-type-size     field `.dtor`: 16 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<scoped::DtorChain>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::option::Option<scoped::DtorChain>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::thread::Key<mem::epoch::local::LocalEpoch>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.dtor_registered`: 1 bytes
print-type-size     field `.dtor_running`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::vec::Vec<mem::epoch::garbage::Item>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<mem::epoch::garbage::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<mem::cache_padded::CachePadded<mem::epoch::garbage::ConcBag>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<mem::epoch::garbage::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `mem::epoch::garbage::Item`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.free`: 8 bytes
print-type-size type: `std::cell::RefMut<std::option::Option<scoped::DtorChain>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<mem::epoch::local::LocalEpoch>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<*mut mem::epoch::participants::ParticipantNode>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<mem::epoch::local::LocalEpoch>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sys::imp::thread::Thread>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), Box<std::any::Any + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<*mut mem::epoch::garbage::Node, *mut mem::epoch::garbage::Node>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<*mut mem::epoch::participants::ParticipantNode, *mut mem::epoch::participants::ParticipantNode>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<mem::epoch::Shared<mem::epoch::participants::ParticipantNode>, mem::epoch::Owned<mem::epoch::participants::ParticipantNode>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<std::option::Option<scoped::DtorChain>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<mem::cache_padded::CachePadded<mem::epoch::garbage::ConcBag>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<mem::epoch::garbage::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Condvar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size type: `std::sync::Mutex<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::thread::LocalKey<mem::epoch::local::LocalEpoch>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const mem::epoch::garbage::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `mem::epoch::Owned<mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `mem::epoch::Shared<mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `mem::epoch::atomic::Atomic<mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `mem::epoch::garbage::ConcBag`: 8 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size type: `mem::epoch::local::LocalEpoch`: 8 bytes, alignment: 8 bytes
print-type-size     field `.participant`: 8 bytes
print-type-size type: `mem::epoch::participants::Participants`: 8 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut mem::epoch::garbage::Node>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&mem::cache_padded::CachePadded<mem::epoch::garbage::ConcBag>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mem::epoch::garbage::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mem::epoch::local::LocalEpoch>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mem::epoch::participant::Participant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<mem::epoch::local::LocalEpoch>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<Box<scoped::DtorChain>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<mem::epoch::Shared<mem::epoch::participants::ParticipantNode>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<mem::epoch::garbage::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<mem::epoch::garbage::Node>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::imp::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `std::thread::Packet<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::fmt::FlagV1`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SignPlus`: 0 bytes
print-type-size     variant `SignMinus`: 0 bytes
print-type-size     variant `Alternate`: 0 bytes
print-type-size     variant `SignAwareZeroPad`: 0 bytes
print-type-size type: `std::cell::Cell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/atomic.rs:22:13: 22:27]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/guard.rs:24:29: 36:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/guard.rs:48:33: 48:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/guard.rs:54:33: 54:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/local.rs:37:22: 37:36 f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/guard.rs:24:29: 36:6]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/local.rs:37:22: 37:36 f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/guard.rs:48:33: 48:56]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/local.rs:37:22: 37:36 f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/mem/epoch/guard.rs:54:33: 54:45]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-0.2.10/src/scoped.rs:92:51: 92:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `mem::epoch::guard::Guard`: 0 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mem::cache_padded::CachePadded<mem::epoch::garbage::ConcBag>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mem::epoch::garbage::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<mem::epoch::garbage::ConcBag>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<mem::epoch::garbage::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<mem::epoch::participant::Participant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::atomic::AtomicUsize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::iter::FlatMap<std::iter::Cloned<std::slice::Iter<std::ops::Range<usize>>>, std::ops::Range<usize>, fn(std::ops::Range<usize>) -> std::ops::Range<usize>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/lib.rs:726:58: 726:72 classes:&&mut [tables::BidiClass]]>, fn(&tables::BidiClass) -> bool {prepare::not_removed_by_x9}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::FlatMap<std::iter::Cloned<std::slice::Iter<std::ops::Range<usize>>>, std::ops::Range<usize>, fn(std::ops::Range<usize>) -> std::ops::Range<usize>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/lib.rs:726:58: 726:72 classes:&&mut [tables::BidiClass]]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `BidiInfo`: 72 bytes, alignment: 8 bytes
print-type-size     field `.classes`: 24 bytes
print-type-size     field `.levels`: 24 bytes
print-type-size     field `.paragraphs`: 24 bytes
print-type-size type: `std::iter::FlatMap<std::iter::Cloned<std::slice::Iter<std::ops::Range<usize>>>, std::ops::Range<usize>, fn(std::ops::Range<usize>) -> std::ops::Range<usize>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.frontiter`: 24 bytes
print-type-size     field `.backiter`: 24 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<std::ops::Range<usize>>, std::ops::Range<usize>, fn(&std::ops::Range<usize>) -> std::ops::Range<usize> {<std::ops::Range<usize> as std::clone::Clone>::clone}>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.frontiter`: 24 bytes
print-type-size     field `.backiter`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<std::vec::Vec<std::ops::Range<usize>>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/lib.rs:584:42: 613:10 levels:&&[u8], initial_classes:&&[tables::BidiClass], para_level:&u8]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `InitialProperties`: 48 bytes, alignment: 8 bytes
print-type-size     field `.initial_classes`: 24 bytes
print-type-size     field `.paragraphs`: 24 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `prepare::IsolatingRunSequence`: 32 bytes, alignment: 8 bytes
print-type-size     field `.runs`: 24 bytes
print-type-size     field `.sos`: 1 bytes
print-type-size     field `.eos`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Filter<std::iter::Rev<std::vec::IntoIter<std::vec::Vec<std::ops::Range<usize>>>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/lib.rs:580:57: 580:76]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Rev<std::vec::IntoIter<std::vec::Vec<std::ops::Range<usize>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::option::Option<prepare::IsolatingRunSequence>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::vec::IntoIter<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::vec::Vec<std::ops::Range<usize>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `ParagraphInfo`: 24 bytes, alignment: 8 bytes
print-type-size     field `.range`: 16 bytes
print-type-size     field `.level`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/lib.rs:584:42: 613:10 levels:&&[u8], initial_classes:&&[tables::BidiClass], para_level:&u8]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `explicit::DirectionalStatusStack`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<<std::ops::Range<usize> as std::iter::IntoIterator>::IntoIter>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ops::Range<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::vec::Vec<std::ops::Range<usize>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<ParagraphInfo>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<explicit::Status>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<prepare::IsolatingRunSequence>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ops::Range<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<std::ops::Range<usize>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<tables::BidiClass>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ParagraphInfo>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<explicit::Status>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<prepare::IsolatingRunSequence>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<std::ops::Range<usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<tables::BidiClass>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(char, char, tables::BidiClass)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ParagraphInfo>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<explicit::Status>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<prepare::IsolatingRunSequence>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<std::ops::Range<usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<tables::BidiClass>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<std::ops::Range<usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<tables::BidiClass>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<tables::BidiClass>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Rev<std::str::Chars>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<tables::BidiClass>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.n`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.n`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &tables::BidiClass)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<ParagraphInfo>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<prepare::IsolatingRunSequence>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<tables::BidiClass>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/lib.rs:726:58: 726:72 classes:&&mut [tables::BidiClass]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/tables.rs:47:34: 51:10 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<tables::BidiClass>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ParagraphInfo>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const explicit::Status>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const prepare::IsolatingRunSequence>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::ops::Range<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<std::ops::Range<usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const tables::BidiClass>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&ParagraphInfo>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&explicit::Status>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::ops::Range<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&prepare::IsolatingRunSequence>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::ops::Range<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&tables::BidiClass>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<std::ops::Range<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<std::ops::Range<usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ParagraphInfo>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<explicit::Status>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<prepare::IsolatingRunSequence>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ops::Range<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::vec::Vec<std::ops::Range<usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<tables::BidiClass>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<explicit::Status>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `explicit::Status`: 2 bytes, alignment: 1 bytes
print-type-size     field `.level`: 1 bytes
print-type-size     field `.status`: 1 bytes
print-type-size type: `std::option::Option<tables::BidiClass>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `explicit::OverrideStatus`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Neutral`: 0 bytes
print-type-size     variant `RTL`: 0 bytes
print-type-size     variant `LTR`: 0 bytes
print-type-size     variant `Isolate`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::iter::Repeat<tables::BidiClass>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.element`: 1 bytes
print-type-size type: `std::iter::Repeat<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.element`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `tables::BidiClass`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `AL`: 0 bytes
print-type-size     variant `AN`: 0 bytes
print-type-size     variant `B`: 0 bytes
print-type-size     variant `BN`: 0 bytes
print-type-size     variant `CS`: 0 bytes
print-type-size     variant `EN`: 0 bytes
print-type-size     variant `ES`: 0 bytes
print-type-size     variant `ET`: 0 bytes
print-type-size     variant `FSI`: 0 bytes
print-type-size     variant `L`: 0 bytes
print-type-size     variant `LRE`: 0 bytes
print-type-size     variant `LRI`: 0 bytes
print-type-size     variant `LRO`: 0 bytes
print-type-size     variant `NSM`: 0 bytes
print-type-size     variant `ON`: 0 bytes
print-type-size     variant `PDF`: 0 bytes
print-type-size     variant `PDI`: 0 bytes
print-type-size     variant `R`: 0 bytes
print-type-size     variant `RLE`: 0 bytes
print-type-size     variant `RLI`: 0 bytes
print-type-size     variant `RLO`: 0 bytes
print-type-size     variant `S`: 0 bytes
print-type-size     variant `WS`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.2.3/src/lib.rs:580:57: 580:76]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4809) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[67]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ParagraphInfo>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&prepare::IsolatingRunSequence>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::ops::Range<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&tables::BidiClass>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ParagraphInfo>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<explicit::Status>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<prepare::IsolatingRunSequence>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ops::Range<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<std::ops::Range<usize>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<tables::BidiClass>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `bit_reader::BrotliBitReader`: 24 bytes, alignment: 8 bytes
print-type-size     field `.val_`: 8 bytes
print-type-size     field `.bit_pos_`: 4 bytes
print-type-size     field `.next_in`: 4 bytes
print-type-size     field `.avail_in`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `bit_reader::BrotliBitReaderState`: 24 bytes, alignment: 8 bytes
print-type-size     field `.val_`: 8 bytes
print-type-size     field `.bit_pos_`: 4 bytes
print-type-size     field `.next_in`: 4 bytes
print-type-size     field `.avail_in`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::iter::Enumerate<core::slice::IterMut<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<(usize, &mut u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::slice::Iter<core::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::IterMut<huffman::HuffmanCode>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::IterMut<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Repr<huffman::HuffmanCode>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut core::iter::Enumerate<core::slice::IterMut<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `core::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&mut huffman::HuffmanCode>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `prefix::CmdLutElement`: 8 bytes, alignment: 2 bytes
print-type-size     field `.insert_len_extra_bits`: 1 bytes
print-type-size     field `.copy_len_extra_bits`: 1 bytes
print-type-size     field `.distance_code`: 1 bytes
print-type-size     field `.context`: 1 bytes
print-type-size     field `.insert_len_offset`: 2 bytes
print-type-size     field `.copy_len_offset`: 2 bytes
print-type-size type: `huffman::HuffmanCode`: 4 bytes, alignment: 2 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.value`: 2 bytes, alignment: 2 bytes
print-type-size type: `prefix::PrefixCodeRange`: 4 bytes, alignment: 2 bytes
print-type-size     field `.offset`: 2 bytes
print-type-size     field `.nbits`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `transform::Transform`: 3 bytes, alignment: 1 bytes
print-type-size     field `.prefix_id`: 1 bytes
print-type-size     field `.transform`: 1 bytes
print-type-size     field `.suffix_id`: 1 bytes
print-type-size type: `context::ContextType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `CONTEXT_LSB6`: 0 bytes
print-type-size     variant `CONTEXT_MSB6`: 0 bytes
print-type-size     variant `CONTEXT_UTF8`: 0 bytes
print-type-size     variant `CONTEXT_SIGNED`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `decode::BrotliResult`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ResultSuccess`: 0 bytes
print-type-size     variant `NeedsMoreInput`: 0 bytes
print-type-size     variant `NeedsMoreOutput`: 0 bytes
print-type-size     variant `ResultFailure`: 0 bytes
print-type-size type: `state::BrotliRunningContextMapState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MAP_NONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MAP_READ_PREFIX`: 0 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MAP_HUFFMAN`: 0 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MAP_DECODE`: 0 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MAP_TRANSFORM`: 0 bytes
print-type-size type: `state::BrotliRunningDecodeUint8State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_DECODE_UINT8_NONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_DECODE_UINT8_SHORT`: 0 bytes
print-type-size     variant `BROTLI_STATE_DECODE_UINT8_LONG`: 0 bytes
print-type-size type: `state::BrotliRunningHuffmanState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_NONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_SIMPLE_SIZE`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_SIMPLE_READ`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_SIMPLE_BUILD`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_COMPLEX`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_LENGTH_SYMBOLS`: 0 bytes
print-type-size type: `state::BrotliRunningMetablockHeaderState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_NONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_EMPTY`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_NIBBLES`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_SIZE`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_UNCOMPRESSED`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_RESERVED`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_BYTES`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_METADATA`: 0 bytes
print-type-size type: `state::BrotliRunningReadBlockLengthState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_READ_BLOCK_LENGTH_NONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_READ_BLOCK_LENGTH_SUFFIX`: 0 bytes
print-type-size type: `state::BrotliRunningState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_UNINITED`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_BEGIN`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_HEADER_2`: 0 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MODES`: 0 bytes
print-type-size     variant `BROTLI_STATE_COMMAND_BEGIN`: 0 bytes
print-type-size     variant `BROTLI_STATE_COMMAND_INNER`: 0 bytes
print-type-size     variant `BROTLI_STATE_COMMAND_POST_DECODE_LITERALS`: 0 bytes
print-type-size     variant `BROTLI_STATE_COMMAND_POST_WRAP_COPY`: 0 bytes
print-type-size     variant `BROTLI_STATE_UNCOMPRESSED`: 0 bytes
print-type-size     variant `BROTLI_STATE_METADATA`: 0 bytes
print-type-size     variant `BROTLI_STATE_COMMAND_INNER_WRITE`: 0 bytes
print-type-size     variant `BROTLI_STATE_METABLOCK_DONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_COMMAND_POST_WRITE_1`: 0 bytes
print-type-size     variant `BROTLI_STATE_COMMAND_POST_WRITE_2`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_CODE_0`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_CODE_1`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_CODE_2`: 0 bytes
print-type-size     variant `BROTLI_STATE_HUFFMAN_CODE_3`: 0 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MAP_1`: 0 bytes
print-type-size     variant `BROTLI_STATE_CONTEXT_MAP_2`: 0 bytes
print-type-size     variant `BROTLI_STATE_TREE_GROUP`: 0 bytes
print-type-size     variant `BROTLI_STATE_DONE`: 0 bytes
print-type-size type: `state::BrotliRunningTreeGroupState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_TREE_GROUP_NONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_TREE_GROUP_LOOP`: 0 bytes
print-type-size type: `state::BrotliRunningUncompressedState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BROTLI_STATE_UNCOMPRESSED_NONE`: 0 bytes
print-type-size     variant `BROTLI_STATE_UNCOMPRESSED_WRITE`: 0 bytes
print-type-size type: `state::WhichTreeGroup`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `LITERAL`: 0 bytes
print-type-size     variant `INSERT_COPY`: 0 bytes
print-type-size     variant `DISTANCE`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&core::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut huffman::HuffmanCode>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `UniCase<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `UniCase<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `meta_rules::separate_by::SeparateBy`: 112 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.by`: 48 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     field `.allow_trail`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.debug_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::result::Result<(range::Range, tokenizer::TokenizerState, std::option::Option<range::Range<parse_error::ParseError>>), range::Range<parse_error::ParseError>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::result::Result<(range::Range, (std::sync::Arc<std::string::String>, meta_rules::rule::Rule)), ()>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::result::Result<(range::Range, meta_rules::rule::Rule), ()>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `meta_rules::repeat::Repeat`: 64 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.debug_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 48 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `meta_rules::lines::Lines`: 56 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `meta_rules::optional::Optional`: 56 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `std::option::Option<meta_rules::rule::Rule>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<range::Range<parse_error::ParseError>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::result::Result<(), range::Range<parse_error::ParseError>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::result::Result<Syntax, range::Range<parse_error::ParseError>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::result::Result<Syntax, std::string::String>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<range::Range, range::Range<parse_error::ParseError>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `Syntax`: 48 bytes, alignment: 8 bytes
print-type-size     field `.rules`: 24 bytes
print-type-size     field `.names`: 24 bytes
print-type-size type: `alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `meta_rules::rule::Rule`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Whitespace`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Tag`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `UntilAny`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `UntilAnyOrWhitespace`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Text`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Number`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Select`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Sequence`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `SeparateBy`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Repeat`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Lines`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Node`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Optional`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `range::Range<parse_error::ParseError>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::result::Result<Syntax, ()>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/meta_rules/lines.rs:39:32: 51:10 self:&&meta_rules::lines::Lines, tokenizer:&mut &mut std::vec::Vec<range::Range<MetaData>>, state:&mut tokenizer::TokenizerState, refs:&&[meta_rules::rule::Rule], opt_error:&mut std::option::Option<range::Range<parse_error::ParseError>>]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `alloc::arc::ArcInner<std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `meta_rules::node::Node`: 40 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.property`: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size     field `.index`: 16 bytes
print-type-size type: `range::Range<MetaData>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::io::BufWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::sys::imp::mutex::ReentrantMutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::vec::Drain<u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `meta_rules::select::Select`: 32 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `meta_rules::sequence::Sequence`: 32 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `meta_rules::tag::Tag`: 32 bytes, alignment: 8 bytes
print-type-size     field `.text`: 8 bytes
print-type-size     field `.not`: 1 bytes
print-type-size     field `.inverted`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `meta_rules::until_any::UntilAny`: 32 bytes, alignment: 8 bytes
print-type-size     field `.any_characters`: 8 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `meta_rules::until_any_or_whitespace::UntilAnyOrWhitespace`: 32 bytes, alignment: 8 bytes
print-type-size     field `.any_characters`: 8 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `parse_error::ParseError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ExpectedWhitespace`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ExpectedNewLine`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ExpectedSomething`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ExpectedNumber`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ParseNumberError`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ExpectedText`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `EmptyTextNotAllowed`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ParseStringError`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ExpectedTag`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `DidNotExpectTag`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `InvalidRule`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoRules`: 0 bytes
print-type-size     variant `ExpectedEnd`: 0 bytes
print-type-size     variant `Conversion`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Skip<std::str::Chars>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(usize, range::Range)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(range::Range, (std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(range::Range, bool), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, f64), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::string::String, range::Range<read_token::ParseStringError>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 16 bytes, alignment: 8 bytes
print-type-size type: `MetaData`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `StartNode`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `EndNode`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Bool`: 9 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `F64`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `String`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `bootstrap::convert::Convert`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `meta_rules::number::Number`: 24 bytes, alignment: 8 bytes
print-type-size     field `.property`: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size     field `.allow_underscore`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `meta_rules::text::Text`: 24 bytes, alignment: 8 bytes
print-type-size     field `.allow_empty`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `parse_error_handler::ParseErrorHandler`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lines`: 24 bytes
print-type-size type: `range::Range<read_token::ParseStringError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `read_token::ReadToken`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(range::Range, &str)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<range::Range<MetaData>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<std::sync::Arc<std::string::String>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Rev<std::iter::Enumerate<std::slice::Iter<(range::Range, &str)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Skip<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<range::Range>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(range::Range, std::sync::Arc<std::string::String>), ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<range::Range, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<range::Range, range::Range>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(range::Range, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<meta_rules::rule::Rule>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<range::Range<MetaData>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<range::Range>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(range::Range, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<meta_rules::rule::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<range::Range<MetaData>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<range::Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(range::Range, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<meta_rules::rule::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<range::Range<MetaData>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<range::Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::sync::Arc<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `meta_rules::whitespace::Whitespace`: 16 bytes, alignment: 8 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.debug_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `range::Range`: 16 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<range::Range<MetaData>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/json.rs:18:17: 18:83]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<range::Range<MetaData>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/json.rs:21:17: 21:81]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &(range::Range, &str))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &range::Range<MetaData>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &std::sync::Arc<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<f64, read_token::ParseNumberError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::slice::Iter<(range::Range, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<meta_rules::rule::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<range::Range<MetaData>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::sync::Arc<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<meta_rules::rule::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/bootstrap/convert.rs:212:29: 212:55 val:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/meta_rules/rule.rs:69:41: 69:69 state:&&tokenizer::TokenizerState]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/meta_rules/text.rs:41:43: 42:77 self:&&meta_rules::text::Text]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<(range::Range, &str)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<range::Range<MetaData>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<std::sync::Arc<std::string::String>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4615) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[41]::next_back[0]::{{closure}}[0] } 0:&&mut std::iter::Enumerate<std::slice::Iter<(range::Range, &str)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (range::Range, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const meta_rules::rule::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const range::Range<MetaData>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const range::Range>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Stderr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::Stdout`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&(range::Range, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&meta_rules::rule::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut meta_rules::rule::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&range::Range<MetaData>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(range::Range, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<meta_rules::rule::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<range::Range<MetaData>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<range::Range>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Arc<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `tokenizer::TokenizerState`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `read_token::NumberSettings`: 1 bytes, alignment: 1 bytes
print-type-size     field `.allow_underscore`: 1 bytes
print-type-size type: `read_token::ParseNumberError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ExpectedDigits`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size     variant `OverflowInfinity`: 0 bytes
print-type-size     variant `OverflowNegInfinity`: 0 bytes
print-type-size type: `read_token::ParseStringError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ExpectedFourHexadecimals`: 0 bytes
print-type-size     variant `ExpectedHexadecimal`: 0 bytes
print-type-size     variant `ExpectedValidUnicode`: 0 bytes
print-type-size     variant `ExpectedValidEscapeCharacter`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::io::stdio::Maybe<std::io::stdio::StderrRaw>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Real`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fake`: 0 bytes
print-type-size type: `std::io::stdio::Maybe<std::io::stdio::StdoutRaw>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Real`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fake`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/bootstrap/convert.rs:212:61: 212:84]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/json.rs:18:17: 18:83]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/json.rs:21:17: 21:81]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/piston_meta-0.26.2/src/parse_error_handler.rs:113:30: 113:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3645) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::count[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4414) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[61]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::io::stdio::StderrRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::io::stdio::StdoutRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&(range::Range, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&meta_rules::rule::Rule>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut meta_rules::rule::Rule>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&range::Range<MetaData>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::sync::Arc<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(range::Range, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::sync::Arc<std::string::String>, std::sync::Arc<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<meta_rules::rule::Rule>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<range::Range<MetaData>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<range::Range>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::imp::stdio::Stdout`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `diyfp::DiyFp<u64, isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.e`: 8 bytes
print-type-size type: `diyfp::DiyFp<u32, i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.f`: 4 bytes
print-type-size     field `.e`: 4 bytes
print-type-size type: `std::result::Result<pkg_config::Library, std::string::String>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `pkg_config::Library`: 144 bytes, alignment: 8 bytes
print-type-size     field `.libs`: 24 bytes
print-type-size     field `.link_paths`: 24 bytes
print-type-size     field `.frameworks`: 24 bytes
print-type-size     field `.framework_paths`: 24 bytes
print-type-size     field `.include_paths`: 24 bytes
print-type-size     field `.version`: 24 bytes
print-type-size     field `._priv`: 0 bytes
print-type-size type: `core::str::SplitInternal<&str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 104 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<&str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::env::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Enumerate<std::vec::IntoIter<std::path::PathBuf>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::env::SplitPaths, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/build.rs:69:77: 80:14]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Split<u8, fn(&u8) -> bool>, fn(&[u8]) -> std::path::PathBuf>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::sys::imp::os::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::option::Option<(usize, std::path::PathBuf)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::slice::Split<u8, fn(&u8) -> bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.pred`: 8 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::vec::IntoIter<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::path::PathBuf>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<std::ffi::OsString, std::env::JoinPathsError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ffi::OsString, std::sys::imp::os::JoinPathsError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::vec::IntoIter<std::path::PathBuf>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5678) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::contains[0]::{{closure}}[0] } 0:&&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const &str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/build.rs:69:77: 80:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2580) => std/8a732dca6b5bfa0e664f890723f35836::env[0]::join_paths[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::env::JoinPathsError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os::JoinPathsError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::arc::ArcInner<task_impl::Inner>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 88 bytes
print-type-size type: `core::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `task_impl::Inner`: 88 bytes, alignment: 8 bytes
print-type-size     field `.mutex`: 72 bytes
print-type-size     field `.exec`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<std::thread::Inner>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `task_impl::unpark_mutex::UnparkMutex<task_impl::Run>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.status`: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `core::cell::UnsafeCell<core::option::Option<task_impl::Run>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `core::option::Option<task_impl::Run>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `core::result::Result<(), task_impl::Run>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `core::result::Result<task_impl::Run, ()>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `task_impl::Run`: 64 bytes, alignment: 8 bytes
print-type-size     field `.spawn`: 56 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::thread::Inner`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.lock`: 16 bytes
print-type-size     field `.cvar`: 16 bytes
print-type-size type: `task_impl::Spawn<Box<future::Future<Error=(), Item=()> + Send + 'static>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `task_impl::Spawn<Box<future::Future<Error=(), Item=()> + Send>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `task_impl::Task`: 56 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.unpark`: 16 bytes
print-type-size     field `.events`: 32 bytes
print-type-size type: `core::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_cond_t>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `core::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `std::sys::imp::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::sys_common::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `core::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<core::any::TypeId, Box<task_impl::data::Opaque>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::thread::Key<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.dtor_registered`: 1 bytes
print-type-size     field `.dtor_running`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::thread::Key<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.dtor_registered`: 1 bytes
print-type-size     field `.dtor_running`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `task_impl::Events`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Lots`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:47:23: 51:6 task:&&task_impl::Task, data:&&core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>, f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:399:32: 399:41 f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:312:28: 312:40], obj:&mut &mut Box<future::Future<Error=(), Item=()> + Send>]]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::cell::UnsafeCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::cell::UnsafeCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::option::Option<(core::any::TypeId, Box<task_impl::data::Opaque>)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::option::Option<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<task_impl::UnparkEvent>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<core::any::TypeId, Box<task_impl::data::Opaque + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<core::any::TypeId, Box<task_impl::data::Opaque>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::vec::Vec<task_impl::UnparkEvent>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `task_impl::UnparkEvent`: 24 bytes, alignment: 8 bytes
print-type-size     field `.set`: 16 bytes
print-type-size     field `.item`: 8 bytes
print-type-size type: `alloc::arc::ArcInner<task_impl::EventSet>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::arc::ArcInner<task_impl::Executor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::arc::ArcInner<task_impl::Unpark>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<task_impl::UnparkEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::cell::UnsafeCell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::cell::UnsafeCell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::iter::Cloned<core::slice::Iter<task_impl::UnparkEvent>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<task_impl::EventSet + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<task_impl::EventSet>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<task_impl::Executor + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<task_impl::Executor>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<task_impl::Unpark + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<task_impl::Unpark>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<task_impl::EventSet + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<task_impl::EventSet>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<task_impl::Executor + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<task_impl::Executor>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<task_impl::Unpark + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<task_impl::Unpark>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::slice::Iter<core::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Iter<task_impl::UnparkEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Repr<task_impl::UnparkEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `stack::Node<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `std::collections::hash::table::RawBucket<core::any::TypeId, Box<task_impl::data::Opaque>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::Arc<task_impl::EventSet + 'static>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<task_impl::EventSet>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<task_impl::Executor + 'static>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<task_impl::Executor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<task_impl::Unpark + 'static>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<task_impl::Unpark>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Condvar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size type: `std::sync::Mutex<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::thread::LocalKey<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque + 'static>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::thread::LocalKey<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `sync::mpsc::State`: 16 bytes, alignment: 8 bytes
print-type-size     field `.is_open`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.num_messages`: 8 bytes, alignment: 8 bytes
print-type-size type: `task_impl::ThreadUnpark`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.ready`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `task_impl::set::Reset`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:132:14: 132:48 self:&&task_impl::Task]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:399:32: 399:41 f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:312:28: 312:40], obj:&mut &mut Box<future::Future<Error=(), Item=()> + Send>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:43:31: 43:48 self:&&mut task_impl::set::Reset]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<task_impl::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const task_impl::UnparkEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::option::Option<&core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(*const task_impl::Task, *const core::cell::RefCell<std::collections::HashMap<core::any::TypeId, Box<task_impl::data::Opaque>, core::hash::BuildHasherDefault<task_impl::data::IdHasher>>>)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&task_impl::UnparkEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Shared<alloc::arc::ArcInner<task_impl::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<task_impl::UnparkEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `stack::Stack<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<task_impl::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `task_impl::data::IdHasher`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::result::Result<poll::Async<()>, ()>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::cell::Cell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `core::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `poll::Async<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ready`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `NotReady`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `sync::mpsc::TryPark`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parked`: 0 bytes
print-type-size     variant `Closed`: 0 bytes
print-type-size     variant `NotEmpty`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:110:10: 110:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:312:28: 312:40]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.6/src/task_impl/mod.rs:55:42: 55:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::hash::BuildHasherDefault<task_impl::data::IdHasher>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&core::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&task_impl::UnparkEvent>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(core::any::TypeId, Box<task_impl::data::Opaque + 'static>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(core::any::TypeId, Box<task_impl::data::Opaque>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<task_impl::EventSet + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<task_impl::EventSet>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<task_impl::Executor + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<task_impl::Executor>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<task_impl::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<task_impl::Unpark + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::arc::ArcInner<task_impl::Unpark>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<task_impl::UnparkEvent>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<task_impl::data::IdHasher>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `sync::oneshot::Canceled`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(char, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(char, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<f64, ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.36/src/lib.rs:95:44: 95:64 src:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::str::Chars>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<f32, ParseFloatError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<(parser::Flags, parser::Build), Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::result::Result<CharClass, Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::result::Result<Expr, Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::result::Result<char, Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 100 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<parser::Build, Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::result::Result<std::string::String, Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::result::Result<u32, Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 100 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u8, Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 103 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `Error`: 96 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.surround`: 24 bytes
print-type-size     field `.kind`: 64 bytes
print-type-size type: `parser::Parser`: 96 bytes, alignment: 8 bytes
print-type-size     field `.chars`: 24 bytes
print-type-size     field `.chari`: 8 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size     field `.caps`: 8 bytes
print-type-size     field `.names`: 24 bytes
print-type-size     field `.flags`: 7 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::result::Result<(), Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::option::Option<parser::Build>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `ErrorKind`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `DoubleFlagNegation`: 0 bytes
print-type-size     variant `DuplicateCaptureName`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `EmptyAlternate`: 0 bytes
print-type-size     variant `EmptyCaptureName`: 0 bytes
print-type-size     variant `EmptyFlagNegation`: 0 bytes
print-type-size     variant `EmptyGroup`: 0 bytes
print-type-size     variant `InvalidBase10`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidBase16`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidCaptureName`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidClassRange`: 8 bytes
print-type-size         field `.start`: 4 bytes
print-type-size         field `.end`: 4 bytes
print-type-size     variant `InvalidClassEscape`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `InvalidRepeatRange`: 8 bytes
print-type-size         field `.min`: 4 bytes
print-type-size         field `.max`: 4 bytes
print-type-size     variant `InvalidScalarValue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MissingBase10`: 0 bytes
print-type-size     variant `RepeaterExpectsExpr`: 0 bytes
print-type-size     variant `RepeaterUnexpectedExpr`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `UnclosedCaptureName`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnclosedHex`: 0 bytes
print-type-size     variant `UnclosedParen`: 0 bytes
print-type-size     variant `UnclosedRepeat`: 0 bytes
print-type-size     variant `UnclosedUnicodeName`: 0 bytes
print-type-size     variant `UnexpectedClassEof`: 0 bytes
print-type-size     variant `UnexpectedEscapeEof`: 0 bytes
print-type-size     variant `UnexpectedFlagEof`: 0 bytes
print-type-size     variant `UnexpectedTwoDigitHexEof`: 0 bytes
print-type-size     variant `UnopenedParen`: 0 bytes
print-type-size     variant `UnrecognizedEscape`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnrecognizedFlag`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnrecognizedUnicodeClass`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `StackExhausted`: 0 bytes
print-type-size     variant `FlagNotAllowed`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnicodeNotAllowed`: 0 bytes
print-type-size     variant `InvalidUtf8`: 0 bytes
print-type-size     variant `EmptyClass`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `parser::Build`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Expr`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `LeftParen`: 55 bytes
print-type-size         field `.i`: 16 bytes
print-type-size         field `.name`: 24 bytes
print-type-size         field `.chari`: 8 bytes
print-type-size         field `.old_flags`: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<Expr>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<Expr>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `Expr`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Literal`: 25 bytes
print-type-size         field `.chars`: 24 bytes
print-type-size         field `.casei`: 1 bytes
print-type-size     variant `LiteralBytes`: 25 bytes
print-type-size         field `.bytes`: 24 bytes
print-type-size         field `.casei`: 1 bytes
print-type-size     variant `AnyChar`: 0 bytes
print-type-size     variant `AnyCharNoNL`: 0 bytes
print-type-size     variant `AnyByte`: 0 bytes
print-type-size     variant `AnyByteNoNL`: 0 bytes
print-type-size     variant `Class`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `ClassBytes`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StartLine`: 0 bytes
print-type-size     variant `EndLine`: 0 bytes
print-type-size     variant `StartText`: 0 bytes
print-type-size     variant `EndText`: 0 bytes
print-type-size     variant `WordBoundary`: 0 bytes
print-type-size     variant `NotWordBoundary`: 0 bytes
print-type-size     variant `WordBoundaryAscii`: 0 bytes
print-type-size     variant `NotWordBoundaryAscii`: 0 bytes
print-type-size     variant `Group`: 48 bytes
print-type-size         field `.e`: 8 bytes
print-type-size         field `.i`: 16 bytes
print-type-size         field `.name`: 24 bytes
print-type-size     variant `Repeat`: 25 bytes
print-type-size         field `.e`: 8 bytes
print-type-size         field `.r`: 16 bytes
print-type-size         field `.greedy`: 1 bytes
print-type-size     variant `Concat`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Alternate`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::iter::Repeat<Expr>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.element`: 56 bytes
print-type-size type: `std::iter::TakeWhile<std::iter::Zip<std::iter::Rev<std::slice::Iter<u8>>, std::iter::Rev<std::slice::Iter<u8>>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:176:32: 176:48]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::TakeWhile<std::iter::Zip<std::slice::Iter<u8>, std::slice::Iter<u8>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:157:32: 157:48]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::iter::Rev<std::slice::Iter<u8>>, std::iter::Rev<std::slice::Iter<u8>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<u8>, std::slice::Iter<u8>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `literals::Literals`: 40 bytes, alignment: 8 bytes
print-type-size     field `.lits`: 24 bytes
print-type-size     field `.limit_size`: 8 bytes
print-type-size     field `.limit_class`: 8 bytes
print-type-size type: `std::option::Option<literals::Literals>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:494:35: 494:76 self:&&mut parser::Parser, s:std::string::String]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:522:35: 522:76 self:&&mut parser::Parser, s:std::string::String]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `literals::Lit`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 24 bytes
print-type-size     field `.cut`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `parser::Chars`: 32 bytes, alignment: 8 bytes
print-type-size     field `.chars`: 16 bytes
print-type-size     field `.cur`: 8 bytes
print-type-size     field `.ignore_space`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::FilterMap<std::vec::IntoIter<ClassRange>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:672:36: 672:57]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<literals::Lit>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::vec::IntoIter<ByteRange>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<ClassRange>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<Expr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<char>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<literals::Lit>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `ByteClass`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ranges`: 24 bytes
print-type-size type: `CharClass`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ranges`: 24 bytes
print-type-size type: `std::ascii::EscapeDefault`: 24 bytes, alignment: 8 bytes
print-type-size     field `.range`: 16 bytes
print-type-size     field `.data`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<Expr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::StepBy<usize, std::ops::Range<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.step_by`: 8 bytes
print-type-size     field `.range`: 16 bytes
print-type-size type: `std::option::Option<CharClass>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Windows<ByteRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::slice::Windows<ClassRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<ByteRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ClassRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Expr>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<literals::Lit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<parser::Build>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `ExprBuilder`: 16 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 7 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.nest_limit`: 8 bytes, alignment: 8 bytes
print-type-size type: `Repeater`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ZeroOrOne`: 0 bytes
print-type-size     variant `ZeroOrMore`: 0 bytes
print-type-size     variant `OneOrMore`: 0 bytes
print-type-size     variant `Range`: 12 bytes
print-type-size         field `.min`: 4 bytes
print-type-size         field `.max`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:463:28: 463:59 recurse:&usize, limit:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:438:30: 438:78 self:&&mut parser::Parser, n:&&str]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:690:36: 690:72 p:&&mut parser::Parser, negate:&bool]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<ByteRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ClassRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<literals::Lit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<parser::Build>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(&str, &[(char, char)])>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(char, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ByteRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ClassRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<literals::Lit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<parser::Build>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::iter::Rev<std::slice::Iter<u8>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ByteRange>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ClassRange>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<char>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<literals::Lit>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(char, char)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:1228:17: 1228:58]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<ByteRange>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1026:18: 1026:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<ClassRange>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:759:18: 759:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@DefId { krate: CrateNum(3), node: DefIndex(4268) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[31]::extend[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<char>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[ByteRange]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[ClassRange]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &Expr)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(char, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ByteRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ClassRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<literals::Lit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<parser::Build>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<literals::Lit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `std::option::Option<ClassRange>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `ClassRange`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1591:34: 1591:53 c1:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1672:55: 1680:10 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:396:47: 396:78 self:&ExprBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:623:31: 623:68 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:630:49: 630:78 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:816:27: 816:66 self:&ClassRange]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:912:31: 912:68 b:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:919:49: 919:78 b:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:191:31: 191:53 num_bytes:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:559:30: 567:22 size:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:826:29: 826:44 min:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:1145:29: 1145:42 self:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:1216:38: 1216:59 name:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:1222:36: 1222:57 name:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:242:38: 242:51 n:&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:450:31: 450:77 i:&mut i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:515:31: 515:53 i:&mut i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::iter::Rev<std::slice::Iter<u8>>, std::iter::Rev<std::slice::Iter<u8>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<Expr>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::iter::Zip<std::iter::Rev<std::slice::Iter<u8>>, std::iter::Rev<std::slice::Iter<u8>>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:176:32: 176:48]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::iter::Zip<std::slice::Iter<u8>, std::slice::Iter<u8>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:157:32: 157:48]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const literals::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const parser::Build>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::ops::Range<u32>, fn(u32) -> std::option::Option<char> {std::char::from_u32}>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<u32>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:495:33: 495:44]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&(char, char)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&literals::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut literals::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&parser::Build>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<literals::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<literals::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<parser::Build>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `parser::Flags`: 7 bytes, alignment: 1 bytes
print-type-size     field `.casei`: 1 bytes
print-type-size     field `.multi`: 1 bytes
print-type-size     field `.dotnl`: 1 bytes
print-type-size     field `.swap_greed`: 1 bytes
print-type-size     field `.ignore_space`: 1 bytes
print-type-size     field `.unicode`: 1 bytes
print-type-size     field `.allow_bytes`: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<ByteRange>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `ByteRange`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1026:18: 1026:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1027:22: 1027:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1136:37: 1136:52]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:525:48: 525:73]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:540:48: 540:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:555:48: 555:71]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:570:48: 570:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:582:45: 582:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:583:48: 583:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:672:36: 672:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:759:18: 759:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:760:22: 760:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:900:37: 900:52]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:119:55: 119:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:124:30: 124:49]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:129:30: 129:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:134:54: 134:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:157:32: 157:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:176:32: 176:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:268:25: 268:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:359:51: 361:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:495:33: 495:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/literals.rs:540:34: 540:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:1216:70: 1218:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:1222:68: 1224:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:1228:17: 1228:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:217:26: 217:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:376:43: 376:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:382:51: 382:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:492:31: 492:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:685:41: 685:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:713:39: 713:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:951:38: 951:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/parser.rs:988:20: 988:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3645) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::count[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1027:22: 1027:42], 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:1026:18: 1026:60]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:760:22: 760:42], 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.3.9/src/lib.rs:759:18: 759:60]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(3113) => collections/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::sort[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4072) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[4]::dedup[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4268) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[31]::extend[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(char, char)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ByteRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ClassRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&literals::Lit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut literals::Lit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&parser::Build>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ByteRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ClassRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<literals::Lit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<parser::Build>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `passes::Parser`: 536 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 472 bytes
print-type-size     field `.loose_lists`: 40 bytes
print-type-size     field `.loose_stack`: 24 bytes
print-type-size type: `parse::RawParser`: 472 bytes, alignment: 8 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.off`: 8 bytes
print-type-size     field `.opts`: 4 bytes
print-type-size     field `.active_tab`: 256 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.state`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size     field `.leading_space`: 8 bytes
print-type-size     field `.containers`: 24 bytes
print-type-size     field `.last_line_was_empty`: 1 bytes
print-type-size     field `.fence_char`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.fence_count`: 8 bytes, alignment: 8 bytes
print-type-size     field `.fence_indent`: 8 bytes
print-type-size     field `.loose_lists`: 40 bytes
print-type-size     field `.links`: 40 bytes
print-type-size type: `std::option::Option<(parse::Tag, usize, usize, usize)>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<(parse::Tag, usize, usize)>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::option::Option<(std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>))>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<parse::Event>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `parse::Event`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Start`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `End`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Text`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Html`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `InlineHtml`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `FootnoteReference`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `SoftBreak`: 0 bytes
print-type-size     variant `HardBreak`: 0 bytes
print-type-size type: `parse::ParseInfo`: 80 bytes, alignment: 8 bytes
print-type-size     field `.loose_lists`: 40 bytes
print-type-size     field `.links`: 40 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<usize, ()>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `parse::Tag`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paragraph`: 0 bytes
print-type-size     variant `Rule`: 0 bytes
print-type-size     variant `Header`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BlockQuote`: 0 bytes
print-type-size     variant `CodeBlock`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `List`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Item`: 0 bytes
print-type-size     variant `FootnoteDefinition`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Table`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `TableHead`: 0 bytes
print-type-size     variant `TableRow`: 0 bytes
print-type-size     variant `TableCell`: 0 bytes
print-type-size     variant `Emphasis`: 0 bytes
print-type-size     variant `Strong`: 0 bytes
print-type-size     variant `Code`: 0 bytes
print-type-size     variant `Link`: 68 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size         field `.1`: 32 bytes
print-type-size     variant `Image`: 68 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size         field `.1`: 32 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::Entry<usize, ()>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<(std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<usize, (), &std::collections::hash::table::RawTable<usize, ()>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<usize, (), std::collections::hash::table::FullBucket<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<usize, ()>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<usize, (), std::collections::hash::table::FullBucket<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<usize, (), std::collections::hash::table::FullBucket<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<usize, (), std::collections::hash::table::FullBucket<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<usize, (), &std::collections::hash::table::RawTable<usize, ()>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<usize, ()>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(usize, std::borrow::Cow<str>)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:614:19: 614:57]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:614:19: 614:57]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `std::collections::HashMap<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<usize, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashSet<usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.map`: 40 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<usize, (), &std::collections::hash::table::RawTable<usize, ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::borrow::Cow<str>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<usize, (), &std::collections::hash::table::RawTable<usize, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<usize, (), &std::collections::hash::table::RawTable<usize, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &mut std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<usize, (), &mut std::collections::hash::table::RawTable<usize, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<usize, (), &std::collections::hash::table::RawTable<usize, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<usize, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::option::Option<parse::Container>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>), &std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<usize, (), &std::collections::hash::table::RawTable<usize, ()>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `parse::Container`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `BlockQuote`: 0 bytes
print-type-size     variant `List`: 9 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `ListItem`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `FootnoteDefinition`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `parse::State`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `StartBlock`: 0 bytes
print-type-size     variant `InContainers`: 0 bytes
print-type-size     variant `Inline`: 0 bytes
print-type-size     variant `TableHead`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `TableBody`: 0 bytes
print-type-size     variant `TableRow`: 0 bytes
print-type-size     variant `CodeLineStart`: 0 bytes
print-type-size     variant `Code`: 0 bytes
print-type-size     variant `InlineCode`: 0 bytes
print-type-size     variant `Literal`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<usize, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::iter::SkipWhile<std::slice::IterMut<(parse::Tag, usize, usize)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/parse.rs:355:110: 360:22]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(&str, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<&mut (parse::Tag, usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(parse::Tag, usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<parse::Container>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&mut (parse::Tag, usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(parse::Tag, usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<parse::Container>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&mut (parse::Tag, usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(parse::Tag, usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<parse::Container>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::char::CaseMappingIter`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Three`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.2`: 4 bytes
print-type-size     variant `Two`: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size     variant `One`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::char::ToLowercase`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<usize, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Enumerate<&mut std::iter::Rev<std::slice::Iter<u8>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, ())>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<parse::Container>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<&mut (parse::Tag, usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<(parse::Tag, usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/parse.rs:1188:74: 1192:10 self:&mut &mut parse::RawParser]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/parse.rs:1318:44: 1326:10 data:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/parse.rs:915:51: 915:88 self:&&mut parse::RawParser]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:110:43: 110:53 f:&[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:117:22: 117:32 c:&u8]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:110:43: 110:53 f:&fn(u8) -> bool {scanners::is_ascii_alphanumeric}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:110:43: 110:53 f:&fn(u8) -> bool {scanners::is_ascii_upper}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:110:43: 110:53 f:&fn(u8) -> bool {scanners::is_ascii_whitespace_no_nl}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:110:43: 110:53 f:&fn(u8) -> bool {scanners::is_digit}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:110:43: 110:53 f:&fn(u8) -> bool {scanners::is_hexdigit}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:117:22: 117:32 c:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:540:38: 540:78 scheme:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:652:32: 652:69 tag:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::iter::Rev<std::slice::Iter<u8>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5692) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::binary_search[0]::{{closure}}[0] } 0:&&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5692) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::binary_search[0]::{{closure}}[0] } 0:&&u16]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const &mut (parse::Tag, usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (parse::Tag, usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const parse::Container>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&(parse::Tag, usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut &mut (parse::Tag, usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut (parse::Tag, usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&parse::Container>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<&mut (parse::Tag, usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(parse::Tag, usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<parse::Container>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `<parse::Options as std::fmt::Debug>::fmt::dummy::Options`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `parse::Options`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/entities.rs:4282:44: 4282:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/escape.rs:104:42: 104:81]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/parse.rs:355:110: 360:22]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/parse.rs:681:46: 681:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:138:49: 138:83]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:179:40: 179:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:614:19: 614:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7461) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::find[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut &mut (parse::Tag, usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (parse::Tag, usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&parse::Container>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(parse::Tag, usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, (std::borrow::Cow<str>, std::borrow::Cow<str>))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<parse::Container>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::CharEqPattern<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.0.8/src/scanners.rs:614:19: 614:57]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `state::Rasterizer`: 28 bytes, alignment: 4 bytes
print-type-size     field `.front_face`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.method`: 8 bytes, alignment: 4 bytes
print-type-size     field `.offset`: 12 bytes
print-type-size     field `.samples`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `state::RefValues`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stencil`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.blend`: 16 bytes, alignment: 4 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `state::Color`: 12 bytes, alignment: 1 bytes
print-type-size     field `.mask`: 1 bytes
print-type-size     field `.blend`: 11 bytes
print-type-size type: `state::Stencil`: 12 bytes, alignment: 1 bytes
print-type-size     field `.front`: 6 bytes
print-type-size     field `.back`: 6 bytes
print-type-size type: `std::option::Option<state::Offset>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<state::Blend>`: 11 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 10 bytes
print-type-size         field `.0`: 10 bytes
print-type-size type: `state::Blend`: 10 bytes, alignment: 1 bytes
print-type-size     field `.color`: 5 bytes
print-type-size     field `.alpha`: 5 bytes
print-type-size type: `state::Offset`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size type: `state::RasterMethod`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Point`: 0 bytes
print-type-size     variant `Line`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Fill`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<&f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `target::Rect`: 8 bytes, alignment: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size     field `.w`: 2 bytes
print-type-size     field `.h`: 2 bytes
print-type-size type: `state::StencilSide`: 6 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.mask_read`: 1 bytes
print-type-size     field `.mask_write`: 1 bytes
print-type-size     field `.op_fail`: 1 bytes
print-type-size     field `.op_depth_fail`: 1 bytes
print-type-size     field `.op_pass`: 1 bytes
print-type-size type: `state::BlendChannel`: 5 bytes, alignment: 1 bytes
print-type-size     field `.equation`: 1 bytes
print-type-size     field `.source`: 2 bytes
print-type-size     field `.destination`: 2 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `state::Depth`: 2 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size type: `state::Factor`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `SourceAlphaSaturated`: 0 bytes
print-type-size     variant `ZeroPlus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `OneMinus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `state::BlendValue`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SourceColor`: 0 bytes
print-type-size     variant `SourceAlpha`: 0 bytes
print-type-size     variant `DestColor`: 0 bytes
print-type-size     variant `DestAlpha`: 0 bytes
print-type-size     variant `ConstColor`: 0 bytes
print-type-size     variant `ConstAlpha`: 0 bytes
print-type-size type: `state::ColorMask`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `state::Comparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Never`: 0 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `LessEqual`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `GreaterEqual`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size     variant `NotEqual`: 0 bytes
print-type-size     variant `Always`: 0 bytes
print-type-size type: `state::CullFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nothing`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `state::Equation`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Sub`: 0 bytes
print-type-size     variant `RevSub`: 0 bytes
print-type-size     variant `Min`: 0 bytes
print-type-size     variant `Max`: 0 bytes
print-type-size type: `state::FrontFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Clockwise`: 0 bytes
print-type-size     variant `CounterClockwise`: 0 bytes
print-type-size type: `state::StencilOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Keep`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Replace`: 0 bytes
print-type-size     variant `IncrementClamp`: 0 bytes
print-type-size     variant `IncrementWrap`: 0 bytes
print-type-size     variant `DecrementClamp`: 0 bytes
print-type-size     variant `DecrementWrap`: 0 bytes
print-type-size     variant `Invert`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::option::Option<state::MultiSample>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `target::Mirror`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `state::MultiSample`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::arc::ArcInner<Inner>`: 576 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 560 bytes
print-type-size type: `Inner`: 560 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 512 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.after_start`: 16 bytes
print-type-size     field `.before_stop`: 16 bytes
print-type-size type: `crossbeam::sync::MsQueue<Message>`: 512 bytes, alignment: 8 bytes
print-type-size     field `.head`: 256 bytes
print-type-size     field `.tail`: 256 bytes
print-type-size type: `crossbeam::mem::CachePadded<crossbeam::mem::epoch::Atomic<crossbeam::sync::ms_queue::Node<Message>>>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.data`: 256 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `crossbeam::mem::CachePadded<crossbeam::mem::epoch::participant::Participant>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.data`: 256 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `crossbeam::mem::epoch::participants::ParticipantNode`: 256 bytes, alignment: 8 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `std::cell::UnsafeCell<[usize; 32]>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.value`: 256 bytes
print-type-size type: `alloc::arc::ArcInner<futures::task_impl::Inner>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 88 bytes
print-type-size type: `crossbeam::mem::epoch::participant::Participant`: 104 bytes, alignment: 8 bytes
print-type-size     field `.epoch`: 8 bytes
print-type-size     field `.in_critical`: 8 bytes
print-type-size     field `.garbage`: 72 bytes
print-type-size     field `.active`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.next`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `crossbeam::sync::ms_queue::Signal<Message>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.data`: 72 bytes
print-type-size     field `.ready`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `futures::task_impl::Inner`: 88 bytes, alignment: 8 bytes
print-type-size     field `.mutex`: 72 bytes
print-type-size     field `.exec`: 16 bytes
print-type-size type: `crossbeam::sync::ms_queue::Node<Message>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.payload`: 72 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<Message>, ()>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `<crossbeam::sync::MsQueue<T>>::push::Cache<Message>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Node`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::arc::ArcInner<std::thread::Inner>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `crossbeam::mem::epoch::garbage::Local`: 72 bytes, alignment: 8 bytes
print-type-size     field `.old`: 24 bytes
print-type-size     field `.cur`: 24 bytes
print-type-size     field `.new`: 24 bytes
print-type-size type: `crossbeam::sync::ms_queue::Payload<Message>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Blocked`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `futures::task_impl::unpark_mutex::UnparkMutex<futures::task::Run>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.status`: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `std::cell::UnsafeCell<crossbeam::mem::epoch::garbage::Local>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::option::Option<Message>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `Message`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Run`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `futures::task::Run`: 64 bytes, alignment: 8 bytes
print-type-size     field `.spawn`: 56 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<futures::task::Run>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::option::Option<futures::task::Run>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `futures::task::Spawn<Box<futures::Future<Error=(), Item=()> + Send + 'static>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `futures::task::Spawn<Box<futures::Future<Error=(), Item=()> + Send>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `std::thread::Inner`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.lock`: 16 bytes
print-type-size     field `.cvar`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_cond_t>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::sys::imp::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::sys_common::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `Builder`: 40 bytes, alignment: 8 bytes
print-type-size     field `.pool_size`: 8 bytes
print-type-size     field `.after_start`: 16 bytes
print-type-size     field `.before_stop`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::result::Result<std::thread::JoinHandle<()>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::thread::Builder`: 40 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.stack_size`: 16 bytes
print-type-size type: `crossbeam::mem::cache_padded::Padding`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size     field `.2`: 8 bytes
print-type-size     field `.3`: 8 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, Box<futures::task_impl::data::Opaque>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::thread::JoinHandle<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::thread::JoinInner<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.native`: 16 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.packet`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(592) => std/8a732dca6b5bfa0e664f890723f35836::thread[0]::{{impl}}[0]::spawn[0]::{{closure}}[0] } 0:std::thread::Thread, 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.2/src/lib.rs:327:27: 327:47 inner:std::sync::Arc<Inner>], 2:std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `crossbeam::mem::epoch::garbage::Bag`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<futures::task_impl::data::Opaque>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, Box<futures::task_impl::data::Opaque>)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::sys::imp::thread::Thread, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<crossbeam::mem::epoch::garbage::Item>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<crossbeam::sync::ms_queue::Node<Message>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(436) => crossbeam/2beaa67f87f9df68a0affc2a06241acf::sync[0]::ms_queue[0]::{{impl}}[3]::push_internal[0]::{{closure}}[0] } 0:&&crossbeam::sync::MsQueue<Message>, 1:&crossbeam::mem::epoch::Shared<crossbeam::sync::ms_queue::Node<Message>>]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::arc::ArcInner<futures::task::Executor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::arc::ArcInner<std::ops::Fn() + Send + Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<crossbeam::mem::epoch::garbage::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<crossbeam::sync::ms_queue::Node<Message>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::task::Executor + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::task::Executor>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::ops::Fn() + Send + Sync + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::ops::Fn() + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::slice::Repr<crossbeam::mem::epoch::garbage::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<crossbeam::sync::ms_queue::Node<Message>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `crossbeam::mem::epoch::garbage::Item`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.free`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<crossbeam::mem::epoch::local::LocalEpoch>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, Box<futures::task_impl::data::Opaque>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(crossbeam::mem::epoch::Shared<crossbeam::sync::ms_queue::Node<Message>>, *mut crossbeam::sync::ms_queue::Signal<Message>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<*mut crossbeam::sync::ms_queue::Node<Message>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<crossbeam::mem::epoch::local::LocalEpoch>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sync::Arc<std::ops::Fn() + Send + Sync + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sync::Arc<std::ops::Fn() + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sys::imp::thread::Thread>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::task::Executor + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::task::Executor>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::ops::Fn() + Send + Sync + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::ops::Fn() + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::raw::TraitObject`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.vtable`: 8 bytes
print-type-size type: `std::result::Result<(), Box<std::any::Any + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<*mut crossbeam::sync::ms_queue::Node<Message>, *mut crossbeam::sync::ms_queue::Node<Message>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<crossbeam::mem::epoch::Shared<crossbeam::sync::ms_queue::Node<Message>>, crossbeam::mem::epoch::Owned<crossbeam::sync::ms_queue::Node<Message>>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Arc<futures::task::Executor + 'static>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<futures::task::Executor>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<std::ops::Fn() + Send + Sync + 'static>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<std::ops::Fn() + Send + Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Condvar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size type: `std::sync::Mutex<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::thread::LocalKey<crossbeam::mem::epoch::local::LocalEpoch>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `CpuPool`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.2/src/lib.rs:327:27: 327:47 inner:std::sync::Arc<Inner>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(161) => crossbeam/2beaa67f87f9df68a0affc2a06241acf::mem[0]::epoch[0]::guard[0]::{{impl}}[0]::unlinked[0]::{{closure}}[0] } 0:&crossbeam::mem::epoch::Shared<crossbeam::sync::ms_queue::Node<Message>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(188) => crossbeam/2beaa67f87f9df68a0affc2a06241acf::mem[0]::epoch[0]::local[0]::with_participant[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(12), node: DefIndex(161) => crossbeam/2beaa67f87f9df68a0affc2a06241acf::mem[0]::epoch[0]::guard[0]::{{impl}}[0]::unlinked[0]::{{closure}}[0] } 0:&crossbeam::mem::epoch::Shared<crossbeam::sync::ms_queue::Node<Message>>]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::task_impl::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const crossbeam::mem::epoch::garbage::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const crossbeam::sync::ms_queue::Node<Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `crossbeam::mem::epoch::Atomic<crossbeam::mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `crossbeam::mem::epoch::Atomic<crossbeam::sync::ms_queue::Node<Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `crossbeam::mem::epoch::Owned<crossbeam::sync::ms_queue::Node<Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `crossbeam::mem::epoch::Shared<crossbeam::sync::ms_queue::Node<Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `crossbeam::mem::epoch::local::LocalEpoch`: 8 bytes, alignment: 8 bytes
print-type-size     field `.participant`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut crossbeam::mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut crossbeam::sync::ms_queue::Node<Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&crossbeam::mem::epoch::local::LocalEpoch>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<crossbeam::mem::epoch::local::LocalEpoch>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::sync::Arc<std::ops::Fn() + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<crossbeam::mem::epoch::Shared<crossbeam::sync::ms_queue::Node<Message>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.2/src/lib.rs:327:27: 327:47 inner:std::sync::Arc<Inner>]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.2/src/lib.rs:327:27: 327:47 inner:std::sync::Arc<Inner>]>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.r`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::task_impl::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<crossbeam::mem::epoch::garbage::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<crossbeam::sync::ms_queue::Node<Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), crossbeam::mem::epoch::Owned<crossbeam::sync::ms_queue::Node<Message>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::Arc<Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<futures::task_impl::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<crossbeam::mem::epoch::participants::ParticipantNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<crossbeam::sync::ms_queue::Node<Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::imp::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `std::thread::Packet<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.2/src/lib.rs:205:36: 205:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.2/src/lib.rs:212:36: 212:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(22) => crossbeam/2beaa67f87f9df68a0affc2a06241acf::mem[0]::epoch[0]::atomic[0]::opt_shared_into_raw[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(464) => crossbeam/2beaa67f87f9df68a0affc2a06241acf::sync[0]::ms_queue[0]::{{impl}}[3]::push[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `crossbeam::mem::epoch::Guard`: 0 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<futures::task_impl::data::Opaque>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::task::Executor + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::task::Executor>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::task_impl::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::ops::Fn() + Send + Sync + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::ops::Fn() + Send + Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<crossbeam::mem::epoch::Atomic<crossbeam::sync::ms_queue::Node<Message>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<crossbeam::mem::epoch::garbage::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<crossbeam::mem::epoch::participant::Participant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<crossbeam::sync::ms_queue::Node<Message>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<futures::task_impl::data::IdHasher>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `Dense`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `DenseChoice`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Sparse`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Dense`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `Sparse`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `autiter::Match`: 24 bytes, alignment: 8 bytes
print-type-size     field `.pati`: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::Vec<(u8, u32)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(u8, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(u8, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(u8, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (u8, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<&(u8, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<(u8, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(u8, u32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u8, u32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<u8>, std::slice::Iter<Utf8Range>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `Utf8Sequences`: 24 bytes, alignment: 8 bytes
print-type-size     field `.range_stack`: 24 bytes
print-type-size type: `std::vec::Vec<ScalarRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<(ScalarRange, ScalarRange)>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<ScalarRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<ScalarRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Utf8Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u8, &Utf8Range)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<Utf8Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<ScalarRange>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<Utf8Sequence>`: 10 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 9 bytes
print-type-size         field `.0`: 9 bytes
print-type-size type: `Utf8Sequence`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `One`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Two`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Three`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size     variant `Four`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `ScalarRange`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `core::nonzero::NonZero<*const ScalarRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<ScalarRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<Utf8Range>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `Utf8Range`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&Utf8Range>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ScalarRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `HMAC_CTX`: 288 bytes, alignment: 8 bytes
print-type-size     field `.md`: 8 bytes
print-type-size     field `.md_ctx`: 48 bytes
print-type-size     field `.i_ctx`: 48 bytes
print-type-size     field `.o_ctx`: 48 bytes
print-type-size     field `.key_length`: 4 bytes
print-type-size     field `.key`: 128 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sys::imp::fs::FileAttr, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::other::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `std::fs::Metadata`: 144 bytes, alignment: 8 bytes
print-type-size     field `.0`: 144 bytes
print-type-size type: `std::sys::imp::fs::FileAttr`: 144 bytes, alignment: 8 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `BIO`: 112 bytes, alignment: 8 bytes
print-type-size     field `.method`: 8 bytes
print-type-size     field `.callback`: 8 bytes
print-type-size     field `.cb_arg`: 8 bytes
print-type-size     field `.init`: 4 bytes
print-type-size     field `.shutdown`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.retry_reason`: 4 bytes
print-type-size     field `.num`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ptr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.next_bio`: 8 bytes
print-type-size     field `.prev_bio`: 8 bytes
print-type-size     field `.references`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.num_read`: 8 bytes, alignment: 8 bytes
print-type-size     field `.num_write`: 8 bytes
print-type-size     field `.ex_data`: 16 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `EVP_CIPHER`: 88 bytes, alignment: 8 bytes
print-type-size     field `.nid`: 4 bytes
print-type-size     field `.block_size`: 4 bytes
print-type-size     field `.key_len`: 4 bytes
print-type-size     field `.iv_len`: 4 bytes
print-type-size     field `.flags`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size     field `.do_cipher`: 8 bytes
print-type-size     field `.cleanup`: 8 bytes
print-type-size     field `.ctx_size`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.set_asn1_parameters`: 8 bytes, alignment: 8 bytes
print-type-size     field `.get_asn1_parameters`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.app_data`: 8 bytes
print-type-size type: `BIO_METHOD`: 80 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.name`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bwrite`: 8 bytes
print-type-size     field `.bread`: 8 bytes
print-type-size     field `.bputs`: 8 bytes
print-type-size     field `.bgets`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.create`: 8 bytes
print-type-size     field `.destroy`: 8 bytes
print-type-size     field `.callback_ctrl`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `X509V3_CTX`: 56 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.issuer_cert`: 8 bytes, alignment: 8 bytes
print-type-size     field `.subject_cert`: 8 bytes
print-type-size     field `.subject_req`: 8 bytes
print-type-size     field `.crl`: 8 bytes
print-type-size     field `.db_meth`: 8 bytes
print-type-size     field `.db`: 8 bytes
print-type-size type: `EVP_MD_CTX`: 48 bytes, alignment: 8 bytes
print-type-size     field `.digest`: 8 bytes
print-type-size     field `.engine`: 8 bytes
print-type-size     field `.flags`: 8 bytes
print-type-size     field `.md_data`: 8 bytes
print-type-size     field `.pctx`: 8 bytes
print-type-size     field `.update`: 8 bytes
print-type-size type: `probe::ProbeResult`: 48 bytes, alignment: 8 bytes
print-type-size     field `.cert_file`: 24 bytes
print-type-size     field `.cert_dir`: 24 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `_STACK`: 32 bytes, alignment: 8 bytes
print-type-size     field `.num`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.data`: 8 bytes, alignment: 8 bytes
print-type-size     field `.sorted`: 4 bytes
print-type-size     field `.num_alloc`: 4 bytes
print-type-size     field `.comp`: 8 bytes
print-type-size type: `stack_st_void`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 32 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `BIGNUM`: 24 bytes, alignment: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size     field `.top`: 4 bytes
print-type-size     field `.dmax`: 4 bytes
print-type-size     field `.neg`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::option::Option<std::sync::MutexGuard<()>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<()>, std::sync::PoisonError<std::sync::MutexGuard<()>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::option::Option<std::sync::MutexGuard<()>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Mutex<()>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `CRYPTO_EX_DATA`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sk`: 8 bytes
print-type-size     field `.dummy`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `GENERAL_NAME`: 16 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.d`: 8 bytes, alignment: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<std::sync::MutexGuard<()>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Mutex<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<std::sync::MutexGuard<()>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::sync::Mutex<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::slice::Iter<&str>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/probe.rs:27:18: 27:39]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/probe.rs:27:48: 29:6]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<&str>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/probe.rs:27:18: 27:39]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sync::MutexGuard<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Mutex<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::MutexGuard<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<()>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7744) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::once[0]::{{impl}}[2]::call_once[0]::{{closure}}[0] } 0:&mut std::option::Option<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/lib.rs:515:20: 534:6]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<std::sync::MutexGuard<()>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Mutex<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::Range<i32>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/lib.rs:528:45: 528:53]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*const libc::c_void, *const libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO, *const i8) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO, *const i8, i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO, *mut i8, i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO, i32, *const i8, i32, i64, i64) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO, i32, *const i8, i32, i64, i64)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO, i32, i64, *mut libc::c_void) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut BIO, i32, std::option::Option<unsafe extern "C" fn(*mut BIO, i32, *const i8, i32, i64, i64)>) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void, *mut u8, *const u8, usize) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void, i32, i32, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<std::sync::MutexGuard<()>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Mutex<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Once`: 8 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::result::Result<std::sys_common::poison::Guard, std::sync::PoisonError<std::sys_common::poison::Guard>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::option::Option<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/lib.rs:515:20: 534:6]>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::PoisonError<std::sys_common::poison::Guard>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.guard`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `std::sys_common::poison::Guard`: 1 bytes, alignment: 1 bytes
print-type-size     field `.panicking`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/lib.rs:515:20: 534:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/lib.rs:528:45: 528:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/probe.rs:27:18: 27:39]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.7.17/src/probe.rs:27:48: 29:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::UnsafeCell<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut std::sync::once::Waiter>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<std::sync::MutexGuard<()>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Mutex<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `client::async::ClientService`: 344 bytes, alignment: 8 bytes
print-type-size     field `.next_stream_id`: 4 bytes
print-type-size     field `.outstanding_reqs`: 4 bytes
print-type-size     field `.limit`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.conn`: 208 bytes, alignment: 8 bytes
print-type-size     field `.chans`: 40 bytes
print-type-size     field `.work_queue`: 16 bytes
print-type-size     field `.request_queue`: 24 bytes
print-type-size     field `.client_count`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.host`: 24 bytes, alignment: 8 bytes
print-type-size     field `.initialized`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `http::client::ClientConnection<client::async::ChannelFrameSenderHandle, client::async::ChannelFrameReceiverHandle>`: 208 bytes, alignment: 8 bytes
print-type-size     field `.conn`: 168 bytes
print-type-size     field `.state`: 40 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<client::async::WorkItem>>>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 160 bytes
print-type-size type: `http::connection::HttpConnection<client::async::ChannelFrameSenderHandle, client::async::ChannelFrameReceiverHandle>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.receiver`: 16 bytes
print-type-size     field `.sender`: 16 bytes
print-type-size     field `.decoder`: 64 bytes
print-type-size     field `.encoder`: 64 bytes
print-type-size     field `.scheme`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<client::async::WorkItem>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.value`: 160 bytes
print-type-size type: `std::sync::mpsc::oneshot::Packet<client::async::WorkItem>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.data`: 128 bytes
print-type-size     field `.upgrade`: 24 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<client::async::WorkItem>>`: 144 bytes, alignment: 8 bytes
print-type-size     field `.value`: 136 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<client::async::WorkItem>>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 120 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::Response>>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 120 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::connection::HttpFrame>>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 120 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::frame::RawFrame>>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 120 bytes
print-type-size type: `std::option::Option<std::sync::mpsc::stream::Message<client::async::WorkItem>>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Node<client::async::WorkItem>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `.value`: 128 bytes
print-type-size type: `std::option::Option<client::async::WorkItem>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::result::Result<(), client::async::WorkItem>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::result::Result<(), std::sync::mpsc::SendError<client::async::WorkItem>>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::result::Result<client::async::WorkItem, std::sync::mpsc::RecvError>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<client::async::WorkItem, std::sync::mpsc::oneshot::Failure<client::async::WorkItem>>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<client::async::WorkItem, std::sync::mpsc::shared::Failure>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 127 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<client::async::WorkItem, std::sync::mpsc::stream::Failure<client::async::WorkItem>>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<client::async::WorkItem, std::sync::mpsc::sync::Failure>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 127 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::PopResult<client::async::WorkItem>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Inconsistent`: 0 bytes
print-type-size type: `std::sync::mpsc::stream::Message<client::async::WorkItem>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `client::async::WorkItem`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Request`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `HandleFrame`: 0 bytes
print-type-size     variant `SendData`: 0 bytes
print-type-size     variant `NewClient`: 0 bytes
print-type-size     variant `ClientLeft`: 0 bytes
print-type-size type: `http::client::RequestStream<http::session::DefaultStream>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.stream`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<client::async::WorkItem>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::Response>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::connection::HttpFrame>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::frame::RawFrame>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::sync::mpsc::SendError<client::async::WorkItem>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.0`: 120 bytes
print-type-size type: `std::sync::mpsc::sync::Packet<client::async::WorkItem>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.lock`: 112 bytes
print-type-size type: `std::sync::mpsc::sync::Packet<http::Response>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.lock`: 112 bytes
print-type-size type: `std::sync::mpsc::sync::Packet<http::connection::HttpFrame>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.lock`: 112 bytes
print-type-size type: `std::sync::mpsc::sync::Packet<http::frame::RawFrame>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.lock`: 112 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::connection::HttpFrame>>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 96 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<client::async::WorkItem>>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 96 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::Response>>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 96 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::connection::HttpFrame>>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 96 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::frame::RawFrame>>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 96 bytes
print-type-size type: `client::async::AsyncRequest`: 112 bytes, alignment: 8 bytes
print-type-size     field `.method`: 24 bytes
print-type-size     field `.path`: 24 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.body`: 24 bytes
print-type-size     field `.tx`: 16 bytes
print-type-size type: `std::sync::Mutex<std::sync::mpsc::sync::State<client::async::WorkItem>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 96 bytes, alignment: 8 bytes
print-type-size type: `std::sync::Mutex<std::sync::mpsc::sync::State<http::Response>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 96 bytes, alignment: 8 bytes
print-type-size type: `std::sync::Mutex<std::sync::mpsc::sync::State<http::connection::HttpFrame>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 96 bytes, alignment: 8 bytes
print-type-size type: `std::sync::Mutex<std::sync::mpsc::sync::State<http::frame::RawFrame>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 96 bytes, alignment: 8 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::Response>>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 88 bytes
print-type-size type: `std::option::Option<(u32, http::session::DefaultStream)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<client::async::WorkItem>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 80 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::Response>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 80 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::connection::HttpFrame>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 80 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::frame::RawFrame>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 80 bytes
print-type-size type: `http::session::DefaultStream`: 96 bytes, alignment: 8 bytes
print-type-size     field `.stream_id`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.headers`: 24 bytes, alignment: 8 bytes
print-type-size     field `.body`: 24 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::connection::HttpFrame>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<client::async::WorkItem>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::Response>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::connection::HttpFrame>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::frame::RawFrame>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::State<client::async::WorkItem>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::State<http::Response>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::State<http::connection::HttpFrame>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::sync::State<http::frame::RawFrame>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<http::session::DefaultStream>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::sync::mpsc::oneshot::Packet<http::connection::HttpFrame>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size     field `.upgrade`: 24 bytes
print-type-size type: `std::sync::mpsc::stream::Packet<client::async::WorkItem>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 64 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::mpsc::stream::Packet<http::Response>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 64 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::mpsc::stream::Packet<http::connection::HttpFrame>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 64 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::mpsc::stream::Packet<http::frame::RawFrame>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 64 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::mpsc::sync::State<client::async::WorkItem>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.disconnected`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.queue`: 16 bytes, alignment: 8 bytes
print-type-size     field `.blocker`: 16 bytes
print-type-size     field `.buf`: 40 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.canceled`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::State<http::Response>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.disconnected`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.queue`: 16 bytes, alignment: 8 bytes
print-type-size     field `.blocker`: 16 bytes
print-type-size     field `.buf`: 40 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.canceled`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::State<http::connection::HttpFrame>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.disconnected`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.queue`: 16 bytes, alignment: 8 bytes
print-type-size     field `.blocker`: 16 bytes
print-type-size     field `.buf`: 40 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.canceled`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::State<http::frame::RawFrame>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.disconnected`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.queue`: 16 bytes, alignment: 8 bytes
print-type-size     field `.blocker`: 16 bytes
print-type-size     field `.buf`: 40 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.canceled`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::Response>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::sync::mpsc::oneshot::Packet<http::Response>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size     field `.upgrade`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<client::async::WorkItem>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::Response>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::connection::HttpFrame>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::frame::RawFrame>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<u32, http::session::DefaultStream>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<u32, std::sync::mpsc::Sender<http::Response>>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::sync::mpsc::shared::Packet<client::async::WorkItem>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 16 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.sender_drain`: 8 bytes, alignment: 8 bytes
print-type-size     field `.select_lock`: 16 bytes
print-type-size type: `std::sync::mpsc::shared::Packet<http::Response>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 16 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.sender_drain`: 8 bytes, alignment: 8 bytes
print-type-size     field `.select_lock`: 16 bytes
print-type-size type: `std::sync::mpsc::shared::Packet<http::connection::HttpFrame>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 16 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.sender_drain`: 8 bytes, alignment: 8 bytes
print-type-size     field `.select_lock`: 16 bytes
print-type-size type: `std::sync::mpsc::shared::Packet<http::frame::RawFrame>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 16 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.steals`: 8 bytes
print-type-size     field `.to_wake`: 8 bytes
print-type-size     field `.channels`: 8 bytes
print-type-size     field `.port_dropped`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.sender_drain`: 8 bytes, alignment: 8 bytes
print-type-size     field `.select_lock`: 16 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::Response>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::connection::HttpFrame>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::frame::RawFrame>>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `alloc::arc::ArcInner<std::thread::Inner>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::Entry<u32, http::session::DefaultStream>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<u32, std::sync::mpsc::Sender<http::Response>>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<std::sync::mpsc::stream::Message<http::Response>>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::option::Option<std::sync::mpsc::stream::Message<http::connection::HttpFrame>>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Node<http::connection::HttpFrame>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `hpack::Decoder`: 64 bytes, alignment: 8 bytes
print-type-size     field `.header_table`: 64 bytes
print-type-size type: `hpack::Decoder<'static>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.header_table`: 64 bytes
print-type-size type: `hpack::Encoder`: 64 bytes, alignment: 8 bytes
print-type-size     field `.header_table`: 64 bytes
print-type-size type: `hpack::Encoder<'static>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.header_table`: 64 bytes
print-type-size type: `hpack::HeaderTable`: 64 bytes, alignment: 8 bytes
print-type-size     field `.static_table`: 16 bytes
print-type-size     field `.dynamic_table`: 48 bytes
print-type-size type: `hpack::HeaderTable<'static>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.static_table`: 16 bytes
print-type-size     field `.dynamic_table`: 48 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<u32, http::session::DefaultStream, std::collections::hash::table::FullBucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<u32, std::sync::mpsc::Sender<http::Response>, std::collections::hash::table::FullBucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<u32, http::session::DefaultStream>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.elem`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<u32, std::sync::mpsc::Sender<http::Response>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.elem`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::option::Option<http::connection::HttpFrame>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<http::connection::HttpFrame, http::HttpError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<http::connection::HttpFrame, std::sync::mpsc::RecvError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<http::connection::HttpFrame, std::sync::mpsc::oneshot::Failure<http::connection::HttpFrame>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<http::connection::HttpFrame, std::sync::mpsc::shared::Failure>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<http::connection::HttpFrame, std::sync::mpsc::stream::Failure<http::connection::HttpFrame>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<http::connection::HttpFrame, std::sync::mpsc::sync::Failure>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Node<http::Response>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::PopResult<http::Response>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Inconsistent`: 0 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::PopResult<http::connection::HttpFrame>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Inconsistent`: 0 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Queue<std::sync::mpsc::stream::Message<client::async::WorkItem>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.tail_prev`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.first`: 8 bytes
print-type-size     field `.tail_copy`: 8 bytes
print-type-size     field `.cache_bound`: 8 bytes
print-type-size     field `.cache_additions`: 8 bytes
print-type-size     field `.cache_subtractions`: 8 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Queue<std::sync::mpsc::stream::Message<http::Response>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.tail_prev`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.first`: 8 bytes
print-type-size     field `.tail_copy`: 8 bytes
print-type-size     field `.cache_bound`: 8 bytes
print-type-size     field `.cache_additions`: 8 bytes
print-type-size     field `.cache_subtractions`: 8 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Queue<std::sync::mpsc::stream::Message<http::connection::HttpFrame>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.tail_prev`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.first`: 8 bytes
print-type-size     field `.tail_copy`: 8 bytes
print-type-size     field `.cache_bound`: 8 bytes
print-type-size     field `.cache_additions`: 8 bytes
print-type-size     field `.cache_subtractions`: 8 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Queue<std::sync::mpsc::stream::Message<http::frame::RawFrame>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.tail_prev`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.first`: 8 bytes
print-type-size     field `.tail_copy`: 8 bytes
print-type-size     field `.cache_bound`: 8 bytes
print-type-size     field `.cache_additions`: 8 bytes
print-type-size     field `.cache_subtractions`: 8 bytes
print-type-size type: `std::sync::mpsc::stream::Message<http::Response>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::stream::Message<http::connection::HttpFrame>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `http::Response`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stream_id`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.headers`: 24 bytes, alignment: 8 bytes
print-type-size     field `.body`: 24 bytes
print-type-size type: `http::connection::HttpFrame`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `DataFrame`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `HeadersFrame`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `SettingsFrame`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `UnknownFrame`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::frame::RawFrame>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::collections::hash::table::Bucket<u32, http::session::DefaultStream, std::collections::hash::table::FullBucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<u32, std::sync::mpsc::Sender<http::Response>, std::collections::hash::table::FullBucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, http::session::DefaultStream, std::collections::hash::table::FullBucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, std::sync::mpsc::Sender<http::Response>, std::collections::hash::table::FullBucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u32, http::session::DefaultStream, std::collections::hash::table::FullBucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u32, std::sync::mpsc::Sender<http::Response>, std::collections::hash::table::FullBucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::GapThenFull<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.gap`: 24 bytes
print-type-size     field `.full`: 32 bytes
print-type-size type: `std::collections::hash::table::GapThenFull<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.gap`: 24 bytes
print-type-size     field `.full`: 32 bytes
print-type-size type: `std::option::Option<http::Response>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::GapThenFull<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::GapThenFull<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(), http::Response>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(), std::sync::mpsc::SendError<http::Response>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<http::frame::headers::HeadersFrame, http::HttpError>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<http::connection::DataChunk>, http::HttpError>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sync::mpsc::SendError<http::Response>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::sync::mpsc::oneshot::Packet<http::frame::RawFrame>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.upgrade`: 24 bytes
print-type-size type: `std::thread::Inner`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.lock`: 16 bytes
print-type-size     field `.cvar`: 16 bytes
print-type-size type: `hpack::DynamicTable`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.max_size`: 8 bytes
print-type-size type: `http::frame::headers::HeadersFrame`: 48 bytes, alignment: 8 bytes
print-type-size     field `.header_fragment`: 24 bytes
print-type-size     field `.stream_id`: 4 bytes
print-type-size     field `.stream_dep`: 12 bytes
print-type-size     field `.padding_len`: 2 bytes
print-type-size     field `.flags`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_cond_t>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<http::connection::DataChunk>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<http::frame::headers::HeadersFrame>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::result::Result<http::frame::data::DataFrame, http::HttpError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::frame::RawFrame>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `std::sys::imp::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::sys_common::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `http::connection::DataChunk`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size     field `.stream_id`: 4 bytes
print-type-size     field `.end_stream`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `http::frame::data::DataFrame`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.flags`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.stream_id`: 4 bytes, alignment: 4 bytes
print-type-size     field `.padding_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `http::session::DefaultSessionState<http::session::DefaultStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 40 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `log::LogLocation`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__module_path`: 16 bytes
print-type-size     field `.__file`: 16 bytes
print-type-size     field `.__line`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<u32, http::session::DefaultStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<u32, std::sync::mpsc::Sender<http::Response>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<u32, http::session::DefaultStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<u32, std::sync::mpsc::Sender<http::Response>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<u32>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs:88:53: 88:87 self:&mut &mut http::session::DefaultSessionState<http::session::DefaultStream>]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::option::Option<http::frame::data::DataFrame>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<std::sync::mpsc::stream::Message<http::frame::RawFrame>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(), client::async::ClientServiceErr>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<http::client::ClientStream<std::net::TcpStream>, http::client::CleartextConnectError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<http::frame::settings::SettingsFrame, http::HttpError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::IntoIter<std::net::SocketAddr>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::sync::Buffer<client::async::WorkItem>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::Buffer<http::Response>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::Buffer<http::connection::HttpFrame>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::Buffer<http::frame::RawFrame>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::option::Option<std::net::SocketAddr>`: 36 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::mpsc::blocking::Inner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size type: `client::async::ClientServiceErr`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size     variant `Http`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `http::client::ClientStream<std::net::TcpStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.2`: 24 bytes, alignment: 8 bytes
print-type-size type: `http::frame::settings::SettingsFrame`: 32 bytes, alignment: 8 bytes
print-type-size     field `.settings`: 24 bytes
print-type-size     field `.flags`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::borrow::Cow<[u8]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::VecDeque<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size type: `std::collections::hash::table::Bucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::IterMut<u32, http::session::DefaultStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<u32, http::session::DefaultStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<u32, std::sync::mpsc::Sender<http::Response>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash_map::IterMut<u32, http::session::DefaultStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::io::Cursor<std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size type: `std::iter::Map<std::collections::hash_map::IterMut<u32, http::session::DefaultStream>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs:132:57: 132:67]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `std::option::Option<(std::vec::Vec<u8>, std::option::Option<u8>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(u32, std::sync::mpsc::Sender<http::Response>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<http::frame::settings::SettingsFrame>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<u32, http::session::DefaultStream, &mut std::collections::hash::table::RawTable<u32, http::session::DefaultStream>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<u32, std::sync::mpsc::Sender<http::Response>, &mut std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::io::Cursor<std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(), http::HttpError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<bool, std::sync::mpsc::oneshot::Failure<client::async::WorkItem>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<bool, std::sync::mpsc::oneshot::Failure<http::connection::HttpFrame>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<bool, std::sync::mpsc::stream::Failure<client::async::WorkItem>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<bool, std::sync::mpsc::stream::Failure<http::connection::HttpFrame>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<http::connection::SendStatus, http::HttpError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>, hpack::decoder::DecoderError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `std::result::Result<std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>, http::HttpError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<u16, http::HttpError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 30 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Node<http::frame::RawFrame>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::PopResult<http::frame::RawFrame>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Inconsistent`: 0 bytes
print-type-size type: `std::sync::mpsc::stream::Message<http::frame::RawFrame>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::vec::IntoIter<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<http::session::DefaultStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::net::SocketAddr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 28 bytes
print-type-size type: `http::HttpError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `IoError`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `InvalidFrame`: 0 bytes
print-type-size     variant `CompressionError`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size     variant `UnknownStreamId`: 0 bytes
print-type-size     variant `UnableToConnect`: 0 bytes
print-type-size     variant `MalformedResponse`: 0 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `http::client::CleartextConnector`: 24 bytes, alignment: 8 bytes
print-type-size     field `.host`: 16 bytes
print-type-size     field `.port`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `http::frame::RawFrame`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw_content`: 24 bytes
print-type-size type: `http::priority::SimplePrioritizer<http::session::DefaultSessionState<http::session::DefaultStream>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, http::session::DefaultStream, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 0 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<u32, std::sync::mpsc::Sender<http::Response>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<u32, http::session::DefaultStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<u32, http::session::DefaultStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<u32, std::sync::mpsc::Sender<http::Response>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Chunks<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs:211:43: 213:10]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<(&[u8], u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<http::frame::RawFrame>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<u32, http::session::DefaultStream>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sync::mpsc::Receiver<http::Response>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sync::mpsc::Sender<http::Response>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::time::Instant>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<http::frame::settings::HttpSetting>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[u8], std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), http::frame::RawFrame>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), std::sync::mpsc::SendError<http::frame::RawFrame>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<bool, std::sync::mpsc::Receiver<client::async::WorkItem>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<bool, std::sync::mpsc::Receiver<http::connection::HttpFrame>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<http::session::StreamDataChunk, http::session::StreamDataError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::net::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<()>, std::sync::PoisonError<std::sync::MutexGuard<()>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<std::sync::mpsc::sync::State<client::async::WorkItem>>, std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<client::async::WorkItem>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::Response>>, std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::Response>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::connection::HttpFrame>>, std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::connection::HttpFrame>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::frame::RawFrame>>, std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::frame::RawFrame>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sys_common::net::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Chunks<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sync::mpsc::SendError<http::frame::RawFrame>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::sync::mpsc::oneshot::Failure<client::async::WorkItem>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Disconnected`: 0 bytes
print-type-size     variant `Upgraded`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::oneshot::Failure<http::connection::HttpFrame>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Disconnected`: 0 bytes
print-type-size     variant `Upgraded`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::oneshot::MyUpgrade<client::async::WorkItem>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NothingSent`: 0 bytes
print-type-size     variant `SendUsed`: 0 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::oneshot::MyUpgrade<http::Response>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NothingSent`: 0 bytes
print-type-size     variant `SendUsed`: 0 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::oneshot::MyUpgrade<http::connection::HttpFrame>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NothingSent`: 0 bytes
print-type-size     variant `SendUsed`: 0 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::oneshot::MyUpgrade<http::frame::RawFrame>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NothingSent`: 0 bytes
print-type-size     variant `SendUsed`: 0 bytes
print-type-size     variant `GoUp`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::stream::Failure<client::async::WorkItem>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Disconnected`: 0 bytes
print-type-size     variant `Upgraded`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sync::mpsc::stream::Failure<http::connection::HttpFrame>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Disconnected`: 0 bytes
print-type-size     variant `Upgraded`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<client::async::AsyncRequest>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<http::frame::settings::HttpSetting>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<http::session::DefaultStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<client::async::WorkItem>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<http::Response>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<http::connection::HttpFrame>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<http::frame::RawFrame>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<client::async::AsyncRequest>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<http::frame::settings::HttpSetting>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<http::session::DefaultStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::net::SocketAddr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<client::async::WorkItem>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<http::Response>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<http::connection::HttpFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<http::frame::RawFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `client::async::ChannelFrameReceiverHandle`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rx`: 16 bytes
print-type-size type: `client::async::ChannelFrameSenderHandle`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tx`: 16 bytes
print-type-size type: `client::async::Client`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sender`: 16 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<client::async::AsyncRequest>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<http::frame::settings::HttpSetting>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<http::session::DefaultStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<client::async::WorkItem>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<http::Response>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<http::connection::HttpFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<http::frame::RawFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `http::client::CleartextConnectError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `http::session::StreamDataChunk`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Chunk`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Last`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unavailable`: 0 bytes
print-type-size type: `http::session::StreamDataError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Other`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `http::session::StreamIter<http::session::DefaultStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `libc::unix::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::Flavor<client::async::WorkItem>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::Flavor<http::Response>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::Flavor<http::connection::HttpFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::mpsc::Flavor<http::frame::RawFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<u32, http::session::DefaultStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<u32, std::sync::mpsc::Sender<http::Response>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<(std::vec::Vec<u8>, std::vec::Vec<u8>)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Filter<http::session::StreamIter<http::session::DefaultStream>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs:53:48: 53:72]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::FilterMap<http::session::StreamIter<http::session::DefaultStream>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs:84:43: 86:32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs:182:57: 182:63]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::net::SocketAddrV4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u32, &mut http::session::DefaultStream)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<isize, isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<http::frame::settings::HttpSetting>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Condvar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size type: `std::sync::Mutex<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::Mutex<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sync::MutexGuard<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::MutexGuard<std::sync::mpsc::sync::State<client::async::WorkItem>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::MutexGuard<std::sync::mpsc::sync::State<http::Response>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::MutexGuard<std::sync::mpsc::sync::State<http::connection::HttpFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::MutexGuard<std::sync::mpsc::sync::State<http::frame::RawFrame>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<client::async::WorkItem>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::Response>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::connection::HttpFrame>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<std::sync::mpsc::sync::State<http::frame::RawFrame>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::sync::mpsc::Flavor<client::async::WorkItem>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Oneshot`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Stream`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shared`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Sync`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::mpsc::Flavor<http::Response>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Oneshot`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Stream`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shared`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Sync`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::mpsc::Flavor<http::connection::HttpFrame>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Oneshot`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Stream`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shared`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Sync`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::mpsc::Flavor<http::frame::RawFrame>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Oneshot`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Stream`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shared`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Sync`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::mpsc::Receiver<client::async::WorkItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::mpsc::Receiver<http::Response>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::mpsc::Receiver<http::connection::HttpFrame>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::mpsc::Receiver<http::frame::RawFrame>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::mpsc::Sender<client::async::WorkItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::mpsc::Sender<http::Response>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::mpsc::Sender<http::frame::RawFrame>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sync::mpsc::blocking::Inner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.woken`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Queue<client::async::WorkItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Queue<http::Response>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Queue<http::connection::HttpFrame>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size type: `std::sync::mpsc::mpsc_queue::Queue<http::frame::RawFrame>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size type: `std::sync::mpsc::oneshot::UpgradeResult`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `UpSuccess`: 0 bytes
print-type-size     variant `UpDisconnected`: 0 bytes
print-type-size     variant `UpWoke`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::mpsc::stream::UpgradeResult`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `UpSuccess`: 0 bytes
print-type-size     variant `UpDisconnected`: 0 bytes
print-type-size     variant `UpWoke`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::Blocker`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `BlockedSender`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BlockedReceiver`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NoneBlocked`: 0 bytes
print-type-size type: `std::sync::mpsc::sync::Node`: 16 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `std::sync::mpsc::sync::Queue`: 16 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size type: `std::sys::imp::time::Timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::sys::imp::time::inner::Instant`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::time::Instant`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `std::option::Option<http::frame::headers::StreamDependency>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<http::frame::settings::HttpSetting>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs:88:53: 88:87 self:&mut &mut http::session::DefaultSessionState<http::session::DefaultStream>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1281) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::IterMut<u32, http::session::DefaultStream>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1456) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search_mut[0]::{{closure}}[0] } 0:&&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(6688) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mpsc[0]::shared[0]::{{impl}}[0]::inherit_blocker[0]::{{closure}}[0] } 0:&mut &mut std::sync::mpsc::shared::Packet<client::async::WorkItem>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<()>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<std::sync::mpsc::sync::State<client::async::WorkItem>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<std::sync::mpsc::sync::State<http::Response>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<std::sync::mpsc::sync::State<http::connection::HttpFrame>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<std::sync::mpsc::sync::State<http::frame::RawFrame>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::mpsc::blocking::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const client::async::AsyncRequest>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const http::frame::settings::HttpSetting>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const http::session::DefaultStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<client::async::WorkItem>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<http::Response>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<http::connection::HttpFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<http::frame::RawFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `http::client::ClientSession<http::session::DefaultSessionState<http::session::DefaultStream>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size type: `http::frame::headers::StreamDependency`: 8 bytes, alignment: 4 bytes
print-type-size     field `.stream_id`: 4 bytes
print-type-size     field `.weight`: 1 bytes
print-type-size     field `.is_exclusive`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `http::frame::settings::HttpSetting`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `HeaderTableSize`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `EnablePush`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MaxConcurrentStreams`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `InitialWindowSize`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MaxFrameSize`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MaxHeaderListSize`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `log::LogLevel`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `log::LogLevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::mpsc_queue::Node<client::async::WorkItem>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::mpsc_queue::Node<http::Response>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::mpsc_queue::Node<http::connection::HttpFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::mpsc_queue::Node<http::frame::RawFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<client::async::WorkItem>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::Response>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::connection::HttpFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::frame::RawFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&'static mut bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&http::frame::settings::HttpSetting>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut http::session::DefaultStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::io::Cursor<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::sync::mpsc::stream::Message<client::async::WorkItem>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::sync::mpsc::stream::Message<http::connection::HttpFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<std::sync::mpsc::blocking::SignalToken>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<client::async::WorkItem>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::Response>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::connection::HttpFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::frame::RawFrame>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::mpsc::blocking::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<http::session::DefaultStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<client::async::AsyncRequest>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<http::frame::settings::HttpSetting>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<http::session::DefaultStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<client::async::WorkItem>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<http::Response>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<http::connection::HttpFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<http::frame::RawFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), std::sync::mpsc::blocking::SignalToken>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<client::async::WorkItem>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::Response>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::connection::HttpFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::frame::RawFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<client::async::WorkItem>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::Response>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::connection::HttpFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::frame::RawFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<client::async::WorkItem>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::Response>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::connection::HttpFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::frame::RawFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<client::async::WorkItem>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::Response>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::connection::HttpFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::frame::RawFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::mpsc::blocking::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicIsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::mpsc_queue::Node<client::async::WorkItem>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::mpsc_queue::Node<http::Response>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::mpsc_queue::Node<http::connection::HttpFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::mpsc_queue::Node<http::frame::RawFrame>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<client::async::WorkItem>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::Response>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::connection::HttpFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sync::mpsc::spsc_queue::Node<std::sync::mpsc::stream::Message<http::frame::RawFrame>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::mpsc::blocking::SignalToken`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::sync::mpsc::blocking::WaitToken`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `std::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::net::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys_common::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hpack::decoder::DecoderError`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `HeaderIndexOutOfBounds`: 0 bytes
print-type-size     variant `IntegerDecodingError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `StringDecodingError`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `InvalidMaxDynamicSize`: 0 bytes
print-type-size type: `hpack::decoder::StringDecodingError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `HuffmanDecoderError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::Range<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::sys_common::poison::Guard, std::sync::PoisonError<std::sys_common::poison::Guard>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `hpack::decoder::IntegerDecodingError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TooManyOctets`: 0 bytes
print-type-size     variant `ValueTooLarge`: 0 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `InvalidPrefix`: 0 bytes
print-type-size type: `hpack::huffman::HuffmanDecoderError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PaddingTooLarge`: 0 bytes
print-type-size     variant `InvalidPadding`: 0 bytes
print-type-size     variant `EOSInString`: 0 bytes
print-type-size type: `http::HttpScheme`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Http`: 0 bytes
print-type-size     variant `Https`: 0 bytes
print-type-size type: `http::connection::EndStream`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Yes`: 0 bytes
print-type-size     variant `No`: 0 bytes
print-type-size type: `http::connection::SendStatus`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Sent`: 0 bytes
print-type-size     variant `Nothing`: 0 bytes
print-type-size type: `http::frame::data::DataFlag`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `EndStream`: 0 bytes
print-type-size     variant `Padded`: 0 bytes
print-type-size type: `http::frame::headers::HeadersFlag`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `EndStream`: 0 bytes
print-type-size     variant `EndHeaders`: 0 bytes
print-type-size     variant `Padded`: 0 bytes
print-type-size     variant `Priority`: 0 bytes
print-type-size type: `http::frame::settings::SettingsFlag`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ack`: 0 bytes
print-type-size type: `http::session::StreamState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Idle`: 0 bytes
print-type-size     variant `ReservedLocal`: 0 bytes
print-type-size     variant `ReservedRemote`: 0 bytes
print-type-size     variant `Open`: 0 bytes
print-type-size     variant `HalfClosedRemote`: 0 bytes
print-type-size     variant `HalfClosedLocal`: 0 bytes
print-type-size     variant `Closed`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::net::Shutdown`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Read`: 0 bytes
print-type-size     variant `Write`: 0 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::PoisonError<std::sys_common::poison::Guard>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.guard`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sync::mpsc::select::StartResult`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Installed`: 0 bytes
print-type-size     variant `Abort`: 0 bytes
print-type-size type: `std::sync::mpsc::shared::Failure`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Disconnected`: 0 bytes
print-type-size type: `std::sync::mpsc::sync::Failure`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Disconnected`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `std::sys_common::poison::Guard`: 1 bytes, alignment: 1 bytes
print-type-size     field `.panicking`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs:101:30: 103:22]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/client/async.rs:173:22: 175:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/connection.rs:485:49: 485:83]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/mod.rs:182:57: 182:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/frame/settings.rs:211:43: 213:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/priority.rs:53:48: 53:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs:132:57: 132:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/solicit-0.4.4/src/http/session.rs:84:43: 86:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1565) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get_mut[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1576) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::remove[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(5382) => std/8a732dca6b5bfa0e664f890723f35836::net[0]::each_addr[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7034) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mpsc[0]::sync[0]::{{impl}}[4]::wakeup_senders[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7036) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mpsc[0]::sync[0]::{{impl}}[4]::wakeup_senders[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7055) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mpsc[0]::sync[0]::{{impl}}[4]::drop_port[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7372) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mpsc[0]::{{impl}}[16]::recv[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::UnsafeCell<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&http::frame::settings::HttpSetting>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut http::session::DefaultStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u32, http::session::DefaultStream)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u32, std::sync::mpsc::Sender<http::Response>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<client::async::WorkItem>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::Response>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::connection::HttpFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::oneshot::Packet<http::frame::RawFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<client::async::WorkItem>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::Response>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::connection::HttpFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::shared::Packet<http::frame::RawFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<client::async::WorkItem>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::Response>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::connection::HttpFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::stream::Packet<http::frame::RawFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<client::async::WorkItem>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::Response>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::connection::HttpFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::sync::mpsc::sync::Packet<http::frame::RawFrame>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::mpsc::blocking::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<client::async::AsyncRequest>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<http::frame::settings::HttpSetting>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<http::session::DefaultStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<client::async::WorkItem>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<http::Response>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<http::connection::HttpFrame>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<http::frame::RawFrame>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sync::mpsc::RecvError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<([u8; 3], std::option::Option<u8>)>`: 6 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 5 bytes
print-type-size         field `.0`: 5 bytes
print-type-size type: `std::option::Option<[u8; 4]>`: 5 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<[u8; 3]>`: 4 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `Mime`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size     field `.1`: 32 bytes
print-type-size     field `.2`: 24 bytes
print-type-size type: `std::result::Result<Mime, ()>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<((Attr, Value), usize)>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `log::LogLocation`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__module_path`: 16 bytes
print-type-size     field `.__file`: 16 bytes
print-type-size     field `.__line`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<Attr, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<SubLevel, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<TopLevel, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Attr`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Charset`: 0 bytes
print-type-size     variant `Boundary`: 0 bytes
print-type-size     variant `Q`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `SubLevel`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Star`: 0 bytes
print-type-size     variant `Plain`: 0 bytes
print-type-size     variant `Html`: 0 bytes
print-type-size     variant `Xml`: 0 bytes
print-type-size     variant `Javascript`: 0 bytes
print-type-size     variant `Css`: 0 bytes
print-type-size     variant `EventStream`: 0 bytes
print-type-size     variant `Json`: 0 bytes
print-type-size     variant `WwwFormUrlEncoded`: 0 bytes
print-type-size     variant `Msgpack`: 0 bytes
print-type-size     variant `OctetStream`: 0 bytes
print-type-size     variant `FormData`: 0 bytes
print-type-size     variant `Png`: 0 bytes
print-type-size     variant `Gif`: 0 bytes
print-type-size     variant `Bmp`: 0 bytes
print-type-size     variant `Jpeg`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `TopLevel`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Star`: 0 bytes
print-type-size     variant `Text`: 0 bytes
print-type-size     variant `Image`: 0 bytes
print-type-size     variant `Audio`: 0 bytes
print-type-size     variant `Video`: 0 bytes
print-type-size     variant `Application`: 0 bytes
print-type-size     variant `Multipart`: 0 bytes
print-type-size     variant `Message`: 0 bytes
print-type-size     variant `Model`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<Value, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Value`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mime-0.2.2/src/lib.rs:426:22: 426:91 attr:&Attr, ascii:&&str, raw:&&str]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mime-0.2.2/src/lib.rs:427:22: 427:87 attr:&Attr, ascii:&&str, raw:&&str]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(Attr, Value)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(Attr, Value)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(Attr, Value)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::str::Chars>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (Attr, Value)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `log::LogLevel`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `log::LogLevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<(Attr, Value)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(Attr, Value)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const &str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `Config`: 368 bytes, alignment: 8 bytes
print-type-size     field `.include_directories`: 24 bytes
print-type-size     field `.definitions`: 24 bytes
print-type-size     field `.objects`: 24 bytes
print-type-size     field `.flags`: 24 bytes
print-type-size     field `.files`: 24 bytes
print-type-size     field `.cpp`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.cpp_link_stdlib`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cpp_set_stdlib`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.host`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.opt_level`: 24 bytes
print-type-size     field `.debug`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.env`: 24 bytes, alignment: 8 bytes
print-type-size     field `.compiler`: 24 bytes
print-type-size     field `.archiver`: 24 bytes
print-type-size     field `.cargo_metadata`: 1 bytes
print-type-size     field `.pic`: 2 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::option::Option<std::process::Command>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size type: `std::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 232 bytes
print-type-size type: `std::sys::imp::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.env`: 40 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.envp`: 24 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.closures`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stdin`: 12 bytes
print-type-size     field `.stdout`: 12 bytes
print-type-size     field `.stderr`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::str::MatchIndicesInternal<&str>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.0`: 104 bytes
print-type-size type: `std::str::MatchIndices<&str>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.0`: 104 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `Tool`: 72 bytes, alignment: 8 bytes
print-type-size     field `.path`: 24 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.env`: 24 bytes
print-type-size type: `core::str::SplitInternal<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Filter<std::str::Split<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:56: 781:73]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::str::Split<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:56: 781:73]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:782:18: 782:35]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<Tool>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::str::Split<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 48 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.stdout`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:705:27: 760:10 host:&std::string::String, target:&std::string::String, msvc:&&str, gnu:&&str, self:&&Config, default:&&str]`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::io::Split<std::io::BufReader<std::process::ChildStderr>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 40 bytes
print-type-size     field `.delim`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::FilterMap<std::io::Split<std::io::BufReader<std::process::ChildStderr>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:927:56: 927:66]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<(std::ffi::OsString, (usize, std::ffi::CString))>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<(std::string::String, std::vec::Vec<std::string::String>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::io::BufReader<std::process::ChildStderr>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.buf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::io::BufWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::option::Option<std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<std::result::Result<std::vec::Vec<u8>, std::io::Error>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::process::Child, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::sys::imp::mutex::ReentrantMutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::vec::Drain<u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `std::process::Child`: 36 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 12 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::ffi::OsString, (usize, std::ffi::CString)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::option::Option<std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::path::PathBuf, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `Config::ios_flags::ArchSpec`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Device`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Simulator`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:769:22: 769:75 self:&&Config, var_base:&&str, target_u:&std::string::String]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:770:22: 770:71 self:&&Config, kind:&&str, var_base:&&str]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::ffi::OsString, (usize, std::ffi::CString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<*const i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&[u8], std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(std::ffi::OsString, std::ffi::OsString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::path::PathBuf, std::path::PathBuf)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, std::option::Option<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:560:76: 562:10 self:&&Config, tool:&&str]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:607:51: 610:14 dst:&&std::path::Path, lib_dst:&std::path::PathBuf]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:693:20: 703:10 target:&std::string::String, self:&&Config]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:771:22: 771:46 self:&&Config, var_base:&&str]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::path::PathBuf, std::path::PathBuf)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::OsString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::path::PathBuf, std::path::PathBuf)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ffi::OsString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::ffi::OsString, (usize, std::ffi::CString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ffi::OsStr>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::path::Display`: 16 bytes, alignment: 8 bytes
print-type-size     field `.path`: 16 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::path::PathBuf, std::path::PathBuf)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::ffi::OsString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `std::option::Option<std::sys::imp::process::Stdio>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sys::imp::process::Process`: 12 bytes, alignment: 4 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size     field `.status`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:703:20: 705:10 target:&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:802:53: 811:10 self:&&Config]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:815:39: 817:10 self:&&Config]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:817:27: 825:10 self:&&Config]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:829:44: 829:75 self:&&Config]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:833:42: 833:71 self:&&Config]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:837:57: 839:10 self:&&Config]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:843:35: 843:78 self:&&Config]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6993) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[21]::next[0]::{{closure}}[0] } 0:&&mut core::str::MatchIndicesInternal<&str>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::path::PathBuf, std::path::PathBuf)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const *const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fs::DirBuilder`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `.recursive`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::io::Stdout`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::path::PathBuf, std::path::PathBuf)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::process::ChildStderr>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::process::ChildStdin>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::process::ChildStdout>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::sys::imp::process::ExitStatus>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::path::PathBuf, std::path::PathBuf)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Arc<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::imp::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::process::ChildStderr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdin`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdout`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::DirBuilder`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::sys::imp::pipe::AnonPipe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::io::stdio::Maybe<std::io::stdio::StdoutRaw>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Real`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fake`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:155:57: 155:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:199:57: 199:69]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:225:50: 225:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:393:48: 393:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:444:18: 444:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:609:46: 609:52]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:687:32: 693:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:718:57: 718:86]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:56: 781:73]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:782:18: 782:35]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:787:37: 796:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:847:45: 849:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:927:56: 927:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/windows_registry.rs:38:33: 38:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(42914) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::pattern[0]::{{impl}}[20]::is_prefix_of[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4414) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[61]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::io::stdio::StdoutRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::ffi::OsString, std::ffi::OsString)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::path::PathBuf, std::path::PathBuf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::string::String, std::option::Option<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::ffi::OsString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, (usize, std::ffi::CString))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, std::ffi::OsString)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::path::PathBuf, std::path::PathBuf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::option::Option<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::OsString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::str::pattern::CharEqPattern<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.38/src/lib.rs:781:20: 781:47]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::stdio::Stdout`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unicode_normalization::Recompositions<std::str::Chars>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.buffer`: 32 bytes, alignment: 8 bytes
print-type-size     field `.composee`: 8 bytes
print-type-size     field `.last_ccc`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `unicode_normalization::Decompositions<std::str::Chars>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.iter`: 16 bytes, alignment: 8 bytes
print-type-size     field `.buffer`: 24 bytes
print-type-size     field `.sorted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3943) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::select_fold1[0]::{{closure}}[0] } 0:&mut [closure@DefId { krate: CrateNum(2), node: DefIndex(3771) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::min[0]::{{closure}}[0] }], 1:std::iter::Filter<std::iter::Map<std::slice::Iter<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:160:47: 160:60]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:161:43: 161:63 code_point:&u32]>, 2:&mut [closure@DefId { krate: CrateNum(2), node: DefIndex(3772) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::min[0]::{{closure}}[1] }]]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `std::collections::VecDeque<char>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::string::String, uts46::Errors>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<char>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `uts46::Range`: 32 bytes, alignment: 8 bytes
print-type-size     field `.from`: 4 bytes
print-type-size     field `.to`: 4 bytes
print-type-size     field `.mapping`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::slice::Iter<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:160:47: 160:60]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:161:43: 161:63 code_point:&u32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Skip<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<char>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(), uts46::Errors>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(char, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<uts46::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `uts46::Errors`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `uts46::Mapping`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Valid`: 0 bytes
print-type-size     variant `Ignored`: 0 bytes
print-type-size     variant `Mapped`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Deviation`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Disallowed`: 0 bytes
print-type-size     variant `DisallowedStd3Valid`: 0 bytes
print-type-size     variant `DisallowedStd3Mapped`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(35) => unicode_normalization/e914eb9a844091ba22ece4e7a4f11ae9::decompose[0]::{{impl}}[0]::next[0]::{{closure}}[0] } 0:&mut &mut bool, 1:&mut &mut std::vec::Vec<(char, u8)>]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(char, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<uts46::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(char, &[char])>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(char, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<uts46::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<uts46::Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:144:48: 145:56]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:160:47: 160:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::str::Chars>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[char]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<uts46::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:161:43: 161:63 code_point:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/uts46.rs:209:30: 214:10 flags:&uts46::Flags]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(53) => unicode_normalization/e914eb9a844091ba22ece4e7a4f11ae9::normalize[0]::bsearch_table[0]::{{closure}}[0] } 0:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (char, u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const uts46::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&(char, u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&uts46::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<((), u32)>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(char, u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<uts46::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `uts46::Flags`: 3 bytes, alignment: 1 bytes
print-type-size     field `.use_std3_ascii_rules`: 1 bytes
print-type-size     field `.transitional_processing`: 1 bytes
print-type-size     field `.verify_dns_length`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unicode_bidi::BidiClass`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `AL`: 0 bytes
print-type-size     variant `AN`: 0 bytes
print-type-size     variant `B`: 0 bytes
print-type-size     variant `BN`: 0 bytes
print-type-size     variant `CS`: 0 bytes
print-type-size     variant `EN`: 0 bytes
print-type-size     variant `ES`: 0 bytes
print-type-size     variant `ET`: 0 bytes
print-type-size     variant `FSI`: 0 bytes
print-type-size     variant `L`: 0 bytes
print-type-size     variant `LRE`: 0 bytes
print-type-size     variant `LRI`: 0 bytes
print-type-size     variant `LRO`: 0 bytes
print-type-size     variant `NSM`: 0 bytes
print-type-size     variant `ON`: 0 bytes
print-type-size     variant `PDF`: 0 bytes
print-type-size     variant `PDI`: 0 bytes
print-type-size     variant `R`: 0 bytes
print-type-size     variant `RLE`: 0 bytes
print-type-size     variant `RLI`: 0 bytes
print-type-size     variant `RLO`: 0 bytes
print-type-size     variant `S`: 0 bytes
print-type-size     variant `WS`: 0 bytes
print-type-size type: `unicode_normalization::decompose::DecompositionType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Canonical`: 0 bytes
print-type-size     variant `Compatible`: 0 bytes
print-type-size type: `unicode_normalization::recompose::RecompositionState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Composing`: 0 bytes
print-type-size     variant `Purging`: 0 bytes
print-type-size     variant `Finished`: 0 bytes
print-type-size type: `uts46::Error`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PunycodeError`: 0 bytes
print-type-size     variant `ValidityCriteria`: 0 bytes
print-type-size     variant `DissallowedByStd3AsciiRules`: 0 bytes
print-type-size     variant `DissallowedMappedInStd3`: 0 bytes
print-type-size     variant `DissallowedCharacter`: 0 bytes
print-type-size     variant `TooLongForDns`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:144:48: 145:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:160:47: 160:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/punycode.rs:49:23: 49:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/idna-0.1.0/src/uts46.rs:298:39: 298:82]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(715) => std/8a732dca6b5bfa0e664f890723f35836::ascii[0]::{{impl}}[0]::is_ascii[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3771) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::min[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3772) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::min[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3775) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::min[0]::{{closure}}[2] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7468) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::rfind[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&uts46::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(char, u8)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<uts46::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::rc::RcBox<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>`: 4168 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 4152 bytes
print-type-size type: `std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>`: 4152 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 4144 bytes
print-type-size type: `reseeding::ReseedingRng<StdRng, ThreadRngReseeder>`: 4144 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 4128 bytes
print-type-size     field `.generation_threshold`: 8 bytes
print-type-size     field `.bytes_generated`: 8 bytes
print-type-size     field `.reseeder`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>`: 4144 bytes, alignment: 8 bytes
print-type-size     field `.value`: 4144 bytes
print-type-size type: `std::result::Result<StdRng, std::io::Error>`: 4136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 4128 bytes
print-type-size         field `.0`: 4128 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `StdRng`: 4128 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 4128 bytes
print-type-size type: `isaac::Isaac64Rng`: 4128 bytes, alignment: 8 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.rsl`: 2048 bytes
print-type-size     field `.mem`: 2048 bytes
print-type-size     field `.a`: 8 bytes
print-type-size     field `.b`: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size type: `isaac::IsaacRng`: 2064 bytes, alignment: 4 bytes
print-type-size     field `.cnt`: 4 bytes
print-type-size     field `.rsl`: 1024 bytes
print-type-size     field `.mem`: 1024 bytes
print-type-size     field `.a`: 4 bytes
print-type-size     field `.b`: 4 bytes
print-type-size     field `.c`: 4 bytes
print-type-size type: `chacha::ChaChaRng`: 136 bytes, alignment: 8 bytes
print-type-size     field `.buffer`: 64 bytes
print-type-size     field `.state`: 64 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `distributions::gamma::FisherF`: 104 bytes, alignment: 8 bytes
print-type-size     field `.numer`: 48 bytes
print-type-size     field `.denom`: 48 bytes
print-type-size     field `.dof_ratio`: 8 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<std::num::Wrapping<u64>>, std::iter::Chain<std::iter::Map<std::slice::Iter<u64>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:462:41: 462:47]>, std::iter::Repeat<u64>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 32 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `distributions::gamma::StudentT`: 56 bytes, alignment: 8 bytes
print-type-size     field `.chi`: 48 bytes
print-type-size     field `.dof`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<std::num::Wrapping<u32>>, std::iter::Chain<std::iter::Map<std::slice::Iter<u32>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:219:41: 219:47]>, std::iter::Repeat<u32>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `distributions::gamma::ChiSquared`: 48 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 48 bytes
print-type-size type: `distributions::gamma::ChiSquaredRepr`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `DoFExactlyOne`: 0 bytes
print-type-size     variant `DoFAnythingElse`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<std::num::Wrapping<u32>>, std::slice::Iter<u32>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `distributions::gamma::Gamma`: 40 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 40 bytes
print-type-size type: `distributions::gamma::GammaRepr`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Large`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `One`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Small`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `distributions::gamma::GammaSmallShape`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inv_shape`: 8 bytes
print-type-size     field `.large_shape`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::slice::Iter<u64>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:462:41: 462:47]>, std::iter::Repeat<u64>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 8 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `distributions::gamma::GammaLargeShape`: 24 bytes, alignment: 8 bytes
print-type-size     field `.scale`: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `distributions::range::Range<f64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.accept_zone`: 8 bytes
print-type-size type: `distributions::range::Range<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.accept_zone`: 8 bytes
print-type-size type: `distributions::range::Range<isize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.accept_zone`: 8 bytes
print-type-size type: `distributions::range::Range<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.accept_zone`: 8 bytes
print-type-size type: `distributions::range::Range<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.accept_zone`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::slice::Iter<u32>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:219:41: 219:47]>, std::iter::Repeat<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 4 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<os::OsRng, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<os::imp::OsRng, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `XorShiftRng`: 16 bytes, alignment: 4 bytes
print-type-size     field `.x`: 4 bytes
print-type-size     field `.y`: 4 bytes
print-type-size     field `.z`: 4 bytes
print-type-size     field `.w`: 4 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::num::Wrapping<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::num::Wrapping<u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::cell::RefMut<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::append_to_string::Guard`: 16 bytes, alignment: 8 bytes
print-type-size     field `.s`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:111:49: 111:58]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:170:42: 170:51]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:334:56: 334:65]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:351:48: 351:57]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:378:47: 378:56]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:94:57: 94:66]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u32>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:219:41: 219:47]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u64>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:462:41: 462:47]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&mut std::num::Wrapping<u32>, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&mut std::num::Wrapping<u32>, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&mut std::num::Wrapping<u64>, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<std::num::Wrapping<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<std::num::Wrapping<u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sys::imp::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_flags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::thread::Key<std::rc::Rc<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.dtor_registered`: 1 bytes
print-type-size     field `.dtor_running`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::thread::LocalKey<std::rc::Rc<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `distributions::range::Range<f32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.low`: 4 bytes
print-type-size     field `.range`: 4 bytes
print-type-size     field `.accept_zone`: 4 bytes
print-type-size type: `distributions::range::Range<i32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.low`: 4 bytes
print-type-size     field `.range`: 4 bytes
print-type-size     field `.accept_zone`: 4 bytes
print-type-size type: `distributions::range::Range<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.low`: 4 bytes
print-type-size     field `.range`: 4 bytes
print-type-size     field `.accept_zone`: 4 bytes
print-type-size type: `ThreadRng`: 8 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut std::fs::File]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7744) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::once[0]::{{impl}}[2]::call_once[0]::{{closure}}[0] } 0:&mut std::option::Option<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/os.rs:139:27: 149:10]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::slice::IterMut<std::num::Wrapping<u32>>, std::iter::Chain<std::iter::Map<std::slice::Iter<u32>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:219:41: 219:47]>, std::iter::Repeat<u32>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::slice::IterMut<std::num::Wrapping<u64>>, std::iter::Chain<std::iter::Map<std::slice::Iter<u64>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:462:41: 462:47]>, std::iter::Repeat<u64>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:&mut std::num::Wrapping<u32>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:&mut std::num::Wrapping<u64>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::rc::RcBox<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `distributions::exponential::Exp`: 8 bytes, alignment: 8 bytes
print-type-size     field `.lambda_inverse`: 8 bytes
print-type-size type: `os::OsRng`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `os::imp::OsRng`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `os::imp::OsRngInner`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `OsGetrandomRng`: 0 bytes
print-type-size     variant `OsReadRng`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::iter::Repeat<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.element`: 8 bytes
print-type-size type: `std::num::Wrapping<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::Wrapping<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&(usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::num::Wrapping<u32>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::num::Wrapping<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::rc::Rc<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<std::rc::RcBox<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::rc::Rc<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Once`: 8 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `distributions::range::Range<i16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `.low`: 2 bytes
print-type-size     field `.range`: 2 bytes
print-type-size     field `.accept_zone`: 2 bytes
print-type-size type: `distributions::range::Range<u16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `.low`: 2 bytes
print-type-size     field `.range`: 2 bytes
print-type-size     field `.accept_zone`: 2 bytes
print-type-size type: `read::ReadRng<std::fs::File>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.reader`: 4 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::iter::Repeat<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.element`: 4 bytes
print-type-size type: `std::num::Wrapping<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `distributions::range::Range<i8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.low`: 1 bytes
print-type-size     field `.range`: 1 bytes
print-type-size     field `.accept_zone`: 1 bytes
print-type-size type: `distributions::range::Range<u8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.low`: 1 bytes
print-type-size     field `.range`: 1 bytes
print-type-size     field `.accept_zone`: 1 bytes
print-type-size type: `std::num::Wrapping<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::cell::Cell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::iter::ChainState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `std::num::Wrapping<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::option::Option<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/os.rs:139:27: 149:10]>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `ThreadRngReseeder`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:111:49: 111:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:170:42: 170:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:219:41: 219:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:334:56: 334:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:351:48: 351:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:378:47: 378:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:462:41: 462:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/isaac.rs:94:57: 94:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/lib.rs:727:34: 727:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/lib.rs:738:34: 738:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/lib.rs:814:26: 814:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/lib.rs:902:42: 902:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.3.15/src/os.rs:139:27: 149:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4161) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::append_to_string[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(5), node: DefIndex(726) => alloc/8a732dca6b5bfa0e664f890723f35836::rc[0]::RcBoxPtr[0]::inc_strong[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `reseeding::ReseedWithDefault`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::num::Wrapping<u32>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::num::Wrapping<u64>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut std::sync::once::Waiter>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::RefCell<reseeding::ReseedingRng<StdRng, ThreadRngReseeder>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<ucontext::UContext, Error>`: 944 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 943 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 936 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `libc::libc::ucontext_t`: 936 bytes, alignment: 8 bytes
print-type-size     field `.uc_flags`: 8 bytes
print-type-size     field `.uc_link`: 8 bytes
print-type-size     field `.uc_stack`: 24 bytes
print-type-size     field `.uc_mcontext`: 256 bytes
print-type-size     field `.uc_sigmask`: 128 bytes
print-type-size     field `.__private`: 512 bytes
print-type-size type: `ucontext::UContext`: 936 bytes, alignment: 8 bytes
print-type-size     field `.context`: 936 bytes
print-type-size type: `libc::libc::_libc_fpstate`: 512 bytes, alignment: 8 bytes
print-type-size     field `.cwd`: 2 bytes
print-type-size     field `.swd`: 2 bytes
print-type-size     field `.ftw`: 2 bytes
print-type-size     field `.fop`: 2 bytes
print-type-size     field `.rip`: 8 bytes
print-type-size     field `.rdp`: 8 bytes
print-type-size     field `.mxcsr`: 4 bytes
print-type-size     field `.mxcr_mask`: 4 bytes
print-type-size     field `._st`: 128 bytes
print-type-size     field `._xmm`: 256 bytes
print-type-size     field `.__private`: 96 bytes
print-type-size type: `sys::utsname::UtsName`: 390 bytes, alignment: 1 bytes
print-type-size     field `.sysname`: 65 bytes
print-type-size     field `.nodename`: 65 bytes
print-type-size     field `.release`: 65 bytes
print-type-size     field `.version`: 65 bytes
print-type-size     field `.machine`: 65 bytes
print-type-size     field `.domainname`: 65 bytes
print-type-size type: `libc::libc::mcontext_t`: 256 bytes, alignment: 8 bytes
print-type-size     field `.gregs`: 184 bytes
print-type-size     field `.fpregs`: 8 bytes
print-type-size     field `.__private`: 64 bytes
print-type-size type: `sys::socket::RecvMsg`: 168 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 8 bytes
print-type-size     field `.cmsg_buffer`: 16 bytes
print-type-size     field `.address`: 136 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<sys::signal::SigAction, Error>`: 160 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 159 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 152 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `libc::libc::sigaction`: 152 bytes, alignment: 8 bytes
print-type-size     field `.sa_sigaction`: 8 bytes
print-type-size     field `.sa_mask`: 128 bytes
print-type-size     field `.sa_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `._restorer`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<libc::libc::stat, Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 151 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 144 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `sys::signal::SigAction`: 152 bytes, alignment: 8 bytes
print-type-size     field `.sigaction`: 152 bytes
print-type-size type: `libc::libc::stat`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__unused`: 24 bytes
print-type-size type: `std::result::Result<(usize, sys::socket::addr::SockAddr), Error>`: 144 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 143 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 136 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<sys::socket::addr::SockAddr>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `std::result::Result<sys::signal::SigSet, Error>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 135 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<sys::socket::addr::SockAddr, Error>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 135 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `libc::libc::cpu_set_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 128 bytes
print-type-size type: `libc::libc::siginfo_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.si_signo`: 4 bytes
print-type-size     field `.si_errno`: 4 bytes
print-type-size     field `.si_code`: 4 bytes
print-type-size     field `._pad`: 116 bytes
print-type-size     field `._align`: 0 bytes
print-type-size type: `libc::libc::sigset_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.__val`: 128 bytes
print-type-size type: `libc::libc::sockaddr_storage`: 128 bytes, alignment: 8 bytes
print-type-size     field `.ss_family`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.__ss_align`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__ss_pad2`: 112 bytes
print-type-size type: `sched::CpuSet`: 128 bytes, alignment: 8 bytes
print-type-size     field `.cpu_set`: 128 bytes
print-type-size type: `std::result::Result<sys::socket::addr::UnixAddr, Error>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 127 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `sys::select::FdSet`: 128 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 128 bytes
print-type-size type: `sys::signal::SigSet`: 128 bytes, alignment: 8 bytes
print-type-size     field `.sigset`: 128 bytes
print-type-size type: `sys::socket::addr::SockAddr`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inet`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Unix`: 124 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Netlink`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `sys::socket::addr::UnixAddr`: 120 bytes, alignment: 8 bytes
print-type-size     field `.0`: 110 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `sys::statfs::vfs::Statfs`: 120 bytes, alignment: 8 bytes
print-type-size     field `.f_type`: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_namelen`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_spare`: 40 bytes
print-type-size type: `sys::statvfs::vfs::Statvfs`: 112 bytes, alignment: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_favail`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_flag`: 8 bytes
print-type-size     field `.f_namemax`: 8 bytes
print-type-size     field `.f_spare`: 24 bytes
print-type-size type: `libc::libc::sockaddr_un`: 110 bytes, alignment: 2 bytes
print-type-size     field `.sun_family`: 2 bytes
print-type-size     field `.sun_path`: 108 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::result::Result<mqueue::MqAttr, Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 71 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `sys::quota::quota::Dqblk`: 72 bytes, alignment: 8 bytes
print-type-size     field `.bhardlimit`: 8 bytes
print-type-size     field `.bsoftlimit`: 8 bytes
print-type-size     field `.curspace`: 8 bytes
print-type-size     field `.ihardlimit`: 8 bytes
print-type-size     field `.isoftlimit`: 8 bytes
print-type-size     field `.curinodes`: 8 bytes
print-type-size     field `.btime`: 8 bytes
print-type-size     field `.itime`: 8 bytes
print-type-size     field `.valid`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `libc::libc::mq_attr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.mq_flags`: 8 bytes
print-type-size     field `.mq_maxmsg`: 8 bytes
print-type-size     field `.mq_msgsize`: 8 bytes
print-type-size     field `.mq_curmsgs`: 8 bytes
print-type-size     field `.pad`: 32 bytes
print-type-size type: `mqueue::MqAttr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.mq_attr`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<sys::termios::ffi::consts::Termios, Error>`: 64 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 63 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 60 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `sys::termios::ffi::consts::Termios`: 60 bytes, alignment: 4 bytes
print-type-size     field `.c_iflag`: 4 bytes
print-type-size     field `.c_oflag`: 4 bytes
print-type-size     field `.c_cflag`: 4 bytes
print-type-size     field `.c_lflag`: 4 bytes
print-type-size     field `.c_line`: 1 bytes
print-type-size     field `.c_cc`: 32 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.c_ispeed`: 4 bytes, alignment: 4 bytes
print-type-size     field `.c_ospeed`: 4 bytes
print-type-size type: `sys::socket::ffi::msghdr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.msg_name`: 8 bytes
print-type-size     field `.msg_namelen`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.msg_iov`: 8 bytes, alignment: 8 bytes
print-type-size     field `.msg_iovlen`: 8 bytes
print-type-size     field `.msg_control`: 8 bytes
print-type-size     field `.msg_controllen`: 8 bytes
print-type-size     field `.msg_flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<sys::socket::ControlMessage>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `libc::libc::flock`: 32 bytes, alignment: 8 bytes
print-type-size     field `.l_type`: 2 bytes
print-type-size     field `.l_whence`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.l_start`: 8 bytes, alignment: 8 bytes
print-type-size     field `.l_len`: 8 bytes
print-type-size     field `.l_pid`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `sys::socket::ControlMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ScmRights`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `sys::socket::addr::InetAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `libc::libc::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 28 bytes
print-type-size type: `libc::libc::stack_t`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ss_sp`: 8 bytes
print-type-size     field `.ss_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ss_size`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<sys::time::TimeVal, Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `sys::socket::UnknownCmsg`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 16 bytes
print-type-size type: `sys::socket::sockopt::GetStruct<sys::time::TimeVal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.val`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<libc::libc::sockaddr_in, Error>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 19 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<sys::wait::WaitStatus, Error>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 19 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `sys::socket::addr::IpAddr`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `V6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `sys::socket::multicast::ipv6_mreq`: 20 bytes, alignment: 4 bytes
print-type-size     field `.ipv6mr_multiaddr`: 16 bytes
print-type-size     field `.ipv6mr_interface`: 4 bytes
print-type-size type: `sys::socket::sockopt::GetStruct<libc::libc::sockaddr_in>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<poll::PollFd>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<sys::signal::Signal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<sys::socket::ControlMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<sys::uio::IoVec<&[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<sys::uio::IoVec<&mut [u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `fcntl::FcntlArg`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `F_DUPFD`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_DUPFD_CLOEXEC`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_GETFD`: 0 bytes
print-type-size     variant `F_SETFD`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_GETFL`: 0 bytes
print-type-size     variant `F_SETFL`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_SETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_SETLKW`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_GETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_OFD_SETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_OFD_SETLKW`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_OFD_GETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_ADD_SEALS`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_GET_SEALS`: 0 bytes
print-type-size type: `libc::libc::_libc_fpxreg`: 16 bytes, alignment: 2 bytes
print-type-size     field `.significand`: 8 bytes
print-type-size     field `.exponent`: 2 bytes
print-type-size     field `.__private`: 6 bytes
print-type-size type: `libc::libc::_libc_xmmreg`: 16 bytes, alignment: 4 bytes
print-type-size     field `.element`: 16 bytes
print-type-size type: `libc::libc::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::libc::iovec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iov_base`: 8 bytes
print-type-size     field `.iov_len`: 8 bytes
print-type-size type: `libc::libc::sockaddr`: 16 bytes, alignment: 2 bytes
print-type-size     field `.sa_family`: 2 bytes
print-type-size     field `.sa_data`: 14 bytes
print-type-size type: `libc::libc::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::ffi::CString>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:229:58: 229:72]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::net::SocketAddrV4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<*mut i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<*mut sys::select::FdSet>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<*mut sys::time::TimeVal>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::path::Display`: 16 bytes, alignment: 8 bytes
print-type-size     field `.path`: 16 bytes
print-type-size type: `std::result::Result<*mut libc::libc::c_void, Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<i64, Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<isize, Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<sys::socket::ucred, Error>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<usize, Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::slice::Iter<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<sys::socket::ControlMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `sys::signal::SigHandler`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SigDfl`: 0 bytes
print-type-size     variant `SigIgn`: 0 bytes
print-type-size     variant `Handler`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SigAction`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `sys::socket::CmsgIterator`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `sys::socket::addr::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `sys::socket::ffi::cmsghdr`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cmsg_len`: 8 bytes
print-type-size     field `.cmsg_level`: 4 bytes
print-type-size     field `.cmsg_type`: 4 bytes
print-type-size     field `.cmsg_data`: 0 bytes
print-type-size type: `sys::socket::sockopt::GetStruct<sys::socket::ucred>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 12 bytes
print-type-size type: `sys::time::TimeVal`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_usec`: 8 bytes
print-type-size type: `sys::uio::IoVec<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `sys::uio::IoVec<&mut [u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `sys::wait::WaitStatus`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Exited`: 5 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `Signaled`: 9 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.2`: 1 bytes
print-type-size     variant `Stopped`: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size     variant `Continued`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `StillAlive`: 0 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `libc::libc::sockaddr_nl`: 12 bytes, alignment: 4 bytes
print-type-size     field `.nl_family`: 2 bytes
print-type-size     field `.nl_pad`: 2 bytes
print-type-size     field `.nl_pid`: 4 bytes
print-type-size     field `.nl_groups`: 4 bytes
print-type-size type: `std::result::Result<(i32, i32), Error>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 11 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<sys::socket::linger, Error>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 11 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `sys::socket::addr::netlink::NetlinkAddr`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `sys::socket::sockopt::GetStruct<sys::socket::linger>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 8 bytes
print-type-size type: `sys::socket::ucred`: 12 bytes, alignment: 4 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size     field `.uid`: 4 bytes
print-type-size     field `.gid`: 4 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/mqueue.rs:117:28: 117:56 attr:&libc::libc::mq_attr]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/mqueue.rs:128:28: 128:56 attr:&libc::libc::mq_attr]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/signal.rs:271:32: 271:71 signum:&i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/signal.rs:322:28: 322:63 oldact:&libc::libc::sigaction]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/socket/mod.rs:487:18: 487:45 ret:&isize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/ucontext.rs:19:32: 19:65 context:&libc::libc::ucontext_t]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:382:23: 382:58 fd1:&i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:383:23: 383:58 fd2:&i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:388:23: 388:58 fd1:&i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:389:23: 389:58 fd2:&i32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const *const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `libc::libc::pollfd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `.events`: 2 bytes
print-type-size     field `.revents`: 2 bytes
print-type-size type: `mount::MsFlags`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `poll::PollFd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pollfd`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mqueue::MqAttr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut sys::select::FdSet>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut sys::signal::SigSet>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut sys::time::TimeVal>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&sys::signal::SigSet>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&sys::socket::ControlMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&sys::socket::addr::SockAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<sys::socket::addr::Ipv4Addr>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<sys::stat::Mode>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<sys::wait::WaitPidFlag>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<i32, Error>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<sys::signal::Signal, Error>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<sys::socket::SockType, Error>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<u32, Error>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `sys::quota::quota::QuotaCmd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size type: `sys::signal::SignalIterator`: 8 bytes, alignment: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size type: `sys::socket::linger`: 8 bytes, alignment: 4 bytes
print-type-size     field `.l_onoff`: 4 bytes
print-type-size     field `.l_linger`: 4 bytes
print-type-size type: `sys::socket::multicast::ip_mreq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.imr_multiaddr`: 4 bytes
print-type-size     field `.imr_interface`: 4 bytes
print-type-size type: `sys::socket::sockopt::GetBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 4 bytes
print-type-size type: `sys::socket::sockopt::GetStruct<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 4 bytes
print-type-size type: `sys::socket::sockopt::GetStruct<sys::socket::SockType>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 4 bytes
print-type-size type: `sys::socket::sockopt::GetStruct<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 4 bytes
print-type-size type: `sys::socket::sockopt::GetU8`: 8 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `sys::socket::sockopt::GetUsize`: 8 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.val`: 4 bytes
print-type-size type: `sys::socket::sockopt::SetStruct<sys::socket::linger>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `sys::socket::sockopt::SetStruct<sys::socket::multicast::ip_mreq>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `sys::socket::sockopt::SetStruct<sys::socket::multicast::ipv6_mreq>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `sys::socket::sockopt::SetStruct<sys::time::TimeVal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `sys::socket::sockopt::SetStruct<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `sys::statvfs::vfs::FsFlags`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `unistd::ForkResult`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Parent`: 4 bytes
print-type-size         field `.child`: 4 bytes
print-type-size     variant `Child`: 0 bytes
print-type-size type: `fcntl::consts::FdFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `fcntl::consts::OFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `fcntl::consts::SealFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `fcntl::consts::SpliceFFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `libc::libc::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `mount::MntFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `mqueue::FdFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `mqueue::MQ_OFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sched::CloneFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::option::Option<poll::EventFlags>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<sys::signal::Signal>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size type: `sys::epoll::EpollEventKind`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::epoll::EpollOp`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `EpollCtlAdd`: 0 bytes
print-type-size     variant `EpollCtlDel`: 0 bytes
print-type-size     variant `EpollCtlMod`: 0 bytes
print-type-size type: `sys::memfd::MemFdCreateFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::mman::ProtFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::mman::consts::MapFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::mman::consts::MsFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::quota::quota::QuotaValidFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::reboot::RebootMode`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `RB_HALT_SYSTEM`: 0 bytes
print-type-size     variant `RB_KEXEC`: 0 bytes
print-type-size     variant `RB_POWER_OFF`: 0 bytes
print-type-size     variant `RB_AUTOBOOT`: 0 bytes
print-type-size     variant `RB_SW_SUSPEND`: 0 bytes
print-type-size type: `sys::signal::SaFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::signal::SigFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::signal::Signal`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `SIGHUP`: 0 bytes
print-type-size     variant `SIGINT`: 0 bytes
print-type-size     variant `SIGQUIT`: 0 bytes
print-type-size     variant `SIGILL`: 0 bytes
print-type-size     variant `SIGTRAP`: 0 bytes
print-type-size     variant `SIGABRT`: 0 bytes
print-type-size     variant `SIGBUS`: 0 bytes
print-type-size     variant `SIGFPE`: 0 bytes
print-type-size     variant `SIGKILL`: 0 bytes
print-type-size     variant `SIGUSR1`: 0 bytes
print-type-size     variant `SIGSEGV`: 0 bytes
print-type-size     variant `SIGUSR2`: 0 bytes
print-type-size     variant `SIGPIPE`: 0 bytes
print-type-size     variant `SIGALRM`: 0 bytes
print-type-size     variant `SIGTERM`: 0 bytes
print-type-size     variant `SIGSTKFLT`: 0 bytes
print-type-size     variant `SIGCHLD`: 0 bytes
print-type-size     variant `SIGCONT`: 0 bytes
print-type-size     variant `SIGSTOP`: 0 bytes
print-type-size     variant `SIGTSTP`: 0 bytes
print-type-size     variant `SIGTTIN`: 0 bytes
print-type-size     variant `SIGTTOU`: 0 bytes
print-type-size     variant `SIGURG`: 0 bytes
print-type-size     variant `SIGXCPU`: 0 bytes
print-type-size     variant `SIGXFSZ`: 0 bytes
print-type-size     variant `SIGVTALRM`: 0 bytes
print-type-size     variant `SIGPROF`: 0 bytes
print-type-size     variant `SIGWINCH`: 0 bytes
print-type-size     variant `SIGIO`: 0 bytes
print-type-size     variant `SIGPWR`: 0 bytes
print-type-size     variant `SIGSYS`: 0 bytes
print-type-size type: `sys::socket::SockFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::socket::SockLevel`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Socket`: 0 bytes
print-type-size     variant `Tcp`: 0 bytes
print-type-size     variant `Ip`: 0 bytes
print-type-size     variant `Ipv6`: 0 bytes
print-type-size     variant `Udp`: 0 bytes
print-type-size     variant `Netlink`: 0 bytes
print-type-size type: `sys::socket::SockType`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Stream`: 0 bytes
print-type-size     variant `Datagram`: 0 bytes
print-type-size     variant `SeqPacket`: 0 bytes
print-type-size     variant `Raw`: 0 bytes
print-type-size     variant `Rdm`: 0 bytes
print-type-size type: `sys::socket::addr::AddressFamily`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Unix`: 0 bytes
print-type-size     variant `Inet`: 0 bytes
print-type-size     variant `Inet6`: 0 bytes
print-type-size     variant `Netlink`: 0 bytes
print-type-size     variant `Packet`: 0 bytes
print-type-size type: `sys::socket::addr::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `sys::socket::consts::os::MsgFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::socket::sockopt::SetBool`: 4 bytes, alignment: 4 bytes
print-type-size     field `.val`: 4 bytes
print-type-size type: `sys::socket::sockopt::SetUsize`: 4 bytes, alignment: 4 bytes
print-type-size     field `.val`: 4 bytes
print-type-size type: `sys::stat::Mode`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::stat::SFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::termios::ffi::consts::ControlFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::termios::ffi::consts::FlowArg`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `TCOOFF`: 0 bytes
print-type-size     variant `TCOON`: 0 bytes
print-type-size     variant `TCIOFF`: 0 bytes
print-type-size     variant `TCION`: 0 bytes
print-type-size type: `sys::termios::ffi::consts::FlushArg`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `TCIFLUSH`: 0 bytes
print-type-size     variant `TCOFLUSH`: 0 bytes
print-type-size     variant `TCIOFLUSH`: 0 bytes
print-type-size type: `sys::termios::ffi::consts::InputFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::termios::ffi::consts::LocalFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::termios::ffi::consts::OutputFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `sys::termios::ffi::consts::SetArg`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `TCSANOW`: 0 bytes
print-type-size     variant `TCSADRAIN`: 0 bytes
print-type-size     variant `TCSAFLUSH`: 0 bytes
print-type-size type: `sys::wait::WaitPidFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::result::Result<(), Error>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<bool, Error>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<u8, Error>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<void::Void, Error>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `Error`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Sys`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidPath`: 0 bytes
print-type-size type: `poll::EventFlags`: 2 bytes, alignment: 2 bytes
print-type-size     field `.bits`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `errno::consts::Errno`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `UnknownErrno`: 0 bytes
print-type-size     variant `EPERM`: 0 bytes
print-type-size     variant `ENOENT`: 0 bytes
print-type-size     variant `ESRCH`: 0 bytes
print-type-size     variant `EINTR`: 0 bytes
print-type-size     variant `EIO`: 0 bytes
print-type-size     variant `ENXIO`: 0 bytes
print-type-size     variant `E2BIG`: 0 bytes
print-type-size     variant `ENOEXEC`: 0 bytes
print-type-size     variant `EBADF`: 0 bytes
print-type-size     variant `ECHILD`: 0 bytes
print-type-size     variant `EAGAIN`: 0 bytes
print-type-size     variant `ENOMEM`: 0 bytes
print-type-size     variant `EACCES`: 0 bytes
print-type-size     variant `EFAULT`: 0 bytes
print-type-size     variant `ENOTBLK`: 0 bytes
print-type-size     variant `EBUSY`: 0 bytes
print-type-size     variant `EEXIST`: 0 bytes
print-type-size     variant `EXDEV`: 0 bytes
print-type-size     variant `ENODEV`: 0 bytes
print-type-size     variant `ENOTDIR`: 0 bytes
print-type-size     variant `EISDIR`: 0 bytes
print-type-size     variant `EINVAL`: 0 bytes
print-type-size     variant `ENFILE`: 0 bytes
print-type-size     variant `EMFILE`: 0 bytes
print-type-size     variant `ENOTTY`: 0 bytes
print-type-size     variant `ETXTBSY`: 0 bytes
print-type-size     variant `EFBIG`: 0 bytes
print-type-size     variant `ENOSPC`: 0 bytes
print-type-size     variant `ESPIPE`: 0 bytes
print-type-size     variant `EROFS`: 0 bytes
print-type-size     variant `EMLINK`: 0 bytes
print-type-size     variant `EPIPE`: 0 bytes
print-type-size     variant `EDOM`: 0 bytes
print-type-size     variant `ERANGE`: 0 bytes
print-type-size     variant `EDEADLK`: 0 bytes
print-type-size     variant `ENAMETOOLONG`: 0 bytes
print-type-size     variant `ENOLCK`: 0 bytes
print-type-size     variant `ENOSYS`: 0 bytes
print-type-size     variant `ENOTEMPTY`: 0 bytes
print-type-size     variant `ELOOP`: 0 bytes
print-type-size     variant `ENOMSG`: 0 bytes
print-type-size     variant `EIDRM`: 0 bytes
print-type-size     variant `ECHRNG`: 0 bytes
print-type-size     variant `EL2NSYNC`: 0 bytes
print-type-size     variant `EL3HLT`: 0 bytes
print-type-size     variant `EL3RST`: 0 bytes
print-type-size     variant `ELNRNG`: 0 bytes
print-type-size     variant `EUNATCH`: 0 bytes
print-type-size     variant `ENOCSI`: 0 bytes
print-type-size     variant `EL2HLT`: 0 bytes
print-type-size     variant `EBADE`: 0 bytes
print-type-size     variant `EBADR`: 0 bytes
print-type-size     variant `EXFULL`: 0 bytes
print-type-size     variant `ENOANO`: 0 bytes
print-type-size     variant `EBADRQC`: 0 bytes
print-type-size     variant `EBADSLT`: 0 bytes
print-type-size     variant `EBFONT`: 0 bytes
print-type-size     variant `ENOSTR`: 0 bytes
print-type-size     variant `ENODATA`: 0 bytes
print-type-size     variant `ETIME`: 0 bytes
print-type-size     variant `ENOSR`: 0 bytes
print-type-size     variant `ENONET`: 0 bytes
print-type-size     variant `ENOPKG`: 0 bytes
print-type-size     variant `EREMOTE`: 0 bytes
print-type-size     variant `ENOLINK`: 0 bytes
print-type-size     variant `EADV`: 0 bytes
print-type-size     variant `ESRMNT`: 0 bytes
print-type-size     variant `ECOMM`: 0 bytes
print-type-size     variant `EPROTO`: 0 bytes
print-type-size     variant `EMULTIHOP`: 0 bytes
print-type-size     variant `EDOTDOT`: 0 bytes
print-type-size     variant `EBADMSG`: 0 bytes
print-type-size     variant `EOVERFLOW`: 0 bytes
print-type-size     variant `ENOTUNIQ`: 0 bytes
print-type-size     variant `EBADFD`: 0 bytes
print-type-size     variant `EREMCHG`: 0 bytes
print-type-size     variant `ELIBACC`: 0 bytes
print-type-size     variant `ELIBBAD`: 0 bytes
print-type-size     variant `ELIBSCN`: 0 bytes
print-type-size     variant `ELIBMAX`: 0 bytes
print-type-size     variant `ELIBEXEC`: 0 bytes
print-type-size     variant `EILSEQ`: 0 bytes
print-type-size     variant `ERESTART`: 0 bytes
print-type-size     variant `ESTRPIPE`: 0 bytes
print-type-size     variant `EUSERS`: 0 bytes
print-type-size     variant `ENOTSOCK`: 0 bytes
print-type-size     variant `EDESTADDRREQ`: 0 bytes
print-type-size     variant `EMSGSIZE`: 0 bytes
print-type-size     variant `EPROTOTYPE`: 0 bytes
print-type-size     variant `ENOPROTOOPT`: 0 bytes
print-type-size     variant `EPROTONOSUPPORT`: 0 bytes
print-type-size     variant `ESOCKTNOSUPPORT`: 0 bytes
print-type-size     variant `EOPNOTSUPP`: 0 bytes
print-type-size     variant `EPFNOSUPPORT`: 0 bytes
print-type-size     variant `EAFNOSUPPORT`: 0 bytes
print-type-size     variant `EADDRINUSE`: 0 bytes
print-type-size     variant `EADDRNOTAVAIL`: 0 bytes
print-type-size     variant `ENETDOWN`: 0 bytes
print-type-size     variant `ENETUNREACH`: 0 bytes
print-type-size     variant `ENETRESET`: 0 bytes
print-type-size     variant `ECONNABORTED`: 0 bytes
print-type-size     variant `ECONNRESET`: 0 bytes
print-type-size     variant `ENOBUFS`: 0 bytes
print-type-size     variant `EISCONN`: 0 bytes
print-type-size     variant `ENOTCONN`: 0 bytes
print-type-size     variant `ESHUTDOWN`: 0 bytes
print-type-size     variant `ETOOMANYREFS`: 0 bytes
print-type-size     variant `ETIMEDOUT`: 0 bytes
print-type-size     variant `ECONNREFUSED`: 0 bytes
print-type-size     variant `EHOSTDOWN`: 0 bytes
print-type-size     variant `EHOSTUNREACH`: 0 bytes
print-type-size     variant `EALREADY`: 0 bytes
print-type-size     variant `EINPROGRESS`: 0 bytes
print-type-size     variant `ESTALE`: 0 bytes
print-type-size     variant `EUCLEAN`: 0 bytes
print-type-size     variant `ENOTNAM`: 0 bytes
print-type-size     variant `ENAVAIL`: 0 bytes
print-type-size     variant `EISNAM`: 0 bytes
print-type-size     variant `EREMOTEIO`: 0 bytes
print-type-size     variant `EDQUOT`: 0 bytes
print-type-size     variant `ENOMEDIUM`: 0 bytes
print-type-size     variant `EMEDIUMTYPE`: 0 bytes
print-type-size     variant `ECANCELED`: 0 bytes
print-type-size     variant `ENOKEY`: 0 bytes
print-type-size     variant `EKEYEXPIRED`: 0 bytes
print-type-size     variant `EKEYREVOKED`: 0 bytes
print-type-size     variant `EKEYREJECTED`: 0 bytes
print-type-size     variant `EOWNERDEAD`: 0 bytes
print-type-size     variant `ENOTRECOVERABLE`: 0 bytes
print-type-size     variant `ERFKILL`: 0 bytes
print-type-size     variant `EHWPOISON`: 0 bytes
print-type-size type: `fcntl::FlockArg`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `LockShared`: 0 bytes
print-type-size     variant `LockExclusive`: 0 bytes
print-type-size     variant `Unlock`: 0 bytes
print-type-size     variant `LockSharedNonblock`: 0 bytes
print-type-size     variant `LockExclusiveNonblock`: 0 bytes
print-type-size     variant `UnlockNonblock`: 0 bytes
print-type-size type: `libc::libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `sys::socket::Shutdown`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Read`: 0 bytes
print-type-size     variant `Write`: 0 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size type: `sys::socket::sockopt::SetU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.val`: 1 bytes
print-type-size type: `unistd::Whence`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SeekSet`: 0 bytes
print-type-size     variant `SeekCur`: 0 bytes
print-type-size     variant `SeekEnd`: 0 bytes
print-type-size     variant `SeekData`: 0 bytes
print-type-size     variant `SeekHole`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/fcntl.rs:115:29: 115:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/fcntl.rs:116:31: 116:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/fcntl.rs:119:28: 119:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/fcntl.rs:125:28: 125:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/fcntl.rs:133:28: 133:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/mqueue.rs:101:28: 101:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/memfd.rs:17:28: 17:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/ptrace.rs:95:73: 95:78]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/select.rs:77:31: 77:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/select.rs:78:33: 78:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/select.rs:79:33: 79:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/select.rs:80:31: 80:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/sendfile.rs:11:28: 11:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/sendfile.rs:9:29: 9:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/signal.rs:350:46: 350:78]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/signal.rs:351:46: 351:84]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/signal.rs:352:49: 352:85]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/signal.rs:353:49: 353:91]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/socket/mod.rs:297:28: 297:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/socket/mod.rs:465:32: 465:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/socket/mod.rs:497:28: 497:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/socket/mod.rs:508:28: 508:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/uio.rs:12:28: 12:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/uio.rs:18:28: 18:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/uio.rs:47:28: 47:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/sys/uio.rs:56:28: 56:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:229:58: 229:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:308:28: 308:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:314:28: 314:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:341:28: 341:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.7.0/src/unistd.rs:348:28: 348:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut [u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&sys::socket::ControlMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `sys::socket::sockopt::AcceptConn`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::Broadcast`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::IpAddMembership`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::IpDropMembership`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::IpMulticastLoop`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::IpMulticastTtl`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::Ipv6AddMembership`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::Ipv6DropMembership`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::KeepAlive`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::Linger`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::OobInline`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::OriginalDst`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::PeerCredentials`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::RcvBuf`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::RcvBufForce`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::ReceiveTimeout`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::ReuseAddr`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::ReusePort`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::SendTimeout`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::SndBuf`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::SndBufForce`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::SockType`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::SocketError`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::TcpKeepIdle`: 0 bytes, alignment: 1 bytes
print-type-size type: `sys::socket::sockopt::TcpNoDelay`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `void::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `unreachable::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `gcc::Config`: 368 bytes, alignment: 8 bytes
print-type-size     field `.include_directories`: 24 bytes
print-type-size     field `.definitions`: 24 bytes
print-type-size     field `.objects`: 24 bytes
print-type-size     field `.flags`: 24 bytes
print-type-size     field `.files`: 24 bytes
print-type-size     field `.cpp`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.cpp_link_stdlib`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cpp_set_stdlib`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.host`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.opt_level`: 24 bytes
print-type-size     field `.debug`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.env`: 24 bytes, alignment: 8 bytes
print-type-size     field `.compiler`: 24 bytes
print-type-size     field `.archiver`: 24 bytes
print-type-size     field `.cargo_metadata`: 1 bytes
print-type-size     field `.pic`: 2 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<std::option::Option<std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(std::ffi::OsString, std::ffi::OsString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, std::option::Option<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<(std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, std::ffi::OsString)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::option::Option<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `libc::tm`: 56 bytes, alignment: 8 bytes
print-type-size     field `.tm_sec`: 4 bytes
print-type-size     field `.tm_min`: 4 bytes
print-type-size     field `.tm_hour`: 4 bytes
print-type-size     field `.tm_mday`: 4 bytes
print-type-size     field `.tm_mon`: 4 bytes
print-type-size     field `.tm_year`: 4 bytes
print-type-size     field `.tm_wday`: 4 bytes
print-type-size     field `.tm_yday`: 4 bytes
print-type-size     field `.tm_isdst`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.tm_gmtoff`: 8 bytes, alignment: 8 bytes
print-type-size     field `.tm_zone`: 8 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::result::Result<Tm, ParseError>`: 48 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `Tm`: 44 bytes, alignment: 4 bytes
print-type-size     field `.tm_sec`: 4 bytes
print-type-size     field `.tm_min`: 4 bytes
print-type-size     field `.tm_hour`: 4 bytes
print-type-size     field `.tm_mday`: 4 bytes
print-type-size     field `.tm_mon`: 4 bytes
print-type-size     field `.tm_year`: 4 bytes
print-type-size     field `.tm_wday`: 4 bytes
print-type-size     field `.tm_yday`: 4 bytes
print-type-size     field `.tm_isdst`: 4 bytes
print-type-size     field `.tm_utcoff`: 4 bytes
print-type-size     field `.tm_nsec`: 4 bytes
print-type-size type: `std::result::Result<TmFmt, ParseError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `TmFmt`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tm`: 8 bytes
print-type-size     field `.format`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Take<std::str::CharIndices>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::result::Result<std::string::String, ParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `Fmt`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Rfc3339`: 0 bytes
print-type-size     variant `Ctime`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<duration::Duration>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<duration::Duration, duration::OutOfRangeError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::time::Duration, duration::OutOfRangeError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `SteadyTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `Timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sec`: 8 bytes
print-type-size     field `.nsec`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:103:27: 103:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:105:27: 105:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:122:27: 122:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:124:27: 124:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:180:27: 180:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:185:27: 185:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:187:27: 187:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:189:27: 189:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:210:27: 210:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:212:27: 212:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:224:27: 224:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:226:27: 226:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:92:27: 92:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:94:27: 94:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:96:27: 96:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:98:27: 98:54 s:&mut &mut &str, tm:&mut &mut Tm]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, i32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `duration::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `libc::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), ParseError>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::slice::Iter<(&str, i32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `sys::inner::unix::SteadyTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `ParseError`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `InvalidSecond`: 0 bytes
print-type-size     variant `InvalidMinute`: 0 bytes
print-type-size     variant `InvalidHour`: 0 bytes
print-type-size     variant `InvalidDay`: 0 bytes
print-type-size     variant `InvalidMonth`: 0 bytes
print-type-size     variant `InvalidYear`: 0 bytes
print-type-size     variant `InvalidDayOfWeek`: 0 bytes
print-type-size     variant `InvalidDayOfMonth`: 0 bytes
print-type-size     variant `InvalidDayOfYear`: 0 bytes
print-type-size     variant `InvalidZoneOffset`: 0 bytes
print-type-size     variant `InvalidTime`: 0 bytes
print-type-size     variant `InvalidSecondsSinceEpoch`: 0 bytes
print-type-size     variant `MissingFormatConverter`: 0 bytes
print-type-size     variant `InvalidFormatSpecifier`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnexpectedCharacter`: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size type: `PreciseTime`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:102:27: 102:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:104:27: 104:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:121:27: 121:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:123:27: 123:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:179:27: 179:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:184:27: 184:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:186:27: 186:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:188:27: 188:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:209:27: 209:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:211:27: 211:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:223:27: 223:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:225:27: 225:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:91:27: 91:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:93:27: 93:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:95:27: 95:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/parse.rs:97:27: 97:50 s:&mut &mut &str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&(&str, i32)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.35/src/lib.rs:645:29: 645:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `duration::OutOfRangeError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, i32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `gcc::Config`: 368 bytes, alignment: 8 bytes
print-type-size     field `.include_directories`: 24 bytes
print-type-size     field `.definitions`: 24 bytes
print-type-size     field `.objects`: 24 bytes
print-type-size     field `.flags`: 24 bytes
print-type-size     field `.files`: 24 bytes
print-type-size     field `.cpp`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.cpp_link_stdlib`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cpp_set_stdlib`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.host`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.opt_level`: 24 bytes
print-type-size     field `.debug`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.env`: 24 bytes, alignment: 8 bytes
print-type-size     field `.compiler`: 24 bytes
print-type-size     field `.archiver`: 24 bytes
print-type-size     field `.cargo_metadata`: 1 bytes
print-type-size     field `.pic`: 2 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::env::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Map<std::slice::Split<u8, fn(&u8) -> bool>, fn(&[u8]) -> std::path::PathBuf>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::sys::imp::os::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Peekable<std::slice::Iter<(&str, u64)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::option::Option<std::option::Option<std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::slice::Split<u8, fn(&u8) -> bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.pred`: 8 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(std::ffi::OsString, std::ffi::OsString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, std::option::Option<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::option::Option<&(&str, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::option::Option<<std::slice::Iter<(&str, u64)> as std::iter::Iterator>::Item>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(&str, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sys::imp::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_flags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&&(&str, u64)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(&str, u64)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<<std::slice::Iter<(&str, u64)> as std::iter::Iterator>::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<(std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, u64)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, std::ffi::OsString)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::option::Option<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `terminfo::parm::Variables`: 1664 bytes, alignment: 8 bytes
print-type-size     field `.sta`: 832 bytes
print-type-size     field `.dyn`: 832 bytes
print-type-size type: `std::result::Result<terminfo::TerminfoTerminal<std::io::Stderr>, Error>`: 168 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<terminfo::TerminfoTerminal<std::io::Stdout>, Error>`: 168 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<terminfo::TerminfoTerminal<std::io::Stderr>>`: 160 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size type: `std::option::Option<terminfo::TerminfoTerminal<std::io::Stdout>>`: 160 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size type: `terminfo::TerminfoTerminal<std::io::Stderr>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.num_colors`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.out`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ti`: 144 bytes
print-type-size type: `terminfo::TerminfoTerminal<std::io::Stdout>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.num_colors`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.out`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ti`: 144 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sys::imp::fs::FileAttr, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<terminfo::TermInfo, Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `libc::unix::notbsd::linux::other::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `std::fs::Metadata`: 144 bytes, alignment: 8 bytes
print-type-size     field `.0`: 144 bytes
print-type-size type: `std::sys::imp::fs::FileAttr`: 144 bytes, alignment: 8 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `terminfo::TermInfo`: 144 bytes, alignment: 8 bytes
print-type-size     field `.names`: 24 bytes
print-type-size     field `.bools`: 40 bytes
print-type-size     field `.numbers`: 40 bytes
print-type-size     field `.strings`: 40 bytes
print-type-size type: `<std::result::Result<V, E> as std::iter::FromIterator<std::result::Result<A, E>>>::from_iter::Adapter<std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::vec::IntoIter<u16>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:142:36: 145:29]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:146:33: 173:29 snames:&&[&str], string_table:&std::vec::Vec<u8>, string_table_bytes:&usize]>, Error>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 64 bytes
print-type-size     field `.err`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, bool>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, std::vec::Vec<u8>>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, u16>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, bool>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, std::vec::Vec<u8>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, u16>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, bool>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, std::vec::Vec<u8>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, u16>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::iter::Map<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:105:49: 105:66]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, std::vec::Vec<u8>, &std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, u16, &std::collections::hash::table::RawTable<std::string::String, u16>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, std::vec::Vec<u8>, std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, u16, std::collections::hash::table::FullBucket<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::vec::IntoIter<u16>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:142:36: 145:29]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:146:33: 173:29 snames:&&[&str], string_table:&std::vec::Vec<u8>, string_table_bytes:&usize]>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::option::Option<std::result::Result<(std::string::String, std::vec::Vec<u8>), Error>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 48 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `<std::result::Result<V, E> as std::iter::FromIterator<std::result::Result<A, E>>>::from_iter::Adapter<std::iter::FilterMap<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:113:37: 117:10 file:&mut &mut std::io::Read, bnames:&&[&str]]>, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.err`: 24 bytes
print-type-size type: `<std::result::Result<V, E> as std::iter::FromIterator<std::result::Result<A, E>>>::from_iter::Adapter<std::iter::FilterMap<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:125:39: 129:10 file:&mut &mut std::io::Read, nnames:&&[&str]]>, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.err`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, std::vec::Vec<u8>, std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, u16, std::collections::hash::table::FullBucket<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, std::vec::Vec<u8>, std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, u16, std::collections::hash::table::FullBucket<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, bool, std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, u16, std::collections::hash::table::FullBucket<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, bool>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, std::vec::Vec<u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, u16>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::result::Result<(std::string::String, std::vec::Vec<u8>), Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `<std::result::Result<V, E> as std::iter::FromIterator<std::result::Result<A, E>>>::from_iter::Adapter<std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:134:54: 134:75 file:&mut &mut std::io::Read]>, std::io::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.err`: 24 bytes
print-type-size type: `alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, std::vec::Vec<u8>, &std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, u16, &std::collections::hash::table::RawTable<std::string::String, u16>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<terminfo::parm::Param>, std::slice::Iter<terminfo::parm::Param>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<(std::string::String, std::vec::Vec<u8>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<std::result::Result<(std::string::String, bool), std::io::Error>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<std::result::Result<(std::string::String, u16), std::io::Error>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<std::collections::HashMap<std::string::String, bool>, std::io::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::collections::HashMap<std::string::String, std::vec::Vec<u8>>, Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::collections::HashMap<std::string::String, u16>, std::io::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<std::string::String, bool>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::string::String, std::vec::Vec<u8>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::string::String, u16>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, std::vec::Vec<u8>, &std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, u16, &std::collections::hash::table::RawTable<std::string::String, u16>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::io::BufReader<std::fs::File>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.buf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::io::BufWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Enumerate<std::vec::IntoIter<u16>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::vec::IntoIter<u16>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:142:36: 145:29]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::option::Option<terminfo::parm::Param>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(std::string::String, bool), std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(std::string::String, u16), std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::sys::imp::mutex::ReentrantMutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::vec::Drain<u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `terminfo::parm::States`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Nothing`: 0 bytes
print-type-size     variant `Percent`: 0 bytes
print-type-size     variant `SetVar`: 0 bytes
print-type-size     variant `GetVar`: 0 bytes
print-type-size     variant `PushParam`: 0 bytes
print-type-size     variant `CharConstant`: 0 bytes
print-type-size     variant `CharClose`: 0 bytes
print-type-size     variant `IntConstant`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `FormatPattern`: 29 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `SeekIfElse`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `SeekIfElsePercent`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `SeekIfEnd`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `SeekIfEndPercent`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, std::vec::Vec<u8>, &std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, u16, &std::collections::hash::table::RawTable<std::string::String, u16>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, std::vec::Vec<u8>, &std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, u16, &std::collections::hash::table::RawTable<std::string::String, u16>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, bool, &mut std::collections::hash::table::RawTable<std::string::String, bool>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, &mut std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, &std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, u16, &mut std::collections::hash::table::RawTable<std::string::String, u16>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, u16, &std::collections::hash::table::RawTable<std::string::String, u16>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::string::String, bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::string::String, std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::string::String, u16>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, u16>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash_map::Iter<std::string::String, bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::string::String, std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::string::String, u16>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<terminfo::TerminfoTerminal<std::io::Stderr>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<terminfo::TerminfoTerminal<std::io::Stdout>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::iter::FilterMap<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:113:37: 117:10 file:&mut &mut std::io::Read, bnames:&&[&str]]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::FilterMap<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:125:39: 129:10 file:&mut &mut std::io::Read, nnames:&&[&str]]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::option::Option<(std::string::String, bool)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(std::string::String, u16)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, std::vec::Vec<u8>, &std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, u16, &std::collections::hash::table::RawTable<std::string::String, u16>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::result::Result<u16, std::io::Error>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::result::Result<u8, std::io::Error>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(), Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::fs::File, Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::path::PathBuf, Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u16>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, terminfo::parm::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::vec::IntoIter<std::path::PathBuf>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<u16>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `terminfo::parm::Param`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Words`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Number`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `Error`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Io`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `TerminfoParsing`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `ParameterizedExpansion`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NotSupported`: 0 bytes
print-type-size     variant `TermUnset`: 0 bytes
print-type-size     variant `TerminfoEntryNotFound`: 0 bytes
print-type-size     variant `CursorDestinationInvalid`: 0 bytes
print-type-size     variant `ColorOutOfRange`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:146:33: 173:29 snames:&&[&str], string_table:&std::vec::Vec<u8>, string_table_bytes:&usize]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::string::String, bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::string::String, std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::string::String, u16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, u16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::Take<&mut std::io::Read>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.limit`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<(&str, &[terminfo::parm::Param])>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:233:41: 233:103 self:&&mut terminfo::TerminfoTerminal<std::io::Stderr>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<(&str, &[terminfo::parm::Param])>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:233:41: 233:103 self:&&mut terminfo::TerminfoTerminal<std::io::Stdout>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:134:54: 134:75 file:&mut &mut std::io::Read]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::option::Option<(&std::vec::Vec<u8>, &[terminfo::parm::Param])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, u16)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::string::String, bool>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::string::String, std::vec::Vec<u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::string::String, u16>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&[u8], std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u16, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 22 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u8, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<terminfo::parm::Param>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `terminfo::parm::Flags`: 24 bytes, alignment: 8 bytes
print-type-size     field `.width`: 8 bytes
print-type-size     field `.precision`: 8 bytes
print-type-size     field `.alternate`: 1 bytes
print-type-size     field `.left`: 1 bytes
print-type-size     field `.sign`: 1 bytes
print-type-size     field `.space`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:113:37: 117:10 file:&mut &mut std::io::Read, bnames:&&[&str]]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:125:39: 129:10 file:&mut &mut std::io::Read, nnames:&&[&str]]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<terminfo::parm::Param>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, &[terminfo::parm::Param])>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<terminfo::parm::Param>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Bytes<&mut std::io::Read>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::append_to_string::Guard`: 16 bytes, alignment: 8 bytes
print-type-size     field `.s`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parm.rs:262:58: 262:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parm.rs:368:58: 368:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.n`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&mut terminfo::parm::Param, &terminfo::parm::Param)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &bool)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &u16)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<Box<Terminal<Output=std::io::Stderr> + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<Box<Terminal<Output=std::io::Stdout> + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(&str, &[terminfo::parm::Param])>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<terminfo::parm::Param>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<terminfo::parm::Param>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sys::imp::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_flags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `terminfo::Error`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `BadMagic`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `NotUtf8`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ShortNames`: 0 bytes
print-type-size     variant `TooManyBools`: 0 bytes
print-type-size     variant `TooManyNumbers`: 0 bytes
print-type-size     variant `TooManyStrings`: 0 bytes
print-type-size     variant `InvalidLength`: 0 bytes
print-type-size     variant `NamesMissingNull`: 0 bytes
print-type-size     variant `StringsMissingNull`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:233:41: 233:103 self:&&mut terminfo::TerminfoTerminal<std::io::Stderr>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:233:41: 233:103 self:&&mut terminfo::TerminfoTerminal<std::io::Stdout>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:233:87: 233:102 params:&&[terminfo::parm::Param]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:248:42: 248:83 self:&&terminfo::TerminfoTerminal<std::io::Stderr>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:248:42: 248:83 self:&&terminfo::TerminfoTerminal<std::io::Stdout>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:303:34: 303:88 out:std::io::Stderr]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:303:34: 303:88 out:std::io::Stdout]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parm.rs:351:54: 351:93 digit:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parm.rs:395:82: 397:26 cur:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parm.rs:406:90: 408:26 cur:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:134:54: 134:75 file:&mut &mut std::io::Read]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::string::String, bool>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::string::String, std::vec::Vec<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::string::String, u16>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut std::io::BufReader<std::fs::File>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::vec::IntoIter<u16>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const terminfo::parm::Param>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<terminfo::TerminfoTerminal<std::io::Stderr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<terminfo::TerminfoTerminal<std::io::Stdout>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Stderr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::Stdout`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(&str, &[terminfo::parm::Param])>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<terminfo::parm::Param>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Arc<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `terminfo::parm::Error`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `StackUnderflow`: 0 bytes
print-type-size     variant `TypeMismatch`: 0 bytes
print-type-size     variant `UnrecognizedFormatOption`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `InvalidVariableName`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `InvalidParameterIndex`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MalformedCharacterConstant`: 0 bytes
print-type-size     variant `IntegerConstantOverflow`: 0 bytes
print-type-size     variant `MalformedIntegerConstant`: 0 bytes
print-type-size     variant `FormatWidthOverflow`: 0 bytes
print-type-size     variant `FormatPrecisionOverflow`: 0 bytes
print-type-size type: `Attr`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Bold`: 0 bytes
print-type-size     variant `Dim`: 0 bytes
print-type-size     variant `Italic`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Underline`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Blink`: 0 bytes
print-type-size     variant `Standout`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Reverse`: 0 bytes
print-type-size     variant `Secure`: 0 bytes
print-type-size     variant `ForegroundColor`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `BackgroundColor`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::io::stdio::Maybe<std::io::stdio::StderrRaw>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Real`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fake`: 0 bytes
print-type-size type: `std::io::stdio::Maybe<std::io::stdio::StdoutRaw>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Real`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fake`: 0 bytes
print-type-size type: `std::iter::Repeat<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.element`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `terminfo::parm::FormatOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `FormatDigit`: 0 bytes
print-type-size     variant `FormatOctal`: 0 bytes
print-type-size     variant `FormatHex`: 0 bytes
print-type-size     variant `FormatHEX`: 0 bytes
print-type-size     variant `FormatString`: 0 bytes
print-type-size type: `terminfo::parm::FormatState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `FormatStateFlags`: 0 bytes
print-type-size     variant `FormatStateWidth`: 0 bytes
print-type-size     variant `FormatStatePrecision`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/lib.rs:104:45: 104:83]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/lib.rs:88:45: 88:83]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:287:54: 287:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:52:68: 52:89]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:63:25: 63:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:64:23: 64:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/mod.rs:78:50: 78:68]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parm.rs:262:58: 262:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parm.rs:368:58: 368:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:105:49: 105:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:142:36: 145:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/term-0.4.4/src/terminfo/parser/compiled.rs:165:59: 165:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4161) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::append_to_string[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4414) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[61]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::io::stdio::StderrRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::io::stdio::StdoutRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, &[terminfo::parm::Param])>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut terminfo::parm::Param>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&terminfo::parm::Param>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, bool)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, u16)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::Maybe<std::io::stdio::StderrRaw>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<terminfo::parm::Param>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::imp::stdio::Stdout`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `app::Application`: 120 bytes, alignment: 8 bytes
print-type-size     field `.delta_time`: 16 bytes
print-type-size     field `.fixed_step`: 16 bytes
print-type-size     field `.last_fixed_update`: 16 bytes
print-type-size     field `.states`: 32 bytes
print-type-size     field `.timer`: 40 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `timing::Stopwatch`: 40 bytes, alignment: 8 bytes
print-type-size     field `.start_time`: 16 bytes
print-type-size     field `.end_time`: 16 bytes
print-type-size     field `.running`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `state::StateMachine`: 32 bytes, alignment: 8 bytes
print-type-size     field `.running`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.state_stack`: 24 bytes, alignment: 8 bytes
print-type-size type: `state::Trans`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Pop`: 0 bytes
print-type-size     variant `Push`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Switch`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Quit`: 0 bytes
print-type-size type: `std::vec::Vec<Box<state::State + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<state::State>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<state::State + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<state::State>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<Box<state::State>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `libc::unix::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `std::option::Option<Box<state::State>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `timing::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `timing::time::SteadyTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `timing::time::sys::inner::unix::SteadyTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<state::State + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<state::State>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::option::Option<&mut Box<state::State>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<Box<state::State + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<state::State>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::marker::PhantomData<Box<state::State + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<state::State>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `gcc::Config`: 368 bytes, alignment: 8 bytes
print-type-size     field `.include_directories`: 24 bytes
print-type-size     field `.definitions`: 24 bytes
print-type-size     field `.objects`: 24 bytes
print-type-size     field `.flags`: 24 bytes
print-type-size     field `.files`: 24 bytes
print-type-size     field `.cpp`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.cpp_link_stdlib`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cpp_set_stdlib`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.host`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.opt_level`: 24 bytes
print-type-size     field `.debug`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.env`: 24 bytes, alignment: 8 bytes
print-type-size     field `.compiler`: 24 bytes
print-type-size     field `.archiver`: 24 bytes
print-type-size     field `.cargo_metadata`: 1 bytes
print-type-size     field `.pic`: 2 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::env::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Map<std::slice::Split<u8, fn(&u8) -> bool>, fn(&[u8]) -> std::path::PathBuf>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::sys::imp::os::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::option::Option<std::option::Option<std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::slice::Split<u8, fn(&u8) -> bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.pred`: 8 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(std::ffi::OsString, std::ffi::OsString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, std::option::Option<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(std::ffi::OsString, std::ffi::OsString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::string::String, std::option::Option<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Unique<(std::ffi::OsString, std::ffi::OsString)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, std::option::Option<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, std::ffi::OsString)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::option::Option<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `mz_internal_state`: 0 bytes, alignment: 1 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `gz::DecoderReader<&[u8]>`: 264 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 264 bytes
print-type-size type: `gz::DecoderReaderBuf<bufreader::BufReader<&[u8]>>`: 264 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 176 bytes
print-type-size     field `.header`: 80 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `gz::EncoderReader<&[u8]>`: 216 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 216 bytes
print-type-size type: `gz::EncoderReaderBuf<bufreader::BufReader<&[u8]>>`: 216 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 176 bytes
print-type-size     field `.header`: 24 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.eof`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `gz::EncoderWriter<std::vec::Vec<u8>>`: 200 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size     field `.crc`: 16 bytes
print-type-size     field `.header`: 24 bytes
print-type-size type: `crc::CrcReader<deflate::DecoderReaderBuf<bufreader::BufReader<&[u8]>>>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size     field `.crc`: 16 bytes
print-type-size type: `deflate::EncoderReaderBuf<crc::CrcReader<bufreader::BufReader<&[u8]>>>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 64 bytes
print-type-size     field `.data`: 112 bytes
print-type-size type: `deflate::DecoderReader<&[u8]>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `deflate::DecoderReaderBuf<bufreader::BufReader<&[u8]>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 48 bytes
print-type-size     field `.data`: 112 bytes
print-type-size type: `deflate::DecoderWriter<std::vec::Vec<u8>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `deflate::EncoderReader<&[u8]>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `deflate::EncoderReaderBuf<bufreader::BufReader<&[u8]>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 48 bytes
print-type-size     field `.data`: 112 bytes
print-type-size type: `deflate::EncoderWriter<std::vec::Vec<u8>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `zio::Writer<std::vec::Vec<u8>, mem::Compress>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 24 bytes
print-type-size     field `.data`: 112 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size type: `zio::Writer<std::vec::Vec<u8>, mem::Decompress>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 24 bytes
print-type-size     field `.data`: 112 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size type: `zlib::DecoderReader<&[u8]>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `zlib::DecoderReaderBuf<bufreader::BufReader<&[u8]>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 48 bytes
print-type-size     field `.data`: 112 bytes
print-type-size type: `zlib::DecoderWriter<std::vec::Vec<u8>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `zlib::EncoderReader<&[u8]>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `zlib::EncoderReaderBuf<bufreader::BufReader<&[u8]>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 48 bytes
print-type-size     field `.data`: 112 bytes
print-type-size type: `zlib::EncoderWriter<std::vec::Vec<u8>>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size type: `ffi::imp::miniz_sys::mz_stream`: 112 bytes, alignment: 8 bytes
print-type-size     field `.next_in`: 8 bytes
print-type-size     field `.avail_in`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.total_in`: 8 bytes, alignment: 8 bytes
print-type-size     field `.next_out`: 8 bytes
print-type-size     field `.avail_out`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.total_out`: 8 bytes, alignment: 8 bytes
print-type-size     field `.msg`: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.zalloc`: 8 bytes
print-type-size     field `.zfree`: 8 bytes
print-type-size     field `.opaque`: 8 bytes
print-type-size     field `.data_type`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.adler`: 8 bytes, alignment: 8 bytes
print-type-size     field `.reserved`: 8 bytes
print-type-size type: `mem::Compress`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 112 bytes
print-type-size type: `mem::Decompress`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 112 bytes
print-type-size type: `mem::Stream<mem::DirCompress>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 112 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `mem::Stream<mem::DirDecompress>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 112 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `gz::Header`: 80 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.filename`: 24 bytes
print-type-size     field `.comment`: 24 bytes
print-type-size     field `.mtime`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `crc::CrcReader<bufreader::BufReader<&[u8]>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size     field `.crc`: 16 bytes
print-type-size type: `gz::Builder`: 64 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.filename`: 16 bytes
print-type-size     field `.comment`: 16 bytes
print-type-size     field `.mtime`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `bufreader::BufReader<&[u8]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<u8>, std::slice::Iter<u8>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::result::Result<std::ffi::CString, std::ffi::NulError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::ffi::NulError`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `crc::Crc`: 16 bytes, alignment: 8 bytes
print-type-size     field `.crc`: 8 bytes
print-type-size     field `.amt`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.14/src/gz.rs:181:71: 181:77]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.14/src/gz.rs:188:70: 188:76]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&mut u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, *mut libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, usize, usize) -> *mut libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Shared<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<mem::Status, mem::DataError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Compression`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Fast`: 0 bytes
print-type-size     variant `Best`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `mem::Flush`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Sync`: 0 bytes
print-type-size     variant `Partial`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size     variant `Full`: 0 bytes
print-type-size     variant `Finish`: 0 bytes
print-type-size type: `mem::Status`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `BufError`: 0 bytes
print-type-size     variant `StreamEnd`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.14/src/gz.rs:181:71: 181:77]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.14/src/gz.rs:188:70: 188:76]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.14/src/gz.rs:541:36: 541:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.14/src/gz.rs:546:33: 546:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-0.2.14/src/gz.rs:551:35: 551:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `ffi::imp::miniz_sys::mz_internal_state`: 0 bytes, alignment: 1 bytes
print-type-size type: `mem::DataError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `mem::DirCompress`: 0 bytes, alignment: 1 bytes
print-type-size type: `mem::DirDecompress`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<mem::DirCompress>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<mem::DirDecompress>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, (writer::BzDecompressor<std::vec::Vec<u8>>, std::io::Error)>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, (writer::BzCompressor<std::vec::Vec<u8>>, std::io::Error)>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `ffi::bz_stream`: 80 bytes, alignment: 8 bytes
print-type-size     field `.next_in`: 8 bytes
print-type-size     field `.avail_in`: 4 bytes
print-type-size     field `.total_in_lo32`: 4 bytes
print-type-size     field `.total_in_hi32`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.next_out`: 8 bytes, alignment: 8 bytes
print-type-size     field `.avail_out`: 4 bytes
print-type-size     field `.total_out_lo32`: 4 bytes
print-type-size     field `.total_out_hi32`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.state`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bzalloc`: 8 bytes
print-type-size     field `.bzfree`: 8 bytes
print-type-size     field `.opaque`: 8 bytes
print-type-size type: `writer::BzDecompressor<std::vec::Vec<u8>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 16 bytes
print-type-size     field `.w`: 24 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.done`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `writer::BzCompressor<std::vec::Vec<u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 16 bytes
print-type-size     field `.w`: 24 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `raw::Stream`: 16 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, *mut libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, i32, i32) -> *mut libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Compress`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fastest`: 0 bytes
print-type-size     variant `Best`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `raw::Action`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Run`: 0 bytes
print-type-size     variant `Flush`: 0 bytes
print-type-size     variant `Finish`: 0 bytes
print-type-size type: `raw::Kind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compress`: 0 bytes
print-type-size     variant `Decompress`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::process::Command>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size type: `std::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 232 bytes
print-type-size type: `std::sys::imp::process::Command`: 232 bytes, alignment: 8 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.env`: 40 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.envp`: 24 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.closures`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stdin`: 12 bytes
print-type-size     field `.stdout`: 12 bytes
print-type-size     field `.stderr`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Map<std::str::SplitTerminator<char>, core::str::LinesAnyMap>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<&&str, ()>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::str::Lines`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::str::SplitTerminator<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `phf_codegen::Map<&str>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 24 bytes
print-type-size     field `.values`: 24 bytes
print-type-size     field `.path`: 24 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::Entry<&&str, ()>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::hash::SipHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::SipHasher24`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip24Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<&&str, (), std::collections::hash::table::FullBucket<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<&&str, ()>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `phf_generator::HashState`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.disps`: 24 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<&&str, (), std::collections::hash::table::FullBucket<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<&&str, (), std::collections::hash::table::FullBucket<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<&&str, (), std::collections::hash::table::FullBucket<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::option::Option<phf_generator::HashState>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.stdout`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(std::ffi::OsString, (usize, std::ffi::CString))>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::collections::HashMap<&&str, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashSet<&&str>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.map`: 40 bytes
print-type-size type: `std::collections::hash::table::BucketState<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<&&str, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::io::BufWriter<std::fs::File>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::collections::HashMap<std::ffi::OsString, (usize, std::ffi::CString)>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<std::process::Child, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::vec::Drain<u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `std::process::Child`: 36 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 12 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size type: `phf_generator::try_generate_hash::Bucket`: 32 bytes, alignment: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.keys`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<&&str, (), &mut std::collections::hash::table::RawTable<&&str, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<&&str, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::ffi::OsString, (usize, std::ffi::CString)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<std::io::BufWriter<std::fs::File>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<std::option::Option<usize>>, [closure@DefId { krate: CrateNum(14), node: DefIndex(61) => phf_generator/57c0914ed725f0985227309b0add35cd::try_generate_hash[0]::{{closure}}[3] }]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<phf_generator::try_generate_hash::Bucket>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::vec::IntoIter<std::option::Option<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawTable<&&str, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::ffi::OsString, (usize, std::ffi::CString)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<phf_generator::try_generate_hash::Hashes>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<&str>, [closure@DefId { krate: CrateNum(14), node: DefIndex(33) => phf_generator/57c0914ed725f0985227309b0add35cd::try_generate_hash[0]::{{closure}}[0] } 0:&u64]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::StepBy<usize, std::ops::Range<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.step_by`: 8 bytes
print-type-size     field `.range`: 16 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::option::Option<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::vec::Vec<*const i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(u32, u32)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<phf_generator::try_generate_hash::Bucket>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<phf_generator::try_generate_hash::Hashes>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(u32, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<phf_generator::try_generate_hash::Bucket>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<phf_generator::try_generate_hash::Hashes>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(u32, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<phf_generator::try_generate_hash::Bucket>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<phf_generator::try_generate_hash::Hashes>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `rand::XorShiftRng`: 16 bytes, alignment: 4 bytes
print-type-size     field `.x`: 4 bytes
print-type-size     field `.y`: 4 bytes
print-type-size     field `.z`: 4 bytes
print-type-size     field `.w`: 4 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<&&str, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::ffi::OsString, (usize, std::ffi::CString)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@DefId { krate: CrateNum(14), node: DefIndex(41) => phf_generator/57c0914ed725f0985227309b0add35cd::try_generate_hash[0]::{{closure}}[1] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &phf_generator::try_generate_hash::Hashes)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<phf_generator::try_generate_hash::Hashes>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(u32, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<phf_generator::try_generate_hash::Bucket>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<phf_generator::try_generate_hash::Hashes>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sys::imp::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_flags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `phf_generator::try_generate_hash::Hashes`: 12 bytes, alignment: 4 bytes
print-type-size     field `.g`: 4 bytes
print-type-size     field `.f1`: 4 bytes
print-type-size     field `.f2`: 4 bytes
print-type-size type: `std::option::Option<std::sys::imp::process::Stdio>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sys::imp::process::Process`: 12 bytes, alignment: 4 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size     field `.status`: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(33) => phf_generator/57c0914ed725f0985227309b0add35cd::try_generate_hash[0]::{{closure}}[0] } 0:&u64]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<phf_generator::try_generate_hash::Hashes>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const &str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (u32, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const *const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const phf_generator::try_generate_hash::Bucket>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const phf_generator::try_generate_hash::Hashes>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<std::io::BufWriter<std::fs::File>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(u32, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::fs::File>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&phf_generator::try_generate_hash::Bucket>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&phf_generator::try_generate_hash::Hashes>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<(&&str, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::fs::File>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::process::ChildStderr>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::process::ChildStdin>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::process::ChildStdout>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::sys::imp::process::ExitStatus>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Shared<std::option::Option<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(u32, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<phf_generator::try_generate_hash::Bucket>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<phf_generator::try_generate_hash::Hashes>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sys::imp::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::num::Wrapping<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::process::ChildStderr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdin`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdout`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::pipe::AnonPipe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/build.rs:10:24: 10:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/build.rs:41:24: 41:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/build.rs:46:31: 46:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(41) => phf_generator/57c0914ed725f0985227309b0add35cd::try_generate_hash[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(45) => phf_generator/57c0914ed725f0985227309b0add35cd::try_generate_hash[0]::{{closure}}[2] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(61) => phf_generator/57c0914ed725f0985227309b0add35cd::try_generate_hash[0]::{{closure}}[3] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4414) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[61]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::str::LinesAnyMap`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip24Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(u32, u32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&phf_generator::try_generate_hash::Bucket>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&phf_generator::try_generate_hash::Hashes>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&&str, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::ffi::OsString, (usize, std::ffi::CString))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u32, u32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Box<std::ops::FnMut() -> std::result::Result<(), std::io::Error> + Send + Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<phf_generator::try_generate_hash::Bucket>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<phf_generator::try_generate_hash::Hashes>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip24Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<u8>, std::char::EscapeDefault, fn(&u8) -> std::char::EscapeDefault>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `de::value::Error`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Custom`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidType`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidLength`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `InvalidValue`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `EndOfStream`: 0 bytes
print-type-size     variant `UnknownVariant`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnknownField`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MissingField`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<<std::char::EscapeDefault as std::iter::IntoIterator>::IntoIter>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::char::EscapeDefault>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `bytes::bytebuf::ByteBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size type: `core::char::EscapeDefaultState`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size     variant `Char`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Backslash`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Unicode`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::char::EscapeDefault`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `bytes::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `core::slice::Repr<(char, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::char::EscapeUnicode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.c`: 4 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.hex_digit_idx`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `utils::EncodeUtf8`: 16 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.pos`: 8 bytes, alignment: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-0.8.19/src/utils.rs:57:24: 65:6 c:&char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut std::char::EscapeDefault>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::char::EscapeUnicodeState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size     variant `RightBrace`: 0 bytes
print-type-size     variant `Value`: 0 bytes
print-type-size     variant `LeftBrace`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Backslash`: 0 bytes
print-type-size type: `de::Type`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size     variant `Usize`: 0 bytes
print-type-size     variant `U8`: 0 bytes
print-type-size     variant `U16`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `U64`: 0 bytes
print-type-size     variant `Isize`: 0 bytes
print-type-size     variant `I8`: 0 bytes
print-type-size     variant `I16`: 0 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `I64`: 0 bytes
print-type-size     variant `F32`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `String`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `Option`: 0 bytes
print-type-size     variant `Seq`: 0 bytes
print-type-size     variant `Map`: 0 bytes
print-type-size     variant `UnitStruct`: 0 bytes
print-type-size     variant `NewtypeStruct`: 0 bytes
print-type-size     variant `TupleStruct`: 0 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size     variant `FieldName`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size     variant `VariantName`: 0 bytes
print-type-size     variant `StructVariant`: 0 bytes
print-type-size     variant `TupleVariant`: 0 bytes
print-type-size     variant `UnitVariant`: 0 bytes
print-type-size     variant `Bytes`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize for std::result::Result<T, E>>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize for std::time::Duration>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Secs`: 0 bytes
print-type-size     variant `Nanos`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4809) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[67]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<nix::sys::socket::RecvMsg, nix::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 175 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<nix::sys::socket::RecvMsg, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `nix::sys::socket::RecvMsg`: 168 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 8 bytes
print-type-size     field `.cmsg_buffer`: 16 bytes
print-type-size     field `.address`: 136 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::option::Option<nix::sys::socket::SockAddr>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `std::result::Result<nix::sys::socket::SockAddr, nix::Error>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 135 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `libc::sockaddr_storage`: 128 bytes, alignment: 8 bytes
print-type-size     field `.ss_family`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.__ss_align`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__ss_pad2`: 112 bytes
print-type-size type: `nix::sys::socket::SockAddr`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inet`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Unix`: 124 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Netlink`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `nix::sys::socket::UnixAddr`: 120 bytes, alignment: 8 bytes
print-type-size     field `.0`: 110 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `libc::sockaddr_un`: 110 bytes, alignment: 2 bytes
print-type-size     field `.sun_family`: 2 bytes
print-type-size     field `.sun_path`: 108 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<std::thread::Inner>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `poll::ReadinessNode`: 72 bytes, alignment: 8 bytes
print-type-size     field `.next_all_nodes`: 8 bytes
print-type-size     field `.prev_all_nodes`: 8 bytes
print-type-size     field `.registration_data`: 24 bytes
print-type-size     field `.next_readiness`: 8 bytes
print-type-size     field `.events`: 8 bytes
print-type-size     field `.queued`: 8 bytes
print-type-size     field `.ref_count`: 8 bytes
print-type-size type: `timer::Inner`: 72 bytes, alignment: 8 bytes
print-type-size     field `.registration`: 16 bytes
print-type-size     field `.set_readiness`: 16 bytes
print-type-size     field `.wakeup_state`: 8 bytes
print-type-size     field `.wakeup_thread`: 32 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(592) => std/8a732dca6b5bfa0e664f890723f35836::thread[0]::{{impl}}[0]::spawn[0]::{{closure}}[0] } 0:std::thread::Thread, 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/timer.rs:416:19: 458:6 state:std::sync::Arc<std::sync::atomic::AtomicUsize>, start:std::time::Instant, tick_ms:u64, set_readiness:poll::SetReadiness], 2:std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>]`: 64 bytes, alignment: 8 bytes
print-type-size     end padding: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `alloc::arc::ArcInner<channel::Inner>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 40 bytes
print-type-size type: `nix::sys::socket::ffi::msghdr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.msg_name`: 8 bytes
print-type-size     field `.msg_namelen`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.msg_iov`: 8 bytes, alignment: 8 bytes
print-type-size     field `.msg_iovlen`: 8 bytes
print-type-size     field `.msg_control`: 8 bytes
print-type-size     field `.msg_controllen`: 8 bytes
print-type-size     field `.msg_flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<(usize, std::net::SocketAddr)>, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::thread::Inner`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.lock`: 16 bytes
print-type-size     field `.cvar`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/timer.rs:416:19: 458:6 state:std::sync::Arc<std::sync::atomic::AtomicUsize>, start:std::time::Instant, tick_ms:u64, set_readiness:poll::SetReadiness]`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<poll::ReadinessQueueInner>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `deprecated::event_loop::Config`: 48 bytes, alignment: 8 bytes
print-type-size     field `.notify_capacity`: 8 bytes
print-type-size     field `.messages_per_tick`: 8 bytes
print-type-size     field `.timer_tick`: 16 bytes
print-type-size     field `.timer_wheel_size`: 8 bytes
print-type-size     field `.timer_capacity`: 8 bytes
print-type-size type: `deprecated::event_loop::EventLoopBuilder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.config`: 48 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_cond_t>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(usize, std::net::SocketAddr)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/timer.rs:416:19: 458:6 state:std::sync::Arc<std::sync::atomic::AtomicUsize>, start:std::time::Instant, tick_ms:u64, set_readiness:poll::SetReadiness]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/timer.rs:416:19: 458:6 state:std::sync::Arc<std::sync::atomic::AtomicUsize>, start:std::time::Instant, tick_ms:u64, set_readiness:poll::SetReadiness]>, ()>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 48 bytes
print-type-size     field `.r`: 0 bytes
print-type-size type: `std::result::Result<(usize, std::net::SocketAddr), std::io::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sys::imp::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::sys_common::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `channel::Inner`: 40 bytes, alignment: 8 bytes
print-type-size     field `.pending`: 8 bytes
print-type-size     field `.senders`: 8 bytes
print-type-size     field `.set_readiness`: 24 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `log::LogLocation`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__module_path`: 16 bytes
print-type-size     field `.__file`: 16 bytes
print-type-size     field `.__line`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::option::Option<nix::sys::socket::ControlMessage>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(std::net::TcpStream, std::net::SocketAddr), std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(sys::unix::tcp::TcpStream, std::net::SocketAddr), std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::net::SocketAddr, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::option::IntoIter<std::net::SocketAddr>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::thread::JoinHandle<()>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::thread::Builder`: 40 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.stack_size`: 16 bytes
print-type-size type: `std::option::IntoIter<std::net::SocketAddr>`: 36 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 36 bytes
print-type-size type: `std::option::Item<std::net::SocketAddr>`: 36 bytes, alignment: 4 bytes
print-type-size     field `.opt`: 36 bytes
print-type-size type: `std::option::Option<std::net::SocketAddr>`: 36 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `nix::sys::socket::ControlMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ScmRights`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `nix::sys::socket::InetAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `poll::ReadinessQueueInner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.awakener`: 8 bytes
print-type-size     field `.head_all_nodes`: 8 bytes
print-type-size     field `.head_readiness`: 8 bytes
print-type-size     field `.sleep_token`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<poll::ReadinessQueueInner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `std::result::Result<poll::Poll, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<(usize, std::option::Option<i32>)>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<std::io::Error>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::thread::JoinHandle<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::thread::JoinInner<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.native`: 16 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.packet`: 8 bytes
print-type-size type: `timer::Builder`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tick`: 16 bytes
print-type-size     field `.num_slots`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size type: `libc::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 28 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `channel::ReceiverCtl`: 24 bytes, alignment: 8 bytes
print-type-size     field `.registration`: 16 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `lazycell::AtomicLazyCell<poll::SetReadiness>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.state`: 8 bytes
print-type-size type: `nix::sys::socket::CmsgSpace<[i32; 1]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._hdr`: 16 bytes
print-type-size     field `._data`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `nix::sys::socket::UnknownCmsg`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 16 bytes
print-type-size type: `poll::Events`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `poll::Poll`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.selector`: 16 bytes
print-type-size     field `.readiness_queue`: 8 bytes
print-type-size type: `poll::RegistrationData`: 24 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size     field `.interest`: 8 bytes
print-type-size     field `.opts`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<poll::RegistrationData>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(usize, std::option::Option<i32>)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<event::Event>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::time::Duration>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&mut poll::RegistrationData, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&net2::TcpBuilder, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(deprecated::unix::PipeReader, deprecated::unix::PipeWriter), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(i32, i32), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(sys::unix::io::Io, sys::unix::io::Io), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(usize, std::option::Option<i32>), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<bool, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<deprecated::unix::PipeReader, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<deprecated::unix::PipeWriter, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<deprecated::unix::UnixListener, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<deprecated::unix::UnixSocket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<deprecated::unix::UnixStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<i32, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<net2::TcpBuilder, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<net::tcp::TcpListener, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<net::tcp::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<net::udp::UdpSocket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<poll::ReadinessQueue, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::net::TcpListener, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::net::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::net::UdpSocket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<deprecated::unix::UnixStream>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<u32>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<usize>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sys::imp::thread::Thread, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sys_common::net::UdpSocket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<sys::unix::awakener::pipe::Awakener, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<sys::unix::epoll::Selector, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<sys::unix::io::Io, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<sys::unix::tcp::TcpListener, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<sys::unix::tcp::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<sys::unix::udp::UdpSocket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<sys::unix::uds::UnixSocket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u32, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<nix::sys::epoll::EpollEvent>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `sys::unix::epoll::Events`: 24 bytes, alignment: 8 bytes
print-type-size     field `.events`: 24 bytes
print-type-size type: `timer::TimerError`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.desc`: 16 bytes, alignment: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/epoll.rs:199:34: 223:10 self:&&sys::unix::epoll::Events, idx:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(13), node: DefIndex(601) => net2/f27bc49aed05d34f54047752b8e4fd83::ext[0]::do_connect[0]::{{closure}}[0]::{{closure}}[0] } 0:&net2::socket::Socket, 1:&std::net::SocketAddr]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<nix::sys::epoll::EpollEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(event::PollOpt, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(event::Ready, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<nix::sys::epoll::EpollEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<nix::sys::uio::IoVec<&mut [u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `event::Event`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size type: `lazycell::LazyCell<poll::Registration>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `libc::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::iovec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iov_base`: 8 bytes
print-type-size     field `.iov_len`: 8 bytes
print-type-size type: `libc::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `libc::unix::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `net2::TcpBuilder`: 16 bytes, alignment: 8 bytes
print-type-size     field `.socket`: 16 bytes
print-type-size type: `net::tcp::TcpListener`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.selector_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `net::tcp::TcpStream`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.selector_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `net::udp::UdpSocket`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.selector_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `nix::fcntl::FcntlArg`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `F_DUPFD`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_DUPFD_CLOEXEC`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_GETFD`: 0 bytes
print-type-size     variant `F_SETFD`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_GETFL`: 0 bytes
print-type-size     variant `F_SETFL`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_SETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_SETLKW`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_GETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_OFD_SETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_OFD_SETLKW`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_OFD_GETLK`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F_ADD_SEALS`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F_GET_SEALS`: 0 bytes
print-type-size type: `nix::sys::socket::CmsgIterator`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `nix::sys::socket::ffi::cmsghdr`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cmsg_len`: 8 bytes
print-type-size     field `.cmsg_level`: 4 bytes
print-type-size     field `.cmsg_type`: 4 bytes
print-type-size     field `.cmsg_data`: 0 bytes
print-type-size type: `nix::sys::uio::IoVec<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `nix::sys::uio::IoVec<&mut [u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `poll::EventsIter`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size type: `poll::Registration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `poll::RegistrationInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `poll::SetReadiness`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::cell::Ref<std::option::Option<net2::socket::Socket>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefCell<std::option::Option<net2::socket::Socket>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<poll::Registration>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<poll::SetReadiness>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::net::SocketAddrV4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<poll::ReadyRef>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<poll::Registration>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<poll::SetReadiness>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sys::imp::thread::Thread>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<token::Token>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::raw::TraitObject`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.vtable`: 8 bytes
print-type-size type: `std::result::Result<(), Box<std::any::Any + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), poll::Registration>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), poll::SetReadiness>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<*mut poll::ReadinessNode, *mut poll::ReadinessNode>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<isize, nix::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<std::cell::Ref<std::option::Option<net2::socket::Socket>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, nix::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(event::PollOpt, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(event::Ready, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Condvar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size type: `std::sync::Mutex<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sys::imp::time::Timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::sys::imp::time::inner::Instant`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::Instant`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `sys::unix::epoll::Selector`: 16 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.epfd`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `timer::Timeout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size     field `.tick`: 8 bytes
print-type-size type: `timer::WheelEntry`: 16 bytes, alignment: 8 bytes
print-type-size     field `.next_tick`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size type: `libc::sockaddr_nl`: 12 bytes, alignment: 4 bytes
print-type-size     field `.nl_family`: 2 bytes
print-type-size     field `.nl_pad`: 2 bytes
print-type-size     field `.nl_pid`: 4 bytes
print-type-size     field `.nl_groups`: 4 bytes
print-type-size type: `nix::sys::epoll::EpollEvent`: 12 bytes, alignment: 1 bytes
print-type-size     field `.events`: 4 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `nix::sys::socket::NetlinkAddr`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `std::result::Result<(i32, i32), nix::Error>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 11 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/net/tcp.rs:341:34: 346:10 self:&&net::tcp::TcpListener]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/net/tcp.rs:91:34: 96:10 self:&&net::tcp::TcpStream]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/net/udp.rs:49:18: 54:14 self:&&net::udp::UdpSocket]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/poll.rs:855:31: 855:70 self:&mut &mut poll::ReadyList]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(13), node: DefIndex(27) => net2/f27bc49aed05d34f54047752b8e4fd83::tcp[0]::{{impl}}[0]::bind[0]::{{closure}}[0] } 0:&std::net::SocketAddr]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(13), node: DefIndex(30) => net2/f27bc49aed05d34f54047752b8e4fd83::tcp[0]::{{impl}}[0]::bind[0]::{{closure}}[1] } 0:&&net2::TcpBuilder]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(13), node: DefIndex(598) => net2/f27bc49aed05d34f54047752b8e4fd83::ext[0]::do_connect[0]::{{closure}}[0] } 0:&net2::socket::Socket]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `channel::SenderCtl`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<channel::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<poll::ReadinessQueueInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const nix::sys::epoll::EpollEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `event::PollOpt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `event::Ready`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `log::LogLevel`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `log::LogLevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `net::SelectorId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `poll::ReadinessQueue`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `poll::ReadyList`: 8 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size type: `poll::ReadyRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut poll::ReadinessNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<net2::socket::Socket>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&(event::PollOpt, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(event::Ready, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut nix::sys::socket::CmsgSpace<[i32; 1]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut poll::ReadinessNode>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&nix::sys::epoll::EpollEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&nix::sys::socket::SockAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&poll::ReadinessNode>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&poll::Registration>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&poll::SetReadiness>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<Box<poll::ReadinessNode>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<deprecated::unix::UnixStream>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<net2::socket::Socket>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<channel::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<poll::ReadinessQueueInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<nix::sys::epoll::EpollEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<i32, nix::Error>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::sync::Arc<channel::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<poll::ReadinessQueueInner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::atomic::AtomicUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<poll::ReadinessNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::imp::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `std::thread::Packet<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `sys::unix::awakener::pipe::Awakener`: 8 bytes, alignment: 4 bytes
print-type-size     field `.reader`: 4 bytes
print-type-size     field `.writer`: 4 bytes
print-type-size type: `sys::unix::eventedfd::EventedFd`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `token::Token`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `deprecated::unix::PipeReader`: 4 bytes, alignment: 4 bytes
print-type-size     field `.io`: 4 bytes
print-type-size type: `deprecated::unix::PipeWriter`: 4 bytes, alignment: 4 bytes
print-type-size     field `.io`: 4 bytes
print-type-size type: `deprecated::unix::UnixListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size type: `deprecated::unix::UnixSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size type: `deprecated::unix::UnixStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size type: `libc::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `net2::socket::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `net2::sys::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `nix::fcntl::FdFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `nix::fcntl::OFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `nix::fcntl::SealFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `nix::sys::epoll::EpollEventKind`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `nix::sys::epoll::EpollOp`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `EpollCtlAdd`: 0 bytes
print-type-size     variant `EpollCtlDel`: 0 bytes
print-type-size     variant `EpollCtlMod`: 0 bytes
print-type-size type: `nix::sys::socket::AddressFamily`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Unix`: 0 bytes
print-type-size     variant `Inet`: 0 bytes
print-type-size     variant `Inet6`: 0 bytes
print-type-size     variant `Netlink`: 0 bytes
print-type-size     variant `Packet`: 0 bytes
print-type-size type: `nix::sys::socket::MsgFlags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `nix::sys::socket::SockFlag`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `nix::sys::socket::SockType`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Stream`: 0 bytes
print-type-size     variant `Datagram`: 0 bytes
print-type-size     variant `SeqPacket`: 0 bytes
print-type-size     variant `Raw`: 0 bytes
print-type-size     variant `Rdm`: 0 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::net::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::process::ChildStderr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdin`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdout`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::net::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::pipe::AnonPipe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys_common::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::net::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `sys::unix::io::Io`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `sys::unix::tcp::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `sys::unix::tcp::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `sys::unix::udp::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.io`: 4 bytes
print-type-size type: `sys::unix::uds::UnixSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.io`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::result::Result<(), nix::Error>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `nix::Error`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Sys`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidPath`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::fmt::FlagV1`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SignPlus`: 0 bytes
print-type-size     variant `SignMinus`: 0 bytes
print-type-size     variant `Alternate`: 0 bytes
print-type-size     variant `SignAwareZeroPad`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `nix::Errno`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `UnknownErrno`: 0 bytes
print-type-size     variant `EPERM`: 0 bytes
print-type-size     variant `ENOENT`: 0 bytes
print-type-size     variant `ESRCH`: 0 bytes
print-type-size     variant `EINTR`: 0 bytes
print-type-size     variant `EIO`: 0 bytes
print-type-size     variant `ENXIO`: 0 bytes
print-type-size     variant `E2BIG`: 0 bytes
print-type-size     variant `ENOEXEC`: 0 bytes
print-type-size     variant `EBADF`: 0 bytes
print-type-size     variant `ECHILD`: 0 bytes
print-type-size     variant `EAGAIN`: 0 bytes
print-type-size     variant `ENOMEM`: 0 bytes
print-type-size     variant `EACCES`: 0 bytes
print-type-size     variant `EFAULT`: 0 bytes
print-type-size     variant `ENOTBLK`: 0 bytes
print-type-size     variant `EBUSY`: 0 bytes
print-type-size     variant `EEXIST`: 0 bytes
print-type-size     variant `EXDEV`: 0 bytes
print-type-size     variant `ENODEV`: 0 bytes
print-type-size     variant `ENOTDIR`: 0 bytes
print-type-size     variant `EISDIR`: 0 bytes
print-type-size     variant `EINVAL`: 0 bytes
print-type-size     variant `ENFILE`: 0 bytes
print-type-size     variant `EMFILE`: 0 bytes
print-type-size     variant `ENOTTY`: 0 bytes
print-type-size     variant `ETXTBSY`: 0 bytes
print-type-size     variant `EFBIG`: 0 bytes
print-type-size     variant `ENOSPC`: 0 bytes
print-type-size     variant `ESPIPE`: 0 bytes
print-type-size     variant `EROFS`: 0 bytes
print-type-size     variant `EMLINK`: 0 bytes
print-type-size     variant `EPIPE`: 0 bytes
print-type-size     variant `EDOM`: 0 bytes
print-type-size     variant `ERANGE`: 0 bytes
print-type-size     variant `EDEADLK`: 0 bytes
print-type-size     variant `ENAMETOOLONG`: 0 bytes
print-type-size     variant `ENOLCK`: 0 bytes
print-type-size     variant `ENOSYS`: 0 bytes
print-type-size     variant `ENOTEMPTY`: 0 bytes
print-type-size     variant `ELOOP`: 0 bytes
print-type-size     variant `ENOMSG`: 0 bytes
print-type-size     variant `EIDRM`: 0 bytes
print-type-size     variant `ECHRNG`: 0 bytes
print-type-size     variant `EL2NSYNC`: 0 bytes
print-type-size     variant `EL3HLT`: 0 bytes
print-type-size     variant `EL3RST`: 0 bytes
print-type-size     variant `ELNRNG`: 0 bytes
print-type-size     variant `EUNATCH`: 0 bytes
print-type-size     variant `ENOCSI`: 0 bytes
print-type-size     variant `EL2HLT`: 0 bytes
print-type-size     variant `EBADE`: 0 bytes
print-type-size     variant `EBADR`: 0 bytes
print-type-size     variant `EXFULL`: 0 bytes
print-type-size     variant `ENOANO`: 0 bytes
print-type-size     variant `EBADRQC`: 0 bytes
print-type-size     variant `EBADSLT`: 0 bytes
print-type-size     variant `EBFONT`: 0 bytes
print-type-size     variant `ENOSTR`: 0 bytes
print-type-size     variant `ENODATA`: 0 bytes
print-type-size     variant `ETIME`: 0 bytes
print-type-size     variant `ENOSR`: 0 bytes
print-type-size     variant `ENONET`: 0 bytes
print-type-size     variant `ENOPKG`: 0 bytes
print-type-size     variant `EREMOTE`: 0 bytes
print-type-size     variant `ENOLINK`: 0 bytes
print-type-size     variant `EADV`: 0 bytes
print-type-size     variant `ESRMNT`: 0 bytes
print-type-size     variant `ECOMM`: 0 bytes
print-type-size     variant `EPROTO`: 0 bytes
print-type-size     variant `EMULTIHOP`: 0 bytes
print-type-size     variant `EDOTDOT`: 0 bytes
print-type-size     variant `EBADMSG`: 0 bytes
print-type-size     variant `EOVERFLOW`: 0 bytes
print-type-size     variant `ENOTUNIQ`: 0 bytes
print-type-size     variant `EBADFD`: 0 bytes
print-type-size     variant `EREMCHG`: 0 bytes
print-type-size     variant `ELIBACC`: 0 bytes
print-type-size     variant `ELIBBAD`: 0 bytes
print-type-size     variant `ELIBSCN`: 0 bytes
print-type-size     variant `ELIBMAX`: 0 bytes
print-type-size     variant `ELIBEXEC`: 0 bytes
print-type-size     variant `EILSEQ`: 0 bytes
print-type-size     variant `ERESTART`: 0 bytes
print-type-size     variant `ESTRPIPE`: 0 bytes
print-type-size     variant `EUSERS`: 0 bytes
print-type-size     variant `ENOTSOCK`: 0 bytes
print-type-size     variant `EDESTADDRREQ`: 0 bytes
print-type-size     variant `EMSGSIZE`: 0 bytes
print-type-size     variant `EPROTOTYPE`: 0 bytes
print-type-size     variant `ENOPROTOOPT`: 0 bytes
print-type-size     variant `EPROTONOSUPPORT`: 0 bytes
print-type-size     variant `ESOCKTNOSUPPORT`: 0 bytes
print-type-size     variant `EOPNOTSUPP`: 0 bytes
print-type-size     variant `EPFNOSUPPORT`: 0 bytes
print-type-size     variant `EAFNOSUPPORT`: 0 bytes
print-type-size     variant `EADDRINUSE`: 0 bytes
print-type-size     variant `EADDRNOTAVAIL`: 0 bytes
print-type-size     variant `ENETDOWN`: 0 bytes
print-type-size     variant `ENETUNREACH`: 0 bytes
print-type-size     variant `ENETRESET`: 0 bytes
print-type-size     variant `ECONNABORTED`: 0 bytes
print-type-size     variant `ECONNRESET`: 0 bytes
print-type-size     variant `ENOBUFS`: 0 bytes
print-type-size     variant `EISCONN`: 0 bytes
print-type-size     variant `ENOTCONN`: 0 bytes
print-type-size     variant `ESHUTDOWN`: 0 bytes
print-type-size     variant `ETOOMANYREFS`: 0 bytes
print-type-size     variant `ETIMEDOUT`: 0 bytes
print-type-size     variant `ECONNREFUSED`: 0 bytes
print-type-size     variant `EHOSTDOWN`: 0 bytes
print-type-size     variant `EHOSTUNREACH`: 0 bytes
print-type-size     variant `EALREADY`: 0 bytes
print-type-size     variant `EINPROGRESS`: 0 bytes
print-type-size     variant `ESTALE`: 0 bytes
print-type-size     variant `EUCLEAN`: 0 bytes
print-type-size     variant `ENOTNAM`: 0 bytes
print-type-size     variant `ENAVAIL`: 0 bytes
print-type-size     variant `EISNAM`: 0 bytes
print-type-size     variant `EREMOTEIO`: 0 bytes
print-type-size     variant `EDQUOT`: 0 bytes
print-type-size     variant `ENOMEDIUM`: 0 bytes
print-type-size     variant `EMEDIUMTYPE`: 0 bytes
print-type-size     variant `ECANCELED`: 0 bytes
print-type-size     variant `ENOKEY`: 0 bytes
print-type-size     variant `EKEYEXPIRED`: 0 bytes
print-type-size     variant `EKEYREVOKED`: 0 bytes
print-type-size     variant `EKEYREJECTED`: 0 bytes
print-type-size     variant `EOWNERDEAD`: 0 bytes
print-type-size     variant `ENOTRECOVERABLE`: 0 bytes
print-type-size     variant `ERFKILL`: 0 bytes
print-type-size     variant `EHWPOISON`: 0 bytes
print-type-size type: `nix::sys::socket::Shutdown`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Read`: 0 bytes
print-type-size     variant `Write`: 0 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::net::Shutdown`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Read`: 0 bytes
print-type-size     variant `Write`: 0 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `timer::TimerErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TimerOverflow`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/net/tcp.rs:306:51: 311:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/net/tcp.rs:320:31: 327:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/epoll.rs:74:18: 74:76]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/epoll.rs:90:32: 90:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/io.rs:10:51: 10:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/net.rs:56:14: 56:49]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/tcp.rs:152:36: 156:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/tcp.rs:160:38: 165:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/tcp.rs:47:36: 51:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/udp.rs:28:33: 32:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.1/src/sys/unix/uds.rs:37:18: 37:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(5382) => std/8a732dca6b5bfa0e664f890723f35836::net[0]::each_addr[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(17), node: DefIndex(528) => nix/81df0fed03a1cfed83847a6d9b055367::sys[0]::epoll[0]::epoll_wait[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(event::PollOpt, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(event::Ready, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut [u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<channel::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<poll::ReadinessQueueInner>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<nix::sys::epoll::EpollEvent>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::cell::Cell<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::result::Result<Url, parser::ParseError>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 95 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `Url`: 88 bytes, alignment: 8 bytes
print-type-size     field `.serialization`: 24 bytes
print-type-size     field `.scheme_end`: 4 bytes
print-type-size     field `.username_end`: 4 bytes
print-type-size     field `.host_start`: 4 bytes
print-type-size     field `.host_end`: 4 bytes
print-type-size     field `.host`: 20 bytes
print-type-size     field `.port`: 4 bytes
print-type-size     field `.path_start`: 4 bytes
print-type-size     field `.query_start`: 8 bytes
print-type-size     field `.fragment_start`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Skip<std::path::Components>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<std::str::Split<char>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `origin::Origin`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Opaque`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Tuple`: 58 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 32 bytes
print-type-size         field `.2`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::option::Option<(std::borrow::Cow<str>, std::borrow::Cow<str>)>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::option::Option<std::path::Component>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::path::Components`: 72 bytes, alignment: 8 bytes
print-type-size     field `.path`: 16 bytes
print-type-size     field `.prefix`: 48 bytes
print-type-size     field `.has_physical_root`: 1 bytes
print-type-size     field `.front`: 1 bytes
print-type-size     field `.back`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::path::Component`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Prefix`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `RootDir`: 0 bytes
print-type-size     variant `CurDir`: 0 bytes
print-type-size     variant `ParentDir`: 0 bytes
print-type-size     variant `Normal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `parser::Parser`: 56 bytes, alignment: 8 bytes
print-type-size     field `.serialization`: 24 bytes
print-type-size     field `.base_url`: 8 bytes
print-type-size     field `.query_encoding_override`: 0 bytes
print-type-size     field `.log_syntax_violation`: 16 bytes
print-type-size     field `.context`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::path::PrefixComponent`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.parsed`: 40 bytes
print-type-size type: `std::result::Result<(host::Host, parser::Input), parser::ParseError>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 55 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<(u32, host::HostInternal, std::option::Option<u16>, parser::Input), parser::ParseError>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 55 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `path_segments::PathSegmentsMut`: 48 bytes, alignment: 8 bytes
print-type-size     field `.url`: 8 bytes
print-type-size     field `.after_first_slash`: 8 bytes
print-type-size     field `.after_path`: 24 bytes
print-type-size     field `.old_after_path_position`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(std::string::String, std::string::String)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<std::path::Prefix>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<(bool, host::HostInternal, parser::Input), parser::ParseError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<host::SocketAddrs, std::io::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<path_segments::PathSegmentsMut, ()>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/host.rs:94:24: 96:10]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<fn(char) -> bool {parser::ascii_alpha}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<fn(char) -> bool {parser::c0_control_or_space}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/host.rs:94:24: 96:10]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<fn(char) -> bool {parser::c0_control_or_space}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `core::slice::GenericSplitN<std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:102:49: 102:63]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.invert`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::slice::GenericSplitN<std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:96:51: 96:65]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.invert`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `form_urlencoded::Serializer<UrlQuery>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.target`: 32 bytes
print-type-size     field `.start_position`: 8 bytes
print-type-size     field `.encoding`: 0 bytes
print-type-size type: `host::HostAndPort`: 40 bytes, alignment: 8 bytes
print-type-size     field `.host`: 32 bytes
print-type-size     field `.port`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `host::SocketAddrs`: 40 bytes, alignment: 8 bytes
print-type-size     field `.state`: 40 bytes
print-type-size type: `host::SocketAddrsState`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Domain`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `One`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::path::Prefix`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Verbatim`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `VerbatimUNC`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `VerbatimDisk`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `DeviceNS`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `UNC`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Disk`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<host::Host, parser::ParseError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<host::HostAndPort<&str>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::borrow::Cow<str>, std::str::Utf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::IntoIter<std::net::SocketAddr>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::SplitN<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:102:49: 102:63]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::slice::SplitN<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:96:51: 96:65]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::string::Drain`: 40 bytes, alignment: 8 bytes
print-type-size     field `.string`: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::option::Option<std::net::SocketAddr>`: 36 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `UrlQuery`: 32 bytes, alignment: 8 bytes
print-type-size     field `.url`: 8 bytes
print-type-size     field `.fragment`: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/path_segments.rs:163:25: 177:10 segments:std::option::Option<&str>, path_start:&usize, scheme_type:&parser::SchemeType]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `host::Host`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Domain`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ipv4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ipv6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `host::HostAndPort<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.host`: 24 bytes
print-type-size     field `.port`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::borrow::Cow<[u8]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `std::option::Option<(i32, parser::Input)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(std::option::Option<u16>, parser::Input)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<UrlQuery>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<host::Host<&str>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(std::option::Option<u16>, parser::Input), parser::ParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<(u32, parser::Input), parser::ParseError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<host::Host<&str>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<host::Host<&str>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, idna::uts46::Errors>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::vec::IntoIter<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::net::SocketAddr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 28 bytes
print-type-size type: `ParseOptions`: 24 bytes, alignment: 8 bytes
print-type-size     field `.base_url`: 8 bytes
print-type-size     field `.encoding_override`: 0 bytes
print-type-size     field `.log_syntax_violation`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:813:21: 824:10 cannot_be_a_base:&bool, path:&mut &str, scheme_type:&parser::SchemeType]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `host::Host<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Domain`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ipv4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ipv6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `idna::uts46::Errors`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::TakeWhile<parser::Input, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:336:46: 336:74]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::TakeWhile<parser::Input, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:617:50: 617:78]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(&u8, &[u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(char, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<parser::Input>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), idna::uts46::Errors>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<parser::Input, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::path::PathBuf, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<u16, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 22 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:102:49: 102:63]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.pred`: 0 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:96:51: 96:65]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.pred`: 0 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<idna::uts46::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `host::HostInternal`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Domain`: 0 bytes
print-type-size     variant `Ipv4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ipv6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::net::IpAddr`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `V6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(std::option::Option<u32>, std::option::Option<u32>), parser::ParseError>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 19 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::net::Ipv6Addr, parser::ParseError>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 19 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:1064:22: 1067:10 removed_bytes:&u32, added_bytes:&u32]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:1091:22: 1094:10 old_scheme_end:&u32, new_scheme_end:&u32]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:745:25: 745:91 scheme_end:&u32, input:&&str]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:841:22: 844:10 old_after_path_position:&u32, new_after_path_position:&u32]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:883:30: 886:18 old_path_start:&u32, new_path_start:&u32]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:952:22: 955:10 old_suffix_pos:&u32, new_suffix_pos:&u32]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:995:26: 998:14 old_host_start:&u32, new_host_start:&u32]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:729:26: 729:85 self:&&mut parser::Parser, scheme_end:&u32]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<idna::uts46::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::net::SocketAddr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<idna::uts46::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `form_urlencoded::ByteSerialize`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `form_urlencoded::Parse`: 16 bytes, alignment: 8 bytes
print-type-size     field `.input`: 16 bytes
print-type-size     field `.encoding`: 0 bytes
print-type-size type: `form_urlencoded::ParseIntoOwned`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `parser::Input`: 16 bytes, alignment: 8 bytes
print-type-size     field `.chars`: 16 bytes
print-type-size type: `percent_encoding::PercentDecode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `percent_encoding::PercentEncode<percent_encoding::DEFAULT_ENCODE_SET>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.encode_set`: 0 bytes
print-type-size type: `percent_encoding::PercentEncode<percent_encoding::PATH_SEGMENT_ENCODE_SET>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.encode_set`: 0 bytes
print-type-size type: `percent_encoding::PercentEncode<percent_encoding::QUERY_ENCODE_SET>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.encode_set`: 0 bytes
print-type-size type: `percent_encoding::PercentEncode<percent_encoding::SIMPLE_ENCODE_SET>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.encode_set`: 0 bytes
print-type-size type: `percent_encoding::PercentEncode<percent_encoding::USERINFO_ENCODE_SET>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.encode_set`: 0 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Rev<std::str::Chars>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<&mut parser::Input>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::net::SocketAddrV4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::option::Item<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 16 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ops::Fn(&'static str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ops::Fn(&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&str, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<std::net::Ipv4Addr>, parser::ParseError>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 11 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:580:27: 580:65 self:&&Url]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:620:37: 620:49 f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:1202:37: 1202:48], self:&&Url]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:683:33: 686:10 self:&&Url]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:707:25: 707:82 input:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:714:40: 719:10 self:&mut &mut Url]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:315:69: 315:96 input:&parser::Input]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:335:57: 338:18 input:&parser::Input]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:467:55: 467:82 first_char:&std::option::Option<char>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:470:55: 470:81 next_char:&std::option::Option<char>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:616:61: 619:22 input:&parser::Input]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/percent_encoding.rs:273:31: 279:10 self:&mut &mut percent_encoding::PercentDecode]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/quirks.rs:110:51: 110:74 scheme:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/quirks.rs:158:59: 158:82 scheme:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u32>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<parser::Input, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:336:46: 336:74]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<parser::Input, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:617:50: 617:78]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6057) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[32]::next[0]::{{closure}}[0] } 0:&mut &mut std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:102:49: 102:63]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6057) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[32]::next[0]::{{closure}}[0] } 0:&mut &mut std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:96:51: 96:65]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6070) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[33]::next_back[0]::{{closure}}[0] } 0:&mut &mut std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:102:49: 102:63]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6070) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[33]::next_back[0]::{{closure}}[0] } 0:&mut &mut std::slice::Split<u8, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:96:51: 96:65]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const &str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const idna::uts46::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `origin::OpaqueOrigin`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::Filter<&mut std::str::Chars, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:212:36: 212:73]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&Url>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::net::Ipv4Addr>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<idna::uts46::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<u32, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, parser::ParseError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::option::Option<std::option::Option<u16>>`: 6 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::ops::RangeFrom<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size type: `std::ops::RangeTo<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<u16, ()>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u16, std::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::ops::Range<slicing::Position>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), parser::ParseError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `idna::uts46::Error`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PunycodeError`: 0 bytes
print-type-size     variant `ValidityCriteria`: 0 bytes
print-type-size     variant `DissallowedByStd3AsciiRules`: 0 bytes
print-type-size     variant `DissallowedMappedInStd3`: 0 bytes
print-type-size     variant `DissallowedCharacter`: 0 bytes
print-type-size     variant `TooLongForDns`: 0 bytes
print-type-size type: `parser::Context`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `UrlParser`: 0 bytes
print-type-size     variant `Setter`: 0 bytes
print-type-size     variant `PathSegmentSetter`: 0 bytes
print-type-size type: `parser::ParseError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `EmptyHost`: 0 bytes
print-type-size     variant `IdnaError`: 0 bytes
print-type-size     variant `InvalidPort`: 0 bytes
print-type-size     variant `InvalidIpv4Address`: 0 bytes
print-type-size     variant `InvalidIpv6Address`: 0 bytes
print-type-size     variant `InvalidDomainCharacter`: 0 bytes
print-type-size     variant `RelativeUrlWithoutBase`: 0 bytes
print-type-size     variant `RelativeUrlWithCannotBeABaseBase`: 0 bytes
print-type-size     variant `SetHostOnCannotBeABaseUrl`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size type: `parser::SchemeType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `File`: 0 bytes
print-type-size     variant `SpecialNotFile`: 0 bytes
print-type-size     variant `NotSpecial`: 0 bytes
print-type-size type: `slicing::Position`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BeforeScheme`: 0 bytes
print-type-size     variant `AfterScheme`: 0 bytes
print-type-size     variant `BeforeUsername`: 0 bytes
print-type-size     variant `AfterUsername`: 0 bytes
print-type-size     variant `BeforePassword`: 0 bytes
print-type-size     variant `AfterPassword`: 0 bytes
print-type-size     variant `BeforeHost`: 0 bytes
print-type-size     variant `AfterHost`: 0 bytes
print-type-size     variant `BeforePort`: 0 bytes
print-type-size     variant `AfterPort`: 0 bytes
print-type-size     variant `BeforePath`: 0 bytes
print-type-size     variant `AfterPath`: 0 bytes
print-type-size     variant `BeforeQuery`: 0 bytes
print-type-size     variant `AfterQuery`: 0 bytes
print-type-size     variant `BeforeFragment`: 0 bytes
print-type-size     variant `AfterFragment`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::RangeFrom<slicing::Position>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size type: `std::ops::RangeTo<slicing::Position>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::path::State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Prefix`: 0 bytes
print-type-size     variant `StartDir`: 0 bytes
print-type-size     variant `Body`: 0 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::result::Result<(), ()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:102:49: 102:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:123:33: 123:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:154:31: 154:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:186:49: 186:83]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/form_urlencoded.rs:96:51: 96:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/host.rs:286:27: 286:39]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/host.rs:94:24: 96:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:1202:37: 1202:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:298:22: 298:90]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:617:37: 617:69]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/lib.rs:621:37: 621:76]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:122:34: 122:69]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:212:36: 212:73]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:316:60: 318:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:324:71: 324:98]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:336:46: 336:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:614:71: 614:98]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/parser.rs:617:50: 617:78]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/percent_encoding.rs:259:34: 259:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/percent_encoding.rs:260:34: 260:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/percent_encoding.rs:301:31: 301:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/quirks.rs:111:31: 111:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7461) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::find[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7468) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::rfind[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `encoding::EncodingOverride`: 0 bytes, alignment: 1 bytes
print-type-size type: `percent_encoding::DEFAULT_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `percent_encoding::PATH_SEGMENT_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `percent_encoding::QUERY_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `percent_encoding::SIMPLE_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `percent_encoding::USERINFO_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<idna::uts46::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::str::pattern::CharEqPattern<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/url-1.2.3/src/host.rs:94:24: 96:10]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::str::pattern::CharEqPattern<fn(char) -> bool {parser::ascii_alpha}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::str::pattern::CharEqPattern<fn(char) -> bool {parser::c0_control_or_space}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::InternalNode<std::string::String, json::Json>`: 728 bytes, alignment: 8 bytes
print-type-size     field `.data`: 632 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<std::string::String, json::Json>`: 632 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 352 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::num::bignum::Big32x40`: 168 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.base`: 160 bytes
print-type-size type: `json::Builder<std::str::Chars>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.parser`: 96 bytes
print-type-size     field `.token`: 40 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, json::Json, collections::btree::node::marker::Internal>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 96 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 32 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, json::Json, collections::btree::node::marker::Leaf>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 96 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 32 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `json::Parser<std::str::Chars>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.rdr`: 16 bytes
print-type-size     field `.ch`: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.col`: 8 bytes
print-type-size     field `.stack`: 48 bytes
print-type-size     field `.state`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::collections::btree_map::Entry<std::string::String, json::Json>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, json::Json>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<std::string::String, json::Json>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::btree_map::Range<std::string::String, json::Json>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<std::string::String, json::Json>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<(), json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<bool, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<char, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<f32, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<f64, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<i16, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 62 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<i32, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<i64, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<i8, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<json::Json, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<std::string::String, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<u16, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 62 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u32, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<u8, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, json::DecoderError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `json::DecoderError`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ParseError`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `ExpectedError`: 48 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `MissingFieldError`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `UnknownVariantError`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `ApplicationError`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `EOF`: 0 bytes
print-type-size type: `std::option::Option<(std::string::String, json::Json)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::num::dec2flt::parse::ParseResult`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Valid`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `ShortcutToInf`: 0 bytes
print-type-size     variant `ShortcutToZero`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `json::Stack`: 48 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size     field `.str_buffer`: 24 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::num::dec2flt::parse::Decimal`: 40 bytes, alignment: 8 bytes
print-type-size     field `.integral`: 16 bytes
print-type-size     field `.fractional`: 16 bytes
print-type-size     field `.exp`: 8 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<std::string::String, json::Json>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::iter::Chain<std::slice::Iter<u8>, std::slice::Iter<u8>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<json::Json>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<json::JsonEvent>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, &mut collections::btree::node::Root<std::string::String, json::Json>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<json::Json, json::ParserError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `json::Encoder`: 32 bytes, alignment: 8 bytes
print-type-size     field `.writer`: 16 bytes
print-type-size     field `.format`: 12 bytes
print-type-size     field `.is_emitting_map_key`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `json::Json`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Boolean`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Array`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Object`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size type: `json::JsonEvent`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ObjectStart`: 0 bytes
print-type-size     variant `ObjectEnd`: 0 bytes
print-type-size     variant `ArrayStart`: 0 bytes
print-type-size     variant `ArrayEnd`: 0 bytes
print-type-size     variant `BooleanValue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I64Value`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U64Value`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64Value`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `StringValue`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NullValue`: 0 bytes
print-type-size     variant `Error`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<&mut [u8]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.predicate`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::TakeWhile<std::slice::Iter<u8>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.predicate`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<json::StackElement>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<f64, json::ParserError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, json::ParserError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, base64::FromBase64Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, hex::FromHexError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u16, json::ParserError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 30 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, json::ParserError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<json::Json>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `base64::Config`: 24 bytes, alignment: 8 bytes
print-type-size     field `.char_set`: 1 bytes
print-type-size     field `.newline`: 1 bytes
print-type-size     field `.pad`: 1 bytes
print-type-size     padding: 5 bytes
print-type-size     field `.line_length`: 16 bytes, alignment: 8 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, json::Json, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `json::Decoder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size type: `json::ParserError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SyntaxError`: 23 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size         field `.2`: 8 bytes
print-type-size     variant `IoError`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `json::StackElement`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Index`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Key`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, json::Json>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<json::Json>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Bytes>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::BTreeMap<std::string::String, json::Json>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<json::Json>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<json::InternalStackElement>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<json::Json>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<json::InternalStackElement>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<json::Json>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `base64::FromBase64Error`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidBase64Byte`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `InvalidBase64Length`: 0 bytes
print-type-size type: `collections::btree::node::Root<std::string::String, json::Json>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::num::dec2flt::rawfp::Unpacked`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sig`: 8 bytes
print-type-size     field `.k`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::num::diy_float::Fp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.e`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<collections::btree::node::BoxedNode<std::string::String, json::Json>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<json::InternalStackElement>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<json::Json>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<json::StackElement>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `hex::FromHexError`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `InvalidHexCharacter`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `InvalidHexLength`: 0 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<json::Json>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/base64.rs:124:61: 124:74]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &json::Json)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &json::Json)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<f64, std::num::ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<i64, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<isize, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u64, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<json::Json>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `json::EncodingFormat`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compact`: 0 bytes
print-type-size     variant `Pretty`: 8 bytes
print-type-size         field `.curr_indent`: 4 bytes
print-type-size         field `.indent`: 4 bytes
print-type-size type: `std::option::Option<json::InternalStackElement>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/base64.rs:128:23: 128:48 bytes:&&[u8]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/base64.rs:129:29: 129:63 s_out:&mut std::slice::IterMut<u8>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/collection_impls.rs:71:32: 79:10 self:&&std::collections::BTreeMap<std::string::String, json::Json>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/collection_impls.rs:74:44: 74:61 key:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/collection_impls.rs:75:44: 75:61 val:&&json::Json]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/json.rs:1931:30: 1931:61 self:&mut &mut json::Parser<std::str::Chars>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/serialize.rs:1173:32: 1178:10 self:&&std::vec::Vec<json::Json>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/serialize.rs:1175:40: 1175:55 e:&&json::Json]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<json::Json>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<std::string::String>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::str::Bytes>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::slice::Iter<u8>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<std::string::String, json::Json>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<std::string::String, json::Json>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const json::InternalStackElement>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const json::Json>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `json::FormatShim`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `json::InternalStackElement`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `InternalIndex`: 6 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `InternalKey`: 4 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size type: `json::PrettyJson`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<json::FormatShim>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<&mut [u8]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&json::InternalStackElement>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&json::Json>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::collections::BTreeMap<std::string::String, json::Json>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<json::Json>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::collections::BTreeMap<std::string::String, json::Json>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<json::Json>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<json::Json>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<std::string::String, json::Json>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<json::InternalStackElement>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<json::Json>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<i32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::result::Result<i16, std::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u16, std::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `json::ParserState`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ParseArray`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ParseArrayComma`: 0 bytes
print-type-size     variant `ParseObject`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ParseObjectComma`: 0 bytes
print-type-size     variant `ParseStart`: 0 bytes
print-type-size     variant `ParseBeforeFinish`: 0 bytes
print-type-size     variant `ParseFinished`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), json::EncoderError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<i8, std::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u8, std::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `base64::CharacterSet`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Standard`: 0 bytes
print-type-size     variant `UrlSafe`: 0 bytes
print-type-size type: `base64::Newline`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `LF`: 0 bytes
print-type-size     variant `CRLF`: 0 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `core::num::dec2flt::FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `core::num::dec2flt::parse::Sign`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Positive`: 0 bytes
print-type-size     variant `Negative`: 0 bytes
print-type-size type: `json::EncoderError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `FmtError`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `BadHashmapKey`: 0 bytes
print-type-size type: `json::ErrorCode`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidSyntax`: 0 bytes
print-type-size     variant `InvalidNumber`: 0 bytes
print-type-size     variant `EOFWhileParsingObject`: 0 bytes
print-type-size     variant `EOFWhileParsingArray`: 0 bytes
print-type-size     variant `EOFWhileParsingValue`: 0 bytes
print-type-size     variant `EOFWhileParsingString`: 0 bytes
print-type-size     variant `KeyMustBeAString`: 0 bytes
print-type-size     variant `ExpectedColon`: 0 bytes
print-type-size     variant `TrailingCharacters`: 0 bytes
print-type-size     variant `TrailingComma`: 0 bytes
print-type-size     variant `InvalidEscape`: 0 bytes
print-type-size     variant `InvalidUnicodeCodePoint`: 0 bytes
print-type-size     variant `LoneLeadingSurrogateInHexEscape`: 0 bytes
print-type-size     variant `UnexpectedEndOfHexEscape`: 0 bytes
print-type-size     variant `UnrecognizedHex`: 0 bytes
print-type-size     variant `NotFourDigit`: 0 bytes
print-type-size     variant `ControlCharacterInString`: 0 bytes
print-type-size     variant `NotUtf8`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::iter::ChainState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `std::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `std::num::ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), ()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/base64.rs:124:61: 124:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.21/src/json.rs:2134:29: 2134:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3645) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::count[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4287) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[5]::fold[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(2), node: DefIndex(3645) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::count[0]::{{closure}}[0] }]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1723) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::unwrap_unchecked[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1786) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1793) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Immut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Mut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&json::Json>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (std::string::String, json::Json)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<std::string::String, json::Json>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<json::InternalStackElement>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<json::Json>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::arc::ArcInner<exec::ExecReadOnly>`: 1392 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 1376 bytes
print-type-size type: `exec::ExecReadOnly`: 1376 bytes, alignment: 8 bytes
print-type-size     field `.res`: 24 bytes
print-type-size     field `.nfa`: 368 bytes
print-type-size     field `.dfa`: 368 bytes
print-type-size     field `.dfa_reverse`: 368 bytes
print-type-size     field `.suffixes`: 240 bytes
print-type-size     field `.match_type`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::cell::RefCell<exec::ProgramCacheInner>`: 800 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 792 bytes
print-type-size type: `exec::ProgramCacheInner`: 792 bytes, alignment: 8 bytes
print-type-size     field `.pikevm`: 200 bytes
print-type-size     field `.backtrack`: 48 bytes
print-type-size     field `.dfa`: 272 bytes
print-type-size     field `.dfa_reverse`: 272 bytes
print-type-size type: `std::cell::UnsafeCell<exec::ProgramCacheInner>`: 792 bytes, alignment: 8 bytes
print-type-size     field `.value`: 792 bytes
print-type-size type: `compile::Compiler`: 760 bytes, alignment: 8 bytes
print-type-size     field `.insts`: 24 bytes
print-type-size     field `.compiled`: 368 bytes
print-type-size     field `.capture_name_idx`: 40 bytes
print-type-size     field `.num_exprs`: 8 bytes
print-type-size     field `.size_limit`: 8 bytes
print-type-size     field `.suffix_cache`: 32 bytes
print-type-size     field `.utf8_seqs`: 24 bytes
print-type-size     field `.byte_classes`: 256 bytes
print-type-size type: `std::result::Result<prog::Program, error::Error>`: 376 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 368 bytes
print-type-size         field `.0`: 368 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `prog::Program`: 368 bytes, alignment: 8 bytes
print-type-size     field `.insts`: 24 bytes
print-type-size     field `.matches`: 24 bytes
print-type-size     field `.captures`: 24 bytes
print-type-size     field `.capture_name_idx`: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.byte_classes`: 24 bytes
print-type-size     field `.only_utf8`: 1 bytes
print-type-size     field `.is_bytes`: 1 bytes
print-type-size     field `.is_dfa`: 1 bytes
print-type-size     field `.is_reverse`: 1 bytes
print-type-size     field `.is_anchored_start`: 1 bytes
print-type-size     field `.is_anchored_end`: 1 bytes
print-type-size     field `.has_unicode_word_boundary`: 1 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.prefixes`: 240 bytes, alignment: 8 bytes
print-type-size     field `.dfa_size_limit`: 8 bytes
print-type-size type: `dfa::Cache`: 272 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 160 bytes
print-type-size     field `.qcur`: 56 bytes
print-type-size     field `.qnext`: 56 bytes
print-type-size type: `compile::ByteClassSet`: 256 bytes, alignment: 1 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `literals::LiteralSearcher`: 240 bytes, alignment: 8 bytes
print-type-size     field `.complete`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.lcp`: 64 bytes, alignment: 8 bytes
print-type-size     field `.lcs`: 64 bytes
print-type-size     field `.matcher`: 104 bytes
print-type-size type: `pikevm::Cache`: 200 bytes, alignment: 8 bytes
print-type-size     field `.clist`: 88 bytes
print-type-size     field `.nlist`: 88 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size type: `dfa::CacheInner`: 160 bytes, alignment: 8 bytes
print-type-size     field `.compiled`: 40 bytes
print-type-size     field `.trans`: 32 bytes
print-type-size     field `.states`: 24 bytes
print-type-size     field `.start_states`: 24 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size     field `.flush_count`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::result::Result<exec::Parsed, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `exec::Parsed`: 112 bytes, alignment: 8 bytes
print-type-size     field `.exprs`: 24 bytes
print-type-size     field `.prefixes`: 40 bytes
print-type-size     field `.suffixes`: 40 bytes
print-type-size     field `.bytes`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `std::result::Result<bool, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 111 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<compile::Patch, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `std::result::Result<exec::Exec, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `std::result::Result<re_bytes::Regex, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `std::result::Result<re_unicode::Regex, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `error::Error`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Syntax`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `CompiledTooBig`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `InvalidSet`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `literals::Matcher`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Bytes`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Single`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `AC`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Teddy128`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `re_unicode::RegexSplitsN`: 104 bytes, alignment: 8 bytes
print-type-size     field `.splits`: 96 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::result::Result<syntax::Expr, syntax::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `aho_corasick::FullAcAutomaton<syntax::Lit>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.pats`: 24 bytes
print-type-size     field `.trans`: 24 bytes
print-type-size     field `.out`: 24 bytes
print-type-size     field `.start_bytes`: 24 bytes
print-type-size type: `re_unicode::RegexSplits`: 96 bytes, alignment: 8 bytes
print-type-size     field `.finder`: 88 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::iter::Enumerate<re_unicode::FindCaptures>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<re_unicode::FindMatches>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, usize>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `syntax::Error`: 96 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.surround`: 24 bytes
print-type-size     field `.kind`: 64 bytes
print-type-size type: `pikevm::Threads`: 88 bytes, alignment: 8 bytes
print-type-size     field `.set`: 56 bytes
print-type-size     field `.caps`: 24 bytes
print-type-size     field `.slots_per_thread`: 8 bytes
print-type-size type: `re_unicode::FindCaptures`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 88 bytes
print-type-size type: `re_unicode::FindCapturesInner`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Dynamic`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Plugin`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `re_unicode::FindMatches`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 88 bytes
print-type-size type: `re_unicode::FindMatchesInner`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Dynamic`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Plugin`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, usize>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<dfa::State, u32>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `re_trait::FindCaptures<re_plugin::Plugin>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `re_trait::FindMatches<re_plugin::Plugin>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.re`: 40 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.last_end`: 8 bytes
print-type-size     field `.last_match`: 16 bytes
print-type-size type: `std::collections::hash_map::Entry<dfa::State, u32>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Vacant`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, usize>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<&usize, &std::string::String>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<usize, &str>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `aho_corasick::AcAutomaton<syntax::Lit>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.pats`: 24 bytes
print-type-size     field `.states`: 24 bytes
print-type-size     field `.start_bytes`: 24 bytes
print-type-size type: `aho_corasick::State<aho_corasick::Dense>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.out`: 24 bytes
print-type-size     field `.fail`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.goto`: 32 bytes, alignment: 8 bytes
print-type-size     field `.depth`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `backtrack::Bounded<input::ByteInput>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.prog`: 8 bytes
print-type-size     field `.input`: 24 bytes
print-type-size     field `.matches`: 16 bytes
print-type-size     field `.slots`: 16 bytes
print-type-size     field `.m`: 8 bytes
print-type-size type: `re_bytes::SplitsN`: 72 bytes, alignment: 8 bytes
print-type-size     field `.splits`: 64 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::Entry<&usize, &std::string::String>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<usize, &str>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<dfa::State, u32>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<(usize, re_unicode::Captures)>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `backtrack::Bounded<input::CharInput>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.prog`: 8 bytes
print-type-size     field `.input`: 16 bytes
print-type-size     field `.matches`: 16 bytes
print-type-size     field `.slots`: 16 bytes
print-type-size     field `.m`: 8 bytes
print-type-size type: `literals::SingleSearch`: 64 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 24 bytes
print-type-size     field `.char_len`: 8 bytes
print-type-size     field `.rare1`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.rare1i`: 8 bytes, alignment: 8 bytes
print-type-size     field `.rare2`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.rare2i`: 8 bytes, alignment: 8 bytes
print-type-size type: `re_bytes::Splits`: 64 bytes, alignment: 8 bytes
print-type-size     field `.finder`: 56 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `re_unicode::Captures`: 64 bytes, alignment: 8 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.slots`: 24 bytes
print-type-size     field `.named_groups`: 24 bytes
print-type-size type: `re_unicode::Regex`: 64 bytes, alignment: 8 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `re_unicode::_Regex`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Dynamic`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Plugin`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<&usize, &std::string::String, &std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<dfa::State, u32, &std::collections::hash::table::RawTable<dfa::State, u32>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, usize, &std::collections::hash::table::RawTable<std::string::String, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<usize, &str, &std::collections::hash::table::RawTable<usize, &str>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<&usize, &std::string::String, std::collections::hash::table::FullBucket<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<dfa::State, u32, std::collections::hash::table::FullBucket<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, usize, std::collections::hash::table::FullBucket<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<usize, &str, std::collections::hash::table::FullBucket<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<&usize, &std::string::String>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<usize, &str>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::option::Option<re_unicode::Captures>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `syntax::ErrorKind`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `DoubleFlagNegation`: 0 bytes
print-type-size     variant `DuplicateCaptureName`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `EmptyAlternate`: 0 bytes
print-type-size     variant `EmptyCaptureName`: 0 bytes
print-type-size     variant `EmptyFlagNegation`: 0 bytes
print-type-size     variant `EmptyGroup`: 0 bytes
print-type-size     variant `InvalidBase10`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidBase16`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidCaptureName`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidClassRange`: 8 bytes
print-type-size         field `.start`: 4 bytes
print-type-size         field `.end`: 4 bytes
print-type-size     variant `InvalidClassEscape`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `InvalidRepeatRange`: 8 bytes
print-type-size         field `.min`: 4 bytes
print-type-size         field `.max`: 4 bytes
print-type-size     variant `InvalidScalarValue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MissingBase10`: 0 bytes
print-type-size     variant `RepeaterExpectsExpr`: 0 bytes
print-type-size     variant `RepeaterUnexpectedExpr`: 60 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `UnclosedCaptureName`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnclosedHex`: 0 bytes
print-type-size     variant `UnclosedParen`: 0 bytes
print-type-size     variant `UnclosedRepeat`: 0 bytes
print-type-size     variant `UnclosedUnicodeName`: 0 bytes
print-type-size     variant `UnexpectedClassEof`: 0 bytes
print-type-size     variant `UnexpectedEscapeEof`: 0 bytes
print-type-size     variant `UnexpectedFlagEof`: 0 bytes
print-type-size     variant `UnexpectedTwoDigitHexEof`: 0 bytes
print-type-size     variant `UnopenedParen`: 0 bytes
print-type-size     variant `UnrecognizedEscape`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnrecognizedFlag`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnrecognizedUnicodeClass`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `StackExhausted`: 0 bytes
print-type-size     variant `FlagNotAllowed`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnicodeNotAllowed`: 0 bytes
print-type-size     variant `InvalidUtf8`: 0 bytes
print-type-size     variant `EmptyClass`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::collections::HashMap<std::string::String, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 40 bytes
print-type-size type: `exec::Exec`: 56 bytes, alignment: 8 bytes
print-type-size     field `.ro`: 8 bytes
print-type-size     field `.cache`: 48 bytes
print-type-size type: `exec::ExecBuilder`: 56 bytes, alignment: 8 bytes
print-type-size     field `.options`: 48 bytes
print-type-size     field `.match_type`: 3 bytes
print-type-size     field `.bytes`: 1 bytes
print-type-size     field `.only_utf8`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `literals::SingleByteSet`: 56 bytes, alignment: 8 bytes
print-type-size     field `.sparse`: 24 bytes
print-type-size     field `.dense`: 24 bytes
print-type-size     field `.complete`: 1 bytes
print-type-size     field `.all_ascii`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `re_bytes::FindCaptures`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `re_bytes::FindMatches`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `re_bytes::Regex`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `re_set::bytes::RegexSet`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `re_set::unicode::RegexSet`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `re_trait::FindCaptures<exec::ExecNoSync>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `re_trait::FindCaptures<exec::ExecNoSyncStr>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `re_trait::FindMatches<exec::ExecNoSync>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.re`: 16 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.last_end`: 8 bytes
print-type-size     field `.last_match`: 16 bytes
print-type-size type: `re_trait::FindMatches<exec::ExecNoSyncStr>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.re`: 16 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.last_end`: 8 bytes
print-type-size     field `.last_match`: 16 bytes
print-type-size type: `sparse::SparseSet`: 56 bytes, alignment: 8 bytes
print-type-size     field `.dense`: 24 bytes
print-type-size     field `.sparse`: 24 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<&usize, &std::string::String, std::collections::hash::table::FullBucket<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<dfa::State, u32, std::collections::hash::table::FullBucket<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, usize, std::collections::hash::table::FullBucket<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<usize, &str, std::collections::hash::table::FullBucket<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<&usize, &std::string::String, std::collections::hash::table::FullBucket<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<dfa::State, u32, std::collections::hash::table::FullBucket<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, usize, std::collections::hash::table::FullBucket<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<usize, &str, std::collections::hash::table::FullBucket<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<&usize, &std::string::String, std::collections::hash::table::FullBucket<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<dfa::State, u32, std::collections::hash::table::FullBucket<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, usize, std::collections::hash::table::FullBucket<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<usize, &str, std::collections::hash::table::FullBucket<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, usize>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::option::Option<compile::MaybeInst>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `syntax::Expr`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Literal`: 25 bytes
print-type-size         field `.chars`: 24 bytes
print-type-size         field `.casei`: 1 bytes
print-type-size     variant `LiteralBytes`: 25 bytes
print-type-size         field `.bytes`: 24 bytes
print-type-size         field `.casei`: 1 bytes
print-type-size     variant `AnyChar`: 0 bytes
print-type-size     variant `AnyCharNoNL`: 0 bytes
print-type-size     variant `AnyByte`: 0 bytes
print-type-size     variant `AnyByteNoNL`: 0 bytes
print-type-size     variant `Class`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `ClassBytes`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StartLine`: 0 bytes
print-type-size     variant `EndLine`: 0 bytes
print-type-size     variant `StartText`: 0 bytes
print-type-size     variant `EndText`: 0 bytes
print-type-size     variant `WordBoundary`: 0 bytes
print-type-size     variant `NotWordBoundary`: 0 bytes
print-type-size     variant `WordBoundaryAscii`: 0 bytes
print-type-size     variant `NotWordBoundaryAscii`: 0 bytes
print-type-size     variant `Group`: 48 bytes
print-type-size         field `.e`: 8 bytes
print-type-size         field `.i`: 16 bytes
print-type-size         field `.name`: 24 bytes
print-type-size     variant `Repeat`: 25 bytes
print-type-size         field `.e`: 8 bytes
print-type-size         field `.r`: 16 bytes
print-type-size         field `.greedy`: 1 bytes
print-type-size     variant `Concat`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Alternate`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `backtrack::Cache`: 48 bytes, alignment: 8 bytes
print-type-size     field `.jobs`: 24 bytes
print-type-size     field `.visited`: 24 bytes
print-type-size type: `compile::MaybeInst`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiled`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Uncompiled`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 0 bytes
print-type-size     variant `Split1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Split2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `dfa::Fsm`: 48 bytes, alignment: 8 bytes
print-type-size     field `.prog`: 8 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.at`: 8 bytes, alignment: 8 bytes
print-type-size     field `.quit_after_match`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.last_match_si`: 4 bytes, alignment: 4 bytes
print-type-size     field `.last_cache_flush`: 8 bytes
print-type-size     field `.cache`: 8 bytes
print-type-size type: `re_builder::RegexOptions`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pats`: 24 bytes
print-type-size     field `.size_limit`: 8 bytes
print-type-size     field `.dfa_size_limit`: 8 bytes
print-type-size     field `.case_insensitive`: 1 bytes
print-type-size     field `.multi_line`: 1 bytes
print-type-size     field `.dot_matches_new_line`: 1 bytes
print-type-size     field `.swap_greed`: 1 bytes
print-type-size     field `.ignore_whitespace`: 1 bytes
print-type-size     field `.unicode`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `re_builder::bytes::RegexBuilder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `re_builder::unicode::RegexBuilder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `re_bytes::Captures`: 48 bytes, alignment: 8 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.slots`: 24 bytes
print-type-size     field `.named_groups`: 8 bytes
print-type-size type: `re_unicode::SubCapturesNamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.caps`: 8 bytes
print-type-size     field `.names`: 40 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<&usize, &std::string::String, &std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<dfa::State, u32, &std::collections::hash::table::RawTable<dfa::State, u32>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, usize, &std::collections::hash::table::RawTable<std::string::String, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<usize, &str, &std::collections::hash::table::RawTable<usize, &str>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<dfa::State, u32>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<usize, &str>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<std::option::Option<usize>>, std::slice::Iter<std::option::Option<usize>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<backtrack::Job>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<prog::Inst>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<re_bytes::Captures>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `thread_local::CachedThreadLocal<std::cell::RefCell<exec::ProgramCacheInner>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.owner`: 8 bytes
print-type-size     field `.local`: 8 bytes
print-type-size     field `.global`: 32 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:256:56: 260:10 text:&&[u8], slots:std::vec::Vec<std::option::Option<usize>>, self:&&re_bytes::Regex]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:350:56: 354:10 text:&&str, slots:std::vec::Vec<std::option::Option<usize>>, self:&&re_unicode::Regex]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `aho_corasick::Matches<syntax::Lit, aho_corasick::FullAcAutomaton<syntax::Lit>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.aut`: 8 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.texti`: 8 bytes
print-type-size     field `.si`: 4 bytes
print-type-size     field `._m`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `backtrack::Job`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Inst`: 32 bytes
print-type-size         field `.ip`: 8 bytes
print-type-size         field `.at`: 24 bytes
print-type-size     variant `SaveRestore`: 24 bytes
print-type-size         field `.slot`: 8 bytes
print-type-size         field `.old_pos`: 16 bytes
print-type-size type: `compile::Patch`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hole`: 32 bytes
print-type-size     field `.entry`: 8 bytes
print-type-size type: `expand::CaptureRef`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rest`: 16 bytes
print-type-size     field `.cap`: 24 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `pikevm::Fsm<input::ByteInput>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.prog`: 8 bytes
print-type-size     field `.stack`: 8 bytes
print-type-size     field `.input`: 24 bytes
print-type-size type: `prog::Inst`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Save`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Split`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `EmptyLook`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ranges`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Bytes`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `re_bytes::SubCapturesNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.caps`: 8 bytes
print-type-size     field `.names`: 32 bytes
print-type-size type: `re_plugin::Plugin`: 40 bytes, alignment: 8 bytes
print-type-size     field `.original`: 16 bytes
print-type-size     field `.names`: 8 bytes
print-type-size     field `.groups`: 8 bytes
print-type-size     field `.prog`: 8 bytes
print-type-size type: `re_set::bytes::SetMatchesIntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `re_set::unicode::SetMatchesIntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `re_unicode::NamedGroupsIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Plugin`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Dynamic`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<&usize, &std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<dfa::State, u32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::string::String, usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<usize, &str>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<&usize, &std::string::String, &std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<dfa::State, u32, &std::collections::hash::table::RawTable<dfa::State, u32>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, usize, &std::collections::hash::table::RawTable<std::string::String, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<usize, &str, &std::collections::hash::table::RawTable<usize, &str>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<&usize, &std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::iter::Enumerate<std::vec::IntoIter<bool>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<re_unicode::NamedGroupsIter, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1015:44: 1015:59]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Skip<std::iter::Cycle<std::slice::Iter<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(usize, std::option::Option<(usize, usize)>)>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<compile::Hole>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<expand::CaptureRef>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<pikevm::FollowEpsilon>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::borrow::Cow<[u8]>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::borrow::Cow<str>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<syntax::Literals>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `syntax::Literals`: 40 bytes, alignment: 8 bytes
print-type-size     field `.lits`: 24 bytes
print-type-size     field `.limit_size`: 8 bytes
print-type-size     field `.limit_class`: 8 bytes
print-type-size type: `aho_corasick::Dense`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `aho_corasick::DenseChoice`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Sparse`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Dense`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `compile::Hole`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `One`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Many`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `compile::InstHole`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Save`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.slot`: 8 bytes, alignment: 8 bytes
print-type-size     variant `EmptyLook`: 1 bytes
print-type-size         field `.look`: 1 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.c`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ranges`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.ranges`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 2 bytes
print-type-size         field `.start`: 1 bytes
print-type-size         field `.end`: 1 bytes
print-type-size type: `compile::SuffixCache`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.version`: 8 bytes
print-type-size type: `compile::SuffixCacheEntry`: 32 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.pc`: 8 bytes
print-type-size     field `.version`: 8 bytes
print-type-size type: `dfa::Transitions`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.num_byte_classes`: 8 bytes
print-type-size type: `pikevm::FollowEpsilon`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `IP`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Capture`: 24 bytes
print-type-size         field `.slot`: 8 bytes
print-type-size         field `.pos`: 16 bytes
print-type-size type: `pikevm::Fsm<input::CharInput>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.prog`: 8 bytes
print-type-size     field `.stack`: 8 bytes
print-type-size     field `.input`: 16 bytes
print-type-size type: `prog::InstRanges`: 32 bytes, alignment: 8 bytes
print-type-size     field `.goto`: 8 bytes
print-type-size     field `.ranges`: 24 bytes
print-type-size type: `re_set::bytes::SetMatches`: 32 bytes, alignment: 8 bytes
print-type-size     field `.matched_any`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.matches`: 24 bytes, alignment: 8 bytes
print-type-size type: `re_set::unicode::SetMatches`: 32 bytes, alignment: 8 bytes
print-type-size     field `.matched_any`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.matches`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::borrow::Cow<[u8]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::VecDeque<u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size type: `std::collections::hash::table::Bucket<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<&usize, &std::string::String, &std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<dfa::State, u32, &std::collections::hash::table::RawTable<dfa::State, u32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, usize, &std::collections::hash::table::RawTable<std::string::String, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<usize, &str, &std::collections::hash::table::RawTable<usize, &str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Drain<dfa::State, u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<&usize, &std::string::String, &std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<dfa::State, u32, &std::collections::hash::table::RawTable<dfa::State, u32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, usize, &std::collections::hash::table::RawTable<std::string::String, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<usize, &str, &std::collections::hash::table::RawTable<usize, &str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<&usize, &std::string::String, &mut std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<&usize, &std::string::String, &std::collections::hash::table::RawTable<&usize, &std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<dfa::State, u32, &mut std::collections::hash::table::RawTable<dfa::State, u32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<dfa::State, u32, &std::collections::hash::table::RawTable<dfa::State, u32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, usize, &mut std::collections::hash::table::RawTable<std::string::String, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, usize, &std::collections::hash::table::RawTable<std::string::String, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<usize, &str, &mut std::collections::hash::table::RawTable<usize, &str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<usize, &str, &std::collections::hash::table::RawTable<usize, &str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<dfa::State, u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::string::String, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<&usize, &std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<dfa::State, u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<usize, &str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash_map::Drain<dfa::State, u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<dfa::State, u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::string::String, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::iter::Cycle<std::slice::Iter<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.orig`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Enumerate<re_bytes::SubCapturesPos>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<re_unicode::SubCapturesPos>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::collections::hash_map::Iter<std::string::String, usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:815:44: 815:59]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<compile::MaybeInst>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/compile.rs:203:40: 203:60]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Skip<std::iter::Enumerate<std::slice::Iter<aho_corasick::State<aho_corasick::Dense>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(&str, std::option::Option<&[u8]>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(&str, std::option::Option<&str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(std::collections::hash::table::SafeHash, dfa::State, u32)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(std::string::String, usize)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(usize, (usize, usize))>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<aho_corasick::Match>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<dfa::Result<(usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<input::InputAt>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<simd_accel::teddy128::Match>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<&usize, &std::string::String, &std::collections::hash::table::RawTable<&usize, &std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<dfa::State, u32, &std::collections::hash::table::RawTable<dfa::State, u32>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, usize, &std::collections::hash::table::RawTable<std::string::String, usize>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<usize, &str, &std::collections::hash::table::RawTable<usize, &str>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::option::Option<(usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<syntax::Lit>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::vec::IntoIter<bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<compile::Hole>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<compile::MaybeInst>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<syntax::Lit>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `syntax::Lit`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 24 bytes
print-type-size     field `.cut`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `thread_local::Table<std::cell::RefCell<exec::ProgramCacheInner>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 16 bytes
print-type-size     field `.hash_bits`: 8 bytes
print-type-size     field `.prev`: 8 bytes
print-type-size type: `thread_local::ThreadLocal<std::cell::RefCell<exec::ProgramCacheInner>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.lock`: 24 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:540:62: 542:18 self:&&exec::ExecNoSync, slots:&mut &mut [std::option::Option<usize>], text:&&[u8]]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `aho_corasick::Match`: 24 bytes, alignment: 8 bytes
print-type-size     field `.pati`: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `compile::CompileClass`: 24 bytes, alignment: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size     field `.ranges`: 16 bytes
print-type-size type: `dfa::InstPtrs`: 24 bytes, alignment: 8 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size type: `dfa::Result<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `NoMatch`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Quit`: 0 bytes
print-type-size type: `expand::Ref`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Number`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `input::ByteInput`: 24 bytes, alignment: 8 bytes
print-type-size     field `.text`: 16 bytes
print-type-size     field `.only_utf8`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `input::InputAt`: 24 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.c`: 4 bytes
print-type-size     field `.byte`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.len`: 8 bytes, alignment: 8 bytes
print-type-size type: `literals::LiteralIter`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Bytes`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Single`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `AC`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Teddy128`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `re_bytes::SubCapturesPos`: 24 bytes, alignment: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.slots`: 16 bytes
print-type-size type: `re_set::bytes::SetMatchesIter`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `re_set::unicode::SetMatchesIter`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `re_unicode::CaptureNames`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `re_unicode::NamedGroups`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Plugin`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Dynamic`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `re_unicode::SubCapturesPos`: 24 bytes, alignment: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.slots`: 16 bytes
print-type-size type: `re_unicode::_CaptureNames`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Plugin`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Dynamic`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `simd_accel::teddy128::Match`: 24 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ascii::EscapeDefault`: 24 bytes, alignment: 8 bytes
print-type-size     field `.range`: 16 bytes
print-type-size     field `.data`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::boxed::<impl std::clone::Clone for Box<[T]>>::clone::BoxBuilder<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<'static, dfa::State, u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<dfa::State, u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::string::String, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<&usize, &std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<dfa::State, u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<usize, &str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<aho_corasick::State<aho_corasick::Dense>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<bool>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<prog::Inst>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<syntax::ClassRange>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<syntax::Expr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<syntax::Lit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Peekable<&mut utf8_ranges::Utf8Sequences>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.peeked`: 11 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::iter::Take<std::slice::Iter<(char, char)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<(&str, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(char, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(dfa::State, u32)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, bool)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, u32)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<dfa::State, u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::string::String, usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::option::Option<&[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::option::Option<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<std::option::Option<usize>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<utf8_ranges::Utf8Sequences>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<usize>, std::sync::PoisonError<std::sync::MutexGuard<usize>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sync::Mutex<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::vec::Vec<(char, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(u8, u32)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<aho_corasick::State<aho_corasick::Dense>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<backtrack::Job>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<compile::Hole>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<compile::MaybeInst>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<compile::SuffixCacheEntry>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<dfa::State>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<pikevm::FollowEpsilon>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<prog::Inst>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syntax::ByteRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syntax::ClassRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syntax::Expr>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syntax::Lit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<utf8_ranges::ScalarRange>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syntax::ByteClass`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ranges`: 24 bytes
print-type-size type: `syntax::CharClass`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ranges`: 24 bytes
print-type-size type: `utf8_ranges::Utf8Sequences`: 24 bytes, alignment: 8 bytes
print-type-size     field `.range_stack`: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:204:46: 204:76 self:&&input::CharInput, at:&input::InputAt]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:320:46: 320:76 self:&&input::ByteInput, at:&input::InputAt]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1156:31: 1160:18 it:&&mut re_trait::FindCaptures<exec::ExecNoSyncStr>, named:std::sync::Arc<std::collections::HashMap<std::string::String, usize>>]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4606) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::nth[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<aho_corasick::State<aho_corasick::Dense>>>, 1:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(char, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(u8, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<aho_corasick::State<aho_corasick::Dense>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<backtrack::Job>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<compile::Hole>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<compile::MaybeInst>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<compile::SuffixCacheEntry>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<dfa::State>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<pikevm::FollowEpsilon>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<prog::Inst>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syntax::ByteRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syntax::ClassRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syntax::Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syntax::Lit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<utf8_ranges::ScalarRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `compile::SuffixCacheKey`: 16 bytes, alignment: 8 bytes
print-type-size     field `.from_inst`: 8 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(char, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(u8, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<aho_corasick::State<aho_corasick::Dense>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<backtrack::Job>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<compile::Hole>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<compile::MaybeInst>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<compile::SuffixCacheEntry>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<dfa::State>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<pikevm::FollowEpsilon>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<prog::Inst>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<syntax::ByteRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<syntax::ClassRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<syntax::Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<syntax::Lit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<utf8_ranges::ScalarRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `dfa::Result<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NoMatch`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Quit`: 0 bytes
print-type-size type: `dfa::State`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size type: `dfa::TransitionsRow`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `exec::ExecNoSync`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ro`: 8 bytes
print-type-size     field `.cache`: 8 bytes
print-type-size type: `exec::ExecNoSyncStr`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `input::CharInput`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `prog::InstBytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.goto`: 8 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `prog::InstChar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.goto`: 8 bytes
print-type-size     field `.c`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `prog::InstEmptyLook`: 16 bytes, alignment: 8 bytes
print-type-size     field `.goto`: 8 bytes
print-type-size     field `.look`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `prog::InstSave`: 16 bytes, alignment: 8 bytes
print-type-size     field `.goto`: 8 bytes
print-type-size     field `.slot`: 8 bytes
print-type-size type: `prog::InstSplit`: 16 bytes, alignment: 8 bytes
print-type-size     field `.goto1`: 8 bytes
print-type-size     field `.goto2`: 8 bytes
print-type-size type: `re_bytes::CaptureNames`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `re_bytes::NoExpand`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `re_bytes::SubCaptures`: 16 bytes, alignment: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.caps`: 8 bytes
print-type-size type: `re_unicode::NoExpand`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `re_unicode::SubCaptures`: 16 bytes, alignment: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.caps`: 8 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Ref<exec::ProgramCacheInner>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<exec::ProgramCacheInner>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<&usize, &std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<dfa::State, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<usize, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<(char, char)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<bool>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<std::vec::Vec<usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<syntax::Lit>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<&str>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:129:41: 129:66]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(char, char)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:213:30: 213:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(char, char)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:403:18: 403:55]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::string::String>, [closure@DefId { krate: CrateNum(3), node: DefIndex(3263) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::concat[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::string::String>, [closure@DefId { krate: CrateNum(3), node: DefIndex(3271) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::join[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::vec::Vec<usize>>, [closure@DefId { krate: CrateNum(12), node: DefIndex(238) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[2] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<syntax::ClassRange>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/compile.rs:383:35: 383:55]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<syntax::Lit>, [closure@DefId { krate: CrateNum(12), node: DefIndex(233) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<u8>, [closure@DefId { krate: CrateNum(3), node: DefIndex(4268) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[31]::extend[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<char>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<syntax::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<utf8_ranges::Utf8Range>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<&syntax::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.n`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&dfa::State, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&mut std::option::Option<usize>, &std::option::Option<usize>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &aho_corasick::State<aho_corasick::Dense>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &bool)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &prog::Inst)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &syntax::ClassRange)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &syntax::Expr)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &syntax::Lit)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<dfa::State>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::cell::Ref<exec::ProgramCacheInner>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<exec::ProgramCacheInner>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'static, (&'static str, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(&str, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(char, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<aho_corasick::State<aho_corasick::Dense>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<backtrack::Job>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<compile::Hole>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<dfa::State>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<pikevm::FollowEpsilon>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<prog::Inst>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<&'static str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::vec::Vec<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<syntax::ByteRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<syntax::ClassRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<syntax::Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<syntax::Lit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<utf8_ranges::Utf8Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sync::MutexGuard<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `syntax::ExprBuilder`: 16 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 7 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.nest_limit`: 8 bytes, alignment: 8 bytes
print-type-size type: `syntax::Repeater`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ZeroOrOne`: 0 bytes
print-type-size     variant `ZeroOrMore`: 0 bytes
print-type-size     variant `OneOrMore`: 0 bytes
print-type-size     variant `Range`: 12 bytes
print-type-size         field `.min`: 4 bytes
print-type-size         field `.max`: 8 bytes
print-type-size type: `thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.owner`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `std::option::Option<(char, char)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::option::Option<<&mut utf8_ranges::Utf8Sequences as std::iter::Iterator>::Item>>`: 11 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 10 bytes
print-type-size         field `.0`: 10 bytes
print-type-size type: `std::option::Option<std::option::Option<utf8_ranges::Utf8Sequence>>`: 11 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 10 bytes
print-type-size         field `.0`: 10 bytes
print-type-size type: `std::option::Option<<&mut utf8_ranges::Utf8Sequences as std::iter::Iterator>::Item>`: 10 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 9 bytes
print-type-size         field `.0`: 9 bytes
print-type-size type: `std::option::Option<utf8_ranges::Utf8Sequence>`: 10 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 9 bytes
print-type-size         field `.0`: 9 bytes
print-type-size type: `utf8_ranges::Utf8Sequence`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `One`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Two`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Three`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size     variant `Four`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/dfa.rs:1497:50: 1497:65 at:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/dfa.rs:676:31: 676:60 self:&&mut dfa::Fsm]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/dfa.rs:994:50: 994:69 inst:&&prog::InstBytes]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:1048:22: 1048:81 self:&&exec::Exec]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:231:42: 237:14 expr:&syntax::Expr]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:244:42: 250:14 expr:&syntax::Expr]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:527:54: 531:18 slots:&mut &mut [std::option::Option<usize>]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:596:26: 596:57 start:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:601:26: 601:57 start:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:606:26: 606:57 start:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/literals.rs:105:51: 105:71 s:&&literals::SingleSearch]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/literals.rs:447:43: 447:58 rare1:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/literals.rs:448:43: 448:58 rare2:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:388:38: 396:10 c:&input::Char]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:594:27: 598:10 self:&&mut re_bytes::FindCaptures]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:728:46: 728:61 self:&&re_bytes::Captures]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:818:27: 818:68 self:&&re_bytes::CapturesDebug]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:844:35: 844:73 i:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:864:40: 864:78 name:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:932:31: 932:74 self:&&mut re_bytes::SubCapturesNamed]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1018:27: 1018:54 self:&&re_unicode::CapturesDebug]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1044:35: 1044:73 i:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1064:40: 1064:78 name:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1131:31: 1131:70 self:&&mut re_unicode::SubCapturesNamed]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1163:31: 1167:18 it:&&mut re_trait::FindCaptures<re_plugin::Plugin>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:42:27: 42:47 text:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:848:41: 848:62 name:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:849:33: 849:48 groups:&&[(&str, usize)]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:927:46: 927:60 self:&&re_unicode::Captures]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:977:41: 984:10 self:&&re_unicode::Captures]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<dfa::State, u32>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::string::String, usize>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1317) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[44]::next[0]::{{closure}}[0] } 0:&&mut std::collections::hash::table::Drain<dfa::State, u32>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&dfa::State]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&dfa::State]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<usize>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(15), node: DefIndex(221) => thread_local/ac85310582490371fb67859d54a3345c::{{impl}}[19]::get_or[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:1048:22: 1048:81 self:&&exec::Exec]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<re_bytes::SubCapturesPos>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<re_unicode::FindCaptures>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<re_unicode::FindMatches>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<re_unicode::SubCapturesPos>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<aho_corasick::State<aho_corasick::Dense>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<bool>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<prog::Inst>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<syntax::ClassRange>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<syntax::Expr>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<syntax::Lit>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u32>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::vec::IntoIter<bool>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4615) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[41]::next_back[0]::{{closure}}[0] } 0:&&mut std::iter::Enumerate<std::slice::Iter<bool>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4615) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[41]::next_back[0]::{{closure}}[0] } 0:&&mut std::iter::Enumerate<std::vec::IntoIter<bool>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (char, char)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (u8, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const aho_corasick::State<aho_corasick::Dense>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<exec::ExecReadOnly>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::collections::HashMap<std::string::String, usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const backtrack::Job>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const compile::Hole>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const compile::MaybeInst>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const compile::SuffixCacheEntry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const dfa::State>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const pikevm::FollowEpsilon>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const prog::Inst>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::collections::hash::table::RawTable<dfa::State, u32>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const syntax::ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const syntax::ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const syntax::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const syntax::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const utf8_ranges::ScalarRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `re_bytes::CapturesDebug`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `re_unicode::CapturesDebug`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut thread_local::Table<std::cell::RefCell<exec::ProgramCacheInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<Box<std::cell::RefCell<exec::ProgramCacheInner>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::Range<i32>, [closure@DefId { krate: CrateNum(12), node: DefIndex(286) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[2]::build_matrix[0]::{{closure}}[0] }]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<i32>, [closure@DefId { krate: CrateNum(12), node: DefIndex(365) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::{{impl}}[3]::build[0]::{{closure}}[0] }]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<i32>, [closure@DefId { krate: CrateNum(12), node: DefIndex(373) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::{{impl}}[3]::fill[0]::{{closure}}[0] }]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<i32>, [closure@DefId { krate: CrateNum(12), node: DefIndex(378) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::{{impl}}[3]::fill[0]::{{closure}}[1] }]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Repeat<&syntax::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.element`: 8 bytes
print-type-size type: `std::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&std::option::Option<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(&str, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(char, char)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&Box<std::cell::RefCell<exec::ProgramCacheInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&aho_corasick::State<aho_corasick::Dense>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&backtrack::Job>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&compile::Hole>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&dfa::State>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&pikevm::FollowEpsilon>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&prog::Inst>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::RefCell<exec::ProgramCacheInner>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<Box<std::cell::RefCell<exec::ProgramCacheInner>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&syntax::ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&syntax::ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&syntax::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&syntax::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&utf8_ranges::Utf8Range>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&utf8_ranges::Utf8Sequence>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<Box<std::cell::RefCell<exec::ProgramCacheInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<Box<thread_local::Table<std::cell::RefCell<exec::ProgramCacheInner>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<exec::ExecReadOnly>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::collections::HashMap<std::string::String, usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<compile::Hole>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<compile::MaybeInst>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::collections::hash::table::RawTable<dfa::State, u32>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<syntax::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(char, char)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(u8, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<aho_corasick::State<aho_corasick::Dense>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<backtrack::Job>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<compile::Hole>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<compile::MaybeInst>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<compile::SuffixCacheEntry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dfa::State>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<pikevm::FollowEpsilon>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<prog::Inst>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::vec::Vec<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syntax::ByteRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syntax::ClassRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syntax::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syntax::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<utf8_ranges::ScalarRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::RefCell<exec::ProgramCacheInner>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size type: `std::result::Result<Box<std::cell::RefCell<exec::ProgramCacheInner>>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Arc<exec::ExecReadOnly>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::collections::HashMap<std::string::String, usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<thread_local::Table<std::cell::RefCell<exec::ProgramCacheInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `syntax::ClassRange`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `utf8_ranges::ScalarRange`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `syntax::parser::Flags`: 7 bytes, alignment: 1 bytes
print-type-size     field `.casei`: 1 bytes
print-type-size     field `.multi`: 1 bytes
print-type-size     field `.dotnl`: 1 bytes
print-type-size     field `.swap_greed`: 1 bytes
print-type-size     field `.ignore_space`: 1 bytes
print-type-size     field `.unicode`: 1 bytes
print-type-size     field `.allow_bytes`: 1 bytes
print-type-size type: `dfa::EmptyFlags`: 6 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size     field `.start_line`: 1 bytes
print-type-size     field `.end_line`: 1 bytes
print-type-size     field `.word_boundary`: 1 bytes
print-type-size     field `.not_word_boundary`: 1 bytes
print-type-size type: `input::Char`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `std::iter::Repeat<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.element`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<exec::MatchType>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `dfa::Byte`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `exec::MatchType`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Literal`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Dfa`: 0 bytes
print-type-size     variant `DfaAnchoredReverse`: 0 bytes
print-type-size     variant `DfaSuffix`: 0 bytes
print-type-size     variant `DfaMany`: 0 bytes
print-type-size     variant `Nfa`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Nothing`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::sys_common::poison::Guard, std::sync::PoisonError<std::sys_common::poison::Guard>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `syntax::ByteRange`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `utf8_ranges::Utf8Range`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `dfa::StateFlags`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `exec::MatchLiteralType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unanchored`: 0 bytes
print-type-size     variant `AnchoredStart`: 0 bytes
print-type-size     variant `AnchoredEnd`: 0 bytes
print-type-size type: `exec::MatchNfaType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Auto`: 0 bytes
print-type-size     variant `Backtrack`: 0 bytes
print-type-size     variant `PikeVM`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `prog::EmptyLook`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StartLine`: 0 bytes
print-type-size     variant `EndLine`: 0 bytes
print-type-size     variant `StartText`: 0 bytes
print-type-size     variant `EndText`: 0 bytes
print-type-size     variant `WordBoundary`: 0 bytes
print-type-size     variant `NotWordBoundary`: 0 bytes
print-type-size     variant `WordBoundaryAscii`: 0 bytes
print-type-size     variant `NotWordBoundaryAscii`: 0 bytes
print-type-size type: `std::cell::BorrowState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Reading`: 0 bytes
print-type-size     variant `Writing`: 0 bytes
print-type-size     variant `Unused`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<simd_accel::teddy128::Teddy>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::PoisonError<std::sys_common::poison::Guard>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.guard`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `std::sys_common::poison::Guard`: 1 bytes, alignment: 1 bytes
print-type-size     field `.panicking`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/compile.rs:171:30: 171:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/compile.rs:173:30: 173:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/compile.rs:203:40: 203:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/compile.rs:383:35: 383:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/dfa.rs:940:49: 940:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/dfa.rs:969:60: 969:74]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:129:41: 129:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:377:57: 377:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/exec.rs:691:30: 691:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/expand.rs:16:45: 16:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/expand.rs:72:52: 72:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:150:45: 150:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:164:49: 164:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:250:35: 250:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:256:44: 256:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:260:49: 260:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:362:42: 362:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/input.rs:399:34: 399:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/literals.rs:104:56: 104:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/literals.rs:106:58: 106:78]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/literals.rs:107:57: 107:77]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/pikevm.rs:196:69: 196:75]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:213:30: 213:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:403:18: 403:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:404:22: 404:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:676:18: 676:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:676:43: 676:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_bytes.rs:815:44: 815:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_plugin.rs:61:39: 61:49]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:1015:44: 1015:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:704:39: 704:73]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:704:58: 704:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:852:38: 852:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:875:66: 875:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/re_unicode.rs:877:31: 877:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/utf8.rs:112:60: 112:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/utf8.rs:126:64: 126:76]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/utf8.rs:98:58: 98:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(233) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(235) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(238) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[2] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(240) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[3] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(286) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[2]::build_matrix[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(365) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::{{impl}}[3]::build[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(367) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::{{impl}}[3]::build[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(373) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::{{impl}}[3]::fill[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(378) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::{{impl}}[3]::fill[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:404:22: 404:42], 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.1.80/src/prog.rs:403:18: 403:55]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(12), node: DefIndex(235) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[1] }], 1:[closure@DefId { krate: CrateNum(12), node: DefIndex(233) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[0] }]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(12), node: DefIndex(240) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[3] }], 1:[closure@DefId { krate: CrateNum(12), node: DefIndex(238) => aho_corasick/d076e4b220bc3eb2457fdde571063a44::full[0]::{{impl}}[0]::heap_bytes[0]::{{closure}}[2] }]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:fn(usize, usize) -> usize {<usize as std::ops::Add>::add}, 1:[closure@DefId { krate: CrateNum(3), node: DefIndex(3263) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::concat[0]::{{closure}}[0] }]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:fn(usize, usize) -> usize {<usize as std::ops::Add>::add}, 1:[closure@DefId { krate: CrateNum(3), node: DefIndex(3271) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::join[0]::{{closure}}[0] }]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7461) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::find[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(3263) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::concat[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(3271) => collections/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[0]::join[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4268) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[31]::extend[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `simd_accel::teddy128::Teddy`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&'static (&'static str, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&'static ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(char, char)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&aho_corasick::State<aho_corasick::Dense>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&backtrack::Job>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&compile::Hole>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&dfa::State>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::option::Option<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&pikevm::FollowEpsilon>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&prog::Inst>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::collections::hash::table::RawTable<dfa::State, u32>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<&'static str>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<&str>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::vec::Vec<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syntax::ByteRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syntax::ClassRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syntax::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syntax::Lit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&utf8_ranges::Utf8Range>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&usize, &std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(char, char)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(dfa::State, u32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u8, u32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<aho_corasick::State<aho_corasick::Dense>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<exec::ExecReadOnly>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::collections::HashMap<std::string::String, usize>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<backtrack::Job>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<compile::Hole>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<compile::MaybeInst>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<compile::SuffixCacheEntry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dfa::State>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<pikevm::FollowEpsilon>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<prog::Inst>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::cell::RefCell<exec::ProgramCacheInner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::collections::hash::table::RawTable<dfa::State, u32>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syntax::ByteRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syntax::ClassRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syntax::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syntax::Lit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<thread_local::TableEntry<std::cell::RefCell<exec::ProgramCacheInner>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<utf8_ranges::ScalarRange>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `thread_local::unreachable::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `crypto::hmac::HMAC`: 296 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 288 bytes
print-type-size     field `.type_`: 1 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `ffi::HMAC_CTX`: 288 bytes, alignment: 8 bytes
print-type-size     field `.md`: 8 bytes
print-type-size     field `.md_ctx`: 48 bytes
print-type-size     field `.i_ctx`: 48 bytes
print-type-size     field `.o_ctx`: 48 bytes
print-type-size     field `.key_length`: 4 bytes
print-type-size     field `.key`: 128 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ffi::RSA`: 160 bytes, alignment: 8 bytes
print-type-size     field `.pad`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.version`: 8 bytes, alignment: 8 bytes
print-type-size     field `.meth`: 8 bytes
print-type-size     field `.engine`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.e`: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size     field `.q`: 8 bytes
print-type-size     field `.dmp1`: 8 bytes
print-type-size     field `.dmq1`: 8 bytes
print-type-size     field `.iqmp`: 8 bytes
print-type-size     field `.ex_data`: 8 bytes
print-type-size     field `.references`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `._method_mod_n`: 8 bytes
print-type-size     field `._method_mod_p`: 8 bytes
print-type-size     field `._method_mod_q`: 8 bytes
print-type-size     field `.bignum_data`: 8 bytes
print-type-size     field `.blinding`: 8 bytes
print-type-size     field `.mt_blinding`: 8 bytes
print-type-size type: `ffi::BIO`: 112 bytes, alignment: 8 bytes
print-type-size     field `.method`: 8 bytes
print-type-size     field `.callback`: 8 bytes
print-type-size     field `.cb_arg`: 8 bytes
print-type-size     field `.init`: 4 bytes
print-type-size     field `.shutdown`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.retry_reason`: 4 bytes
print-type-size     field `.num`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ptr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.next_bio`: 8 bytes
print-type-size     field `.prev_bio`: 8 bytes
print-type-size     field `.references`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.num_read`: 8 bytes, alignment: 8 bytes
print-type-size     field `.num_write`: 8 bytes
print-type-size     field `.ex_data`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<x509::extension::ExtensionType, usize>>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `x509::X509Generator`: 104 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size     field `.days`: 4 bytes
print-type-size     field `.names`: 24 bytes
print-type-size     field `.extensions`: 64 bytes
print-type-size     field `.hash_type`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `alloc::arc::ArcInner<ssl::bio::BioMethod>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 80 bytes
print-type-size type: `std::collections::hash_map::Entry<x509::extension::ExtensionType, usize>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Vacant`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `ffi::EVP_CIPHER`: 88 bytes, alignment: 8 bytes
print-type-size     field `.nid`: 4 bytes
print-type-size     field `.block_size`: 4 bytes
print-type-size     field `.key_len`: 4 bytes
print-type-size     field `.iv_len`: 4 bytes
print-type-size     field `.flags`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size     field `.do_cipher`: 8 bytes
print-type-size     field `.cleanup`: 8 bytes
print-type-size     field `.ctx_size`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.set_asn1_parameters`: 8 bytes, alignment: 8 bytes
print-type-size     field `.get_asn1_parameters`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.app_data`: 8 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<x509::extension::ExtensionType, usize>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 32 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `ffi::BIO_METHOD`: 80 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.name`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bwrite`: 8 bytes
print-type-size     field `.bread`: 8 bytes
print-type-size     field `.bputs`: 8 bytes
print-type-size     field `.bgets`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.create`: 8 bytes
print-type-size     field `.destroy`: 8 bytes
print-type-size     field `.callback_ctrl`: 8 bytes
print-type-size type: `ssl::bio::BioMethod`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `ssl::error::OpensslError`: 72 bytes, alignment: 8 bytes
print-type-size     variant `UnknownError`: 72 bytes
print-type-size         field `.library`: 24 bytes
print-type-size         field `.function`: 24 bytes
print-type-size         field `.reason`: 24 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<x509::extension::ExtensionType, usize>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.key`: 40 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<x509::extension::ExtensionType, usize, &std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<x509::extension::ExtensionType, usize, std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `x509::Extensions`: 64 bytes, alignment: 8 bytes
print-type-size     field `.extensions`: 24 bytes
print-type-size     field `.indexes`: 40 bytes
print-type-size type: `ffi::EVP_PKEY`: 56 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     field `.save_type`: 4 bytes
print-type-size     field `.references`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ameth`: 8 bytes, alignment: 8 bytes
print-type-size     field `.engine`: 8 bytes
print-type-size     field `.pkey`: 8 bytes
print-type-size     field `.save_parameters`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.attributes`: 8 bytes, alignment: 8 bytes
print-type-size type: `ffi::X509V3_CTX`: 56 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.issuer_cert`: 8 bytes, alignment: 8 bytes
print-type-size     field `.subject_cert`: 8 bytes
print-type-size     field `.subject_req`: 8 bytes
print-type-size     field `.crl`: 8 bytes
print-type-size     field `.db_meth`: 8 bytes
print-type-size     field `.db`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<x509::extension::ExtensionType, usize, std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<x509::extension::ExtensionType, usize, std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 40 bytes, alignment: 8 bytes
print-type-size type: `x509::extension::Extension`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KeyUsage`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `ExtKeyUsage`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `SubjectAltName`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `IssuerAltName`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `OtherNid`: 32 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `OtherStr`: 48 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size type: `crypto::pkcs5::KeyIvPair`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.iv`: 24 bytes
print-type-size type: `ffi::EVP_MD_CTX`: 48 bytes, alignment: 8 bytes
print-type-size     field `.digest`: 8 bytes
print-type-size     field `.engine`: 8 bytes
print-type-size     field `.flags`: 8 bytes
print-type-size     field `.md_data`: 8 bytes
print-type-size     field `.pctx`: 8 bytes
print-type-size     field `.update`: 8 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<x509::extension::ExtensionType, usize, &std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(x509::extension::ExtensionType, usize)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<(x509::X509, crypto::pkey::PKey), ssl::error::SslError>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `ssl::error::NonblockingSslError`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SslError`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `WantRead`: 0 bytes
print-type-size     variant `WantWrite`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::any::TypeId, i32>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<x509::extension::ExtensionType, usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<x509::extension::ExtensionType, usize, &std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(x509::extension::ExtensionType, &x509::extension::Extension)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<x509::extension::ExtensionType>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(), ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<asn1::Asn1Time, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<bio::MemBio, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<bn::BigNum, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<bool, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<crypto::rsa::RSA, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<dh::DH, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<ssl::Ssl, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<ssl::SslContext, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::ffi::CString, std::ffi::NulError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<u32, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<x509::X509, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<x509::X509Req, ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `ffi::_STACK`: 32 bytes, alignment: 8 bytes
print-type-size     field `.num`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.data`: 8 bytes, alignment: 8 bytes
print-type-size     field `.sorted`: 4 bytes
print-type-size     field `.num_alloc`: 4 bytes
print-type-size     field `.comp`: 8 bytes
print-type-size type: `ffi::stack_st_GENERAL_NAME`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 32 bytes
print-type-size type: `ffi::stack_st_X509_EXTENSION`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 32 bytes
print-type-size type: `ffi::stack_st_void`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 32 bytes
print-type-size type: `ssl::error::Error`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ZeroReturn`: 0 bytes
print-type-size     variant `WantRead`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `WantWrite`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `WantX509Lookup`: 0 bytes
print-type-size     variant `Stream`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ssl`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ssl::error::SslError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `StreamError`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `SslSessionClosed`: 0 bytes
print-type-size     variant `OpenSslErrors`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<x509::extension::ExtensionType, usize, &std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<x509::extension::ExtensionType, usize, &std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, &mut std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, &std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, i32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<x509::extension::ExtensionType, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::ffi::NulError`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::option::Option<(&str, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(usize, std::string::String)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<x509::extension::ExtensionType, usize, &std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<x509::X509>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ssl::MaybeSslStream<std::net::TcpStream>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `x509::extension::ExtKeyUsageOption`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ServerAuth`: 0 bytes
print-type-size     variant `ClientAuth`: 0 bytes
print-type-size     variant `CodeSigning`: 0 bytes
print-type-size     variant `EmailProtection`: 0 bytes
print-type-size     variant `TimeStamping`: 0 bytes
print-type-size     variant `MsCodeInd`: 0 bytes
print-type-size     variant `MsCodeCom`: 0 bytes
print-type-size     variant `MsCtlSign`: 0 bytes
print-type-size     variant `MsSgc`: 0 bytes
print-type-size     variant `MsEfs`: 0 bytes
print-type-size     variant `NsSgc`: 0 bytes
print-type-size     variant `Other`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `x509::extension::ExtensionType`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KeyUsage`: 0 bytes
print-type-size     variant `ExtKeyUsage`: 0 bytes
print-type-size     variant `SubjectAltName`: 0 bytes
print-type-size     variant `IssuerAltName`: 0 bytes
print-type-size     variant `OtherNid`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `OtherStr`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `crypto::hash::Hasher`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size     field `.md`: 8 bytes
print-type-size     field `.type_`: 1 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `crypto::symm::Crypter`: 24 bytes, alignment: 8 bytes
print-type-size     field `.evp`: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size     field `.keylen`: 4 bytes
print-type-size     field `.blocksize`: 4 bytes
print-type-size type: `ffi::BIGNUM`: 24 bytes, alignment: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size     field `.top`: 4 bytes
print-type-size     field `.dmax`: 4 bytes
print-type-size     field `.neg`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size type: `ssl::MaybeSslStream<std::net::TcpStream>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ssl`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Normal`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<x509::extension::ExtensionType, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Map<std::slice::Iter<(x509::extension::AltNameOption, std::string::String)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:109:39: 109:89]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Map<std::slice::Iter<(x509::extension::AltNameOption, std::string::String)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:113:39: 113:89]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<x509::extension::ExtKeyUsageOption>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<x509::extension::KeyUsageOption>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, i32)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ssl::NonblockingSslStream<std::net::TcpStream>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ssl::SslStream<std::net::TcpStream>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::net::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(std::string::String, std::string::String)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(x509::extension::AltNameOption, std::string::String)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ssl::error::OpenSslError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ssl::error::OpensslError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<x509::extension::ExtKeyUsageOption>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<x509::extension::Extension>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<x509::extension::KeyUsageOption>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `x509::X509`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size     field `.handle`: 8 bytes
print-type-size     field `.owned`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(x509::extension::AltNameOption, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ssl::error::OpenSslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ssl::error::OpensslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<x509::extension::ExtKeyUsageOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<x509::extension::Extension>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<x509::extension::KeyUsageOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `asn1::Asn1Time`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 8 bytes
print-type-size     field `.owned`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `bio::MemBio`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bio`: 8 bytes
print-type-size     field `.owned`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `bitflags::<unnamed>::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<(&str, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<(std::string::String, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<(x509::extension::AltNameOption, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<ssl::error::OpenSslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<ssl::error::OpensslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<x509::extension::ExtKeyUsageOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<x509::extension::Extension>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<x509::extension::KeyUsageOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `crypto::pkey::PKey`: 16 bytes, alignment: 8 bytes
print-type-size     field `.evp`: 8 bytes
print-type-size     field `.parts`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `ffi::CRYPTO_EX_DATA`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sk`: 8 bytes
print-type-size     field `.dummy`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ffi::GENERAL_NAME`: 16 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.d`: 8 bytes, alignment: 8 bytes
print-type-size type: `lazy_static::lazy::Lazy<std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `ssl::NonblockingSslStream<std::net::TcpStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `ssl::SslStream<std::net::TcpStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ssl`: 8 bytes
print-type-size     field `._method`: 8 bytes
print-type-size     field `._p`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<x509::extension::ExtensionType, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(&str, &str)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/mod.rs:368:56: 368:72]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(std::string::String, std::string::String)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/mod.rs:369:55: 369:89]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(x509::extension::AltNameOption, std::string::String)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:109:39: 109:89]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(x509::extension::AltNameOption, std::string::String)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:113:39: 113:89]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.n`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &x509::extension::ExtKeyUsageOption)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &x509::extension::KeyUsageOption)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<*mut ffi::BIGNUM>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<nid::Nid>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<ssl::SslCipher>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<ssl::SslContextOptions>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<x509::GeneralName>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<x509::GeneralNames>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<x509::SslString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<(&str, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::string::String, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(x509::extension::AltNameOption, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ssl::error::OpenSslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ssl::error::OpensslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<x509::extension::ExtKeyUsageOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<x509::extension::KeyUsageOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `x509::ExtensionsIter`: 16 bytes, alignment: 8 bytes
print-type-size     field `.current`: 8 bytes
print-type-size     field `.extensions`: 8 bytes
print-type-size type: `x509::GeneralNamesIter`: 16 bytes, alignment: 8 bytes
print-type-size     field `.names`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `x509::SslString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `x509::X509Name`: 16 bytes, alignment: 8 bytes
print-type-size     field `.x509`: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size type: `ssl::CipherBits`: 12 bytes, alignment: 4 bytes
print-type-size     field `.secret`: 4 bytes
print-type-size     field `.algorithm`: 8 bytes
print-type-size type: `std::option::Option<x509::X509ValidationError>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `<ssl::SslContextOptions as std::fmt::Debug>::fmt::dummy::SslContextOptions`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `<ssl::SslVerifyMode as std::fmt::Debug>::fmt::dummy::SslVerifyMode`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/bn/mod.rs:103:32: 107:10 s:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/bn/mod.rs:112:32: 116:10 s:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/bn/mod.rs:140:32: 143:10 n:&&[u8]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/bn/mod.rs:95:32: 98:10 n:&u64]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:94:42: 100:6 sep:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&x509::extension::ExtensionType]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&x509::extension::ExtensionType]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7744) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::once[0]::{{impl}}[2]::call_once[0]::{{closure}}[0] } 0:&mut std::option::Option<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/ssl/mod.rs:57:24: 67:10]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7744) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::once[0]::{{impl}}[2]::call_once[0]::{{closure}}[0] } 0:&mut std::option::Option<[closure@DefId { krate: CrateNum(14), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>, 1:fn() -> std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>> {<ssl::INDEXES as std::ops::Deref>::deref::__static_ref_initialize}]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7744) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::once[0]::{{impl}}[2]::call_once[0]::{{closure}}[0] } 0:&mut std::option::Option<[closure@DefId { krate: CrateNum(14), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>, 1:fn() -> std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>> {<ssl::SSL_INDEXES as std::ops::Deref>::deref::__static_ref_initialize}]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>, 1:fn() -> std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>> {<ssl::INDEXES as std::ops::Deref>::deref::__static_ref_initialize}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(14), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>, 1:fn() -> std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>> {<ssl::SSL_INDEXES as std::ops::Deref>::deref::__static_ref_initialize}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::iter::Map<std::slice::Iter<(x509::extension::AltNameOption, std::string::String)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:109:39: 109:89]>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::iter::Map<std::slice::Iter<(x509::extension::AltNameOption, std::string::String)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:113:39: 113:89]>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<x509::extension::ExtKeyUsageOption>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<x509::extension::KeyUsageOption>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const (std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const (x509::extension::AltNameOption, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const alloc::arc::ArcInner<ssl::bio::BioMethod>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const ssl::error::OpenSslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const ssl::error::OpensslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const x509::extension::ExtKeyUsageOption>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const x509::extension::Extension>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const x509::extension::KeyUsageOption>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bn::BigNum`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `crypto::rsa::RSA`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `dh::DH`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `nid::Nid`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Undefined`: 0 bytes
print-type-size     variant `Rsadsi`: 0 bytes
print-type-size     variant `Pkcs`: 0 bytes
print-type-size     variant `MD2`: 0 bytes
print-type-size     variant `MD4`: 0 bytes
print-type-size     variant `MD5`: 0 bytes
print-type-size     variant `RC4`: 0 bytes
print-type-size     variant `RsaEncryption`: 0 bytes
print-type-size     variant `RSA_MD2`: 0 bytes
print-type-size     variant `RSA_MD5`: 0 bytes
print-type-size     variant `PBE_MD2_DES`: 0 bytes
print-type-size     variant `X500`: 0 bytes
print-type-size     variant `x509`: 0 bytes
print-type-size     variant `CN`: 0 bytes
print-type-size     variant `C`: 0 bytes
print-type-size     variant `L`: 0 bytes
print-type-size     variant `ST`: 0 bytes
print-type-size     variant `O`: 0 bytes
print-type-size     variant `OU`: 0 bytes
print-type-size     variant `RSA`: 0 bytes
print-type-size     variant `Pkcs7`: 0 bytes
print-type-size     variant `Pkcs7_data`: 0 bytes
print-type-size     variant `Pkcs7_signedData`: 0 bytes
print-type-size     variant `Pkcs7_envelopedData`: 0 bytes
print-type-size     variant `Pkcs7_signedAndEnvelopedData`: 0 bytes
print-type-size     variant `Pkcs7_digestData`: 0 bytes
print-type-size     variant `Pkcs7_encryptedData`: 0 bytes
print-type-size     variant `Pkcs3`: 0 bytes
print-type-size     variant `DhKeyAgreement`: 0 bytes
print-type-size     variant `DES_ECB`: 0 bytes
print-type-size     variant `DES_CFB`: 0 bytes
print-type-size     variant `DES_CBC`: 0 bytes
print-type-size     variant `DES_EDE`: 0 bytes
print-type-size     variant `DES_EDE3`: 0 bytes
print-type-size     variant `IDEA_CBC`: 0 bytes
print-type-size     variant `IDEA_CFB`: 0 bytes
print-type-size     variant `IDEA_ECB`: 0 bytes
print-type-size     variant `RC2_CBC`: 0 bytes
print-type-size     variant `RC2_ECB`: 0 bytes
print-type-size     variant `RC2_CFB`: 0 bytes
print-type-size     variant `RC2_OFB`: 0 bytes
print-type-size     variant `SHA`: 0 bytes
print-type-size     variant `RSA_SHA`: 0 bytes
print-type-size     variant `DES_EDE_CBC`: 0 bytes
print-type-size     variant `DES_EDE3_CBC`: 0 bytes
print-type-size     variant `DES_OFB`: 0 bytes
print-type-size     variant `IDEA_OFB`: 0 bytes
print-type-size     variant `Pkcs9`: 0 bytes
print-type-size     variant `Email`: 0 bytes
print-type-size     variant `UnstructuredName`: 0 bytes
print-type-size     variant `ContentType`: 0 bytes
print-type-size     variant `MessageDigest`: 0 bytes
print-type-size     variant `SigningTime`: 0 bytes
print-type-size     variant `CounterSignature`: 0 bytes
print-type-size     variant `ChallengePassword`: 0 bytes
print-type-size     variant `UnstructuredAddress`: 0 bytes
print-type-size     variant `ExtendedCertificateAttributes`: 0 bytes
print-type-size     variant `Netscape`: 0 bytes
print-type-size     variant `NetscapeCertExtention`: 0 bytes
print-type-size     variant `NetscapeDatatype`: 0 bytes
print-type-size     variant `DES_EDE_CFB64`: 0 bytes
print-type-size     variant `DES_EDE3_CFB64`: 0 bytes
print-type-size     variant `DES_EDE_OFB64`: 0 bytes
print-type-size     variant `DES_EDE3_OFB64`: 0 bytes
print-type-size     variant `SHA1`: 0 bytes
print-type-size     variant `RSA_SHA1`: 0 bytes
print-type-size     variant `DSA_SHA`: 0 bytes
print-type-size     variant `DSA_OLD`: 0 bytes
print-type-size     variant `PBE_SHA1_RC2_64`: 0 bytes
print-type-size     variant `PBKDF2`: 0 bytes
print-type-size     variant `DSA_SHA1_OLD`: 0 bytes
print-type-size     variant `NetscapeCertType`: 0 bytes
print-type-size     variant `NetscapeBaseUrl`: 0 bytes
print-type-size     variant `NetscapeRevocationUrl`: 0 bytes
print-type-size     variant `NetscapeCARevocationUrl`: 0 bytes
print-type-size     variant `NetscapeRenewalUrl`: 0 bytes
print-type-size     variant `NetscapeCAPolicyUrl`: 0 bytes
print-type-size     variant `NetscapeSSLServerName`: 0 bytes
print-type-size     variant `NetscapeComment`: 0 bytes
print-type-size     variant `NetscapeCertSequence`: 0 bytes
print-type-size     variant `DESX_CBC`: 0 bytes
print-type-size     variant `ID_CE`: 0 bytes
print-type-size     variant `SubjectKeyIdentifier`: 0 bytes
print-type-size     variant `KeyUsage`: 0 bytes
print-type-size     variant `PrivateKeyUsagePeriod`: 0 bytes
print-type-size     variant `SubjectAltName`: 0 bytes
print-type-size     variant `IssuerAltName`: 0 bytes
print-type-size     variant `BasicConstraints`: 0 bytes
print-type-size     variant `CrlNumber`: 0 bytes
print-type-size     variant `CertificatePolicies`: 0 bytes
print-type-size     variant `AuthorityKeyIdentifier`: 0 bytes
print-type-size     variant `BF_CBC`: 0 bytes
print-type-size     variant `BF_ECB`: 0 bytes
print-type-size     variant `BF_CFB`: 0 bytes
print-type-size     variant `BF_OFB`: 0 bytes
print-type-size     variant `MDC2`: 0 bytes
print-type-size     variant `RSA_MDC2`: 0 bytes
print-type-size     variant `RC4_40`: 0 bytes
print-type-size     variant `RC2_40_CBC`: 0 bytes
print-type-size     variant `G`: 0 bytes
print-type-size     variant `S`: 0 bytes
print-type-size     variant `I`: 0 bytes
print-type-size     variant `UID`: 0 bytes
print-type-size     variant `CrlDistributionPoints`: 0 bytes
print-type-size     variant `RSA_NP_MD5`: 0 bytes
print-type-size     variant `SN`: 0 bytes
print-type-size     variant `T`: 0 bytes
print-type-size     variant `D`: 0 bytes
print-type-size     variant `CAST5_CBC`: 0 bytes
print-type-size     variant `CAST5_ECB`: 0 bytes
print-type-size     variant `CAST5_CFB`: 0 bytes
print-type-size     variant `CAST5_OFB`: 0 bytes
print-type-size     variant `PbeWithMD5AndCast5CBC`: 0 bytes
print-type-size     variant `DSA_SHA1`: 0 bytes
print-type-size     variant `MD5_SHA1`: 0 bytes
print-type-size     variant `RSA_SHA1_2`: 0 bytes
print-type-size     variant `DSA`: 0 bytes
print-type-size     variant `RIPEMD160`: 0 bytes
print-type-size     variant `RSA_RIPEMD160`: 0 bytes
print-type-size     variant `RC5_CBC`: 0 bytes
print-type-size     variant `RC5_ECB`: 0 bytes
print-type-size     variant `RC5_CFB`: 0 bytes
print-type-size     variant `RC5_OFB`: 0 bytes
print-type-size     variant `RLE`: 0 bytes
print-type-size     variant `ZLIB`: 0 bytes
print-type-size     variant `ExtendedKeyUsage`: 0 bytes
print-type-size     variant `PKIX`: 0 bytes
print-type-size     variant `ID_KP`: 0 bytes
print-type-size     variant `ServerAuth`: 0 bytes
print-type-size     variant `ClientAuth`: 0 bytes
print-type-size     variant `CodeSigning`: 0 bytes
print-type-size     variant `EmailProtection`: 0 bytes
print-type-size     variant `TimeStamping`: 0 bytes
print-type-size     variant `MsCodeInd`: 0 bytes
print-type-size     variant `MsCodeCom`: 0 bytes
print-type-size     variant `MsCtlSigh`: 0 bytes
print-type-size     variant `MsSGC`: 0 bytes
print-type-size     variant `MsEFS`: 0 bytes
print-type-size     variant `NsSGC`: 0 bytes
print-type-size     variant `DeltaCRL`: 0 bytes
print-type-size     variant `CRLReason`: 0 bytes
print-type-size     variant `InvalidityDate`: 0 bytes
print-type-size     variant `SXNetID`: 0 bytes
print-type-size     variant `PBE_SHA1_RC4_128`: 0 bytes
print-type-size     variant `PBE_SHA1_RC4_40`: 0 bytes
print-type-size     variant `PBE_SHA1_3DES`: 0 bytes
print-type-size     variant `PBE_SHA1_2DES`: 0 bytes
print-type-size     variant `PBE_SHA1_RC2_128`: 0 bytes
print-type-size     variant `PBE_SHA1_RC2_40`: 0 bytes
print-type-size     variant `KeyBag`: 0 bytes
print-type-size     variant `Pkcs8ShroudedKeyBag`: 0 bytes
print-type-size     variant `CertBag`: 0 bytes
print-type-size     variant `CrlBag`: 0 bytes
print-type-size     variant `SecretBag`: 0 bytes
print-type-size     variant `SafeContentsBag`: 0 bytes
print-type-size     variant `FriendlyName`: 0 bytes
print-type-size     variant `LocalKeyID`: 0 bytes
print-type-size     variant `X509Certificate`: 0 bytes
print-type-size     variant `SdsiCertificate`: 0 bytes
print-type-size     variant `X509Crl`: 0 bytes
print-type-size     variant `PBES2`: 0 bytes
print-type-size     variant `PBMAC1`: 0 bytes
print-type-size     variant `HmacWithSha1`: 0 bytes
print-type-size     variant `ID_QT_CPS`: 0 bytes
print-type-size     variant `ID_QT_UNOTICE`: 0 bytes
print-type-size     variant `RC2_64_CBC`: 0 bytes
print-type-size     variant `SMIMECaps`: 0 bytes
print-type-size     variant `PBE_MD2_RC2_64`: 0 bytes
print-type-size     variant `PBE_MD5_RC2_64`: 0 bytes
print-type-size     variant `PBE_SHA1_DES`: 0 bytes
print-type-size     variant `MicrosoftExtensionRequest`: 0 bytes
print-type-size     variant `ExtensionRequest`: 0 bytes
print-type-size     variant `Name`: 0 bytes
print-type-size     variant `DnQualifier`: 0 bytes
print-type-size     variant `IdPe`: 0 bytes
print-type-size     variant `IdAd`: 0 bytes
print-type-size     variant `AuthorityInfoAccess`: 0 bytes
print-type-size     variant `OCSP`: 0 bytes
print-type-size     variant `CaIssuers`: 0 bytes
print-type-size     variant `OCSPSigning`: 0 bytes
print-type-size     variant `UserId`: 0 bytes
print-type-size     variant `SHA256`: 0 bytes
print-type-size     variant `SHA384`: 0 bytes
print-type-size     variant `SHA512`: 0 bytes
print-type-size     variant `SHA224`: 0 bytes
print-type-size type: `ssl::Ssl`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ssl`: 8 bytes
print-type-size type: `ssl::SslCipher`: 8 bytes, alignment: 8 bytes
print-type-size     field `.cipher`: 8 bytes
print-type-size     field `.ph`: 0 bytes
print-type-size type: `ssl::SslContext`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size type: `ssl::SslContextOptions`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `ssl::SslContextOptions::all::dummy::SslContextOptions`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `ssl::error::OpenSslError`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&(&str, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(x509::extension::AltNameOption, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&bn::BigNum>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ssl::error::OpenSslError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ssl::error::OpensslError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&x509::X509StoreContext>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&x509::extension::ExtKeyUsageOption>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&x509::extension::KeyUsageOption>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<[closure@DefId { krate: CrateNum(14), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>, 1:fn() -> std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>> {<ssl::INDEXES as std::ops::Deref>::deref::__static_ref_initialize}]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<[closure@DefId { krate: CrateNum(14), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>, 1:fn() -> std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>> {<ssl::SSL_INDEXES as std::ops::Deref>::deref::__static_ref_initialize}]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut ffi::CRYPTO_EX_DATA, *mut ffi::CRYPTO_EX_DATA, *mut libc::c_void, i32, i64, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, *mut libc::c_void, *const ffi::CRYPTO_EX_DATA, i32, i64, *const libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, *mut libc::c_void, *mut ffi::CRYPTO_EX_DATA, i32, i64, *mut libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(i32, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<fn(&mut ssl::Ssl, &mut i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<fn(bool, &x509::X509StoreContext) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<ssl::LibSslError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*const libc::c_void, *const libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, *const i8) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, *const i8, i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, *mut i8, i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, i32, *const i8, i32, i64, i64) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, i32, *const i8, i32, i64, i64)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, i32, i64, *mut libc::c_void) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, i32, std::option::Option<unsafe extern "C" fn(*mut ffi::BIO, i32, *const i8, i32, i64, i64)>) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void, *mut u8, *const u8, usize) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut libc::c_void, i32, i32, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<ssl::bio::BioMethod>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(x509::extension::AltNameOption, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ssl::error::OpenSslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ssl::error::OpensslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<x509::extension::ExtKeyUsageOption>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<x509::extension::Extension>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<x509::extension::KeyUsageOption>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Arc<ssl::bio::BioMethod>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Once`: 8 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `x509::GeneralName`: 8 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.m`: 0 bytes
print-type-size type: `x509::GeneralNames`: 8 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 8 bytes
print-type-size     field `.m`: 0 bytes
print-type-size type: `x509::X509Req`: 8 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 8 bytes
print-type-size type: `x509::X509StoreContext`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size type: `x509::X509ValidationError`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `X509UnableToGetIssuerCert`: 0 bytes
print-type-size     variant `X509UnableToGetCrl`: 0 bytes
print-type-size     variant `X509UnableToDecryptCertSignature`: 0 bytes
print-type-size     variant `X509UnableToDecryptCrlSignature`: 0 bytes
print-type-size     variant `X509UnableToDecodeIssuerPublicKey`: 0 bytes
print-type-size     variant `X509CertSignatureFailure`: 0 bytes
print-type-size     variant `X509CrlSignatureFailure`: 0 bytes
print-type-size     variant `X509CertNotYetValid`: 0 bytes
print-type-size     variant `X509CertHasExpired`: 0 bytes
print-type-size     variant `X509CrlNotYetValid`: 0 bytes
print-type-size     variant `X509CrlHasExpired`: 0 bytes
print-type-size     variant `X509ErrorInCertNotBeforeField`: 0 bytes
print-type-size     variant `X509ErrorInCertNotAfterField`: 0 bytes
print-type-size     variant `X509ErrorInCrlLastUpdateField`: 0 bytes
print-type-size     variant `X509ErrorInCrlNextUpdateField`: 0 bytes
print-type-size     variant `X509OutOfMem`: 0 bytes
print-type-size     variant `X509DepthZeroSelfSignedCert`: 0 bytes
print-type-size     variant `X509SelfSignedCertInChain`: 0 bytes
print-type-size     variant `X509UnableToGetIssuerCertLocally`: 0 bytes
print-type-size     variant `X509UnableToVerifyLeafSignature`: 0 bytes
print-type-size     variant `X509CertChainTooLong`: 0 bytes
print-type-size     variant `X509CertRevoked`: 0 bytes
print-type-size     variant `X509InvalidCA`: 0 bytes
print-type-size     variant `X509PathLengthExceeded`: 0 bytes
print-type-size     variant `X509InvalidPurpose`: 0 bytes
print-type-size     variant `X509CertUntrusted`: 0 bytes
print-type-size     variant `X509CertRejected`: 0 bytes
print-type-size     variant `X509SubjectIssuerMismatch`: 0 bytes
print-type-size     variant `X509AkidSkidMismatch`: 0 bytes
print-type-size     variant `X509AkidIssuerSerialMismatch`: 0 bytes
print-type-size     variant `X509KeyusageNoCertsign`: 0 bytes
print-type-size     variant `X509UnableToGetCrlIssuer`: 0 bytes
print-type-size     variant `X509UnhandledCriticalExtension`: 0 bytes
print-type-size     variant `X509KeyusageNoCrlSign`: 0 bytes
print-type-size     variant `X509UnhandledCriticalCrlExtension`: 0 bytes
print-type-size     variant `X509InvalidNonCA`: 0 bytes
print-type-size     variant `X509ProxyPathLengthExceeded`: 0 bytes
print-type-size     variant `X509KeyusageNoDigitalSignature`: 0 bytes
print-type-size     variant `X509ProxyCertificatesNotAllowed`: 0 bytes
print-type-size     variant `X509InvalidExtension`: 0 bytes
print-type-size     variant `X509InavlidPolicyExtension`: 0 bytes
print-type-size     variant `X509NoExplicitPolicy`: 0 bytes
print-type-size     variant `X509DifferentCrlScope`: 0 bytes
print-type-size     variant `X509UnsupportedExtensionFeature`: 0 bytes
print-type-size     variant `X509UnnestedResource`: 0 bytes
print-type-size     variant `X509PermittedVolation`: 0 bytes
print-type-size     variant `X509ExcludedViolation`: 0 bytes
print-type-size     variant `X509SubtreeMinmax`: 0 bytes
print-type-size     variant `X509UnsupportedConstraintType`: 0 bytes
print-type-size     variant `X509UnsupportedConstraintSyntax`: 0 bytes
print-type-size     variant `X509UnsupportedNameSyntax`: 0 bytes
print-type-size     variant `X509CrlPathValidationError`: 0 bytes
print-type-size     variant `X509ApplicationVerification`: 0 bytes
print-type-size     variant `X509UnknownError`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `bn::RNGProperty`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `MsbMaybeZero`: 0 bytes
print-type-size     variant `MsbOne`: 0 bytes
print-type-size     variant `TwoMsbOne`: 0 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `ssl::LibSslError`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ErrorNone`: 0 bytes
print-type-size     variant `ErrorSsl`: 0 bytes
print-type-size     variant `ErrorWantRead`: 0 bytes
print-type-size     variant `ErrorWantWrite`: 0 bytes
print-type-size     variant `ErrorWantX509Lookup`: 0 bytes
print-type-size     variant `ErrorSyscall`: 0 bytes
print-type-size     variant `ErrorZeroReturn`: 0 bytes
print-type-size     variant `ErrorWantConnect`: 0 bytes
print-type-size     variant `ErrorWantAccept`: 0 bytes
print-type-size type: `ssl::SslVerifyMode`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `std::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::net::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys_common::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `x509::X509FileType`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `PEM`: 0 bytes
print-type-size     variant `ASN1`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `std::option::Option<ssl::SslMethod>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `crypto::hash::State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Reset`: 0 bytes
print-type-size     variant `Updated`: 0 bytes
print-type-size     variant `Finalized`: 0 bytes
print-type-size type: `crypto::hash::Type`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `MD5`: 0 bytes
print-type-size     variant `SHA1`: 0 bytes
print-type-size     variant `SHA224`: 0 bytes
print-type-size     variant `SHA256`: 0 bytes
print-type-size     variant `SHA384`: 0 bytes
print-type-size     variant `SHA512`: 0 bytes
print-type-size     variant `RIPEMD160`: 0 bytes
print-type-size type: `crypto::hmac::State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Reset`: 0 bytes
print-type-size     variant `Updated`: 0 bytes
print-type-size     variant `Finalized`: 0 bytes
print-type-size type: `crypto::pkey::EncryptionPadding`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `OAEP`: 0 bytes
print-type-size     variant `PKCS1v15`: 0 bytes
print-type-size type: `crypto::pkey::Parts`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Neither`: 0 bytes
print-type-size     variant `Public`: 0 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size type: `crypto::pkey::Role`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Encrypt`: 0 bytes
print-type-size     variant `Decrypt`: 0 bytes
print-type-size     variant `Sign`: 0 bytes
print-type-size     variant `Verify`: 0 bytes
print-type-size type: `crypto::symm::Mode`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Encrypt`: 0 bytes
print-type-size     variant `Decrypt`: 0 bytes
print-type-size type: `crypto::symm::Type`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `AES_128_ECB`: 0 bytes
print-type-size     variant `AES_128_CBC`: 0 bytes
print-type-size     variant `AES_128_CFB1`: 0 bytes
print-type-size     variant `AES_128_CFB128`: 0 bytes
print-type-size     variant `AES_128_CFB8`: 0 bytes
print-type-size     variant `AES_256_ECB`: 0 bytes
print-type-size     variant `AES_256_CBC`: 0 bytes
print-type-size     variant `AES_256_CFB1`: 0 bytes
print-type-size     variant `AES_256_CFB128`: 0 bytes
print-type-size     variant `AES_256_CFB8`: 0 bytes
print-type-size     variant `DES_CBC`: 0 bytes
print-type-size     variant `DES_ECB`: 0 bytes
print-type-size     variant `RC4_128`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `ssl::SslMethod`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Sslv23`: 0 bytes
print-type-size     variant `Tlsv1`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::iter::Repeat<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.element`: 1 bytes
print-type-size type: `std::option::Option<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/ssl/mod.rs:57:24: 67:10]>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `x509::extension::AltNameOption`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Email`: 0 bytes
print-type-size     variant `DNS`: 0 bytes
print-type-size     variant `Directory`: 0 bytes
print-type-size     variant `URI`: 0 bytes
print-type-size     variant `IPAddress`: 0 bytes
print-type-size     variant `RegisteredID`: 0 bytes
print-type-size type: `x509::extension::KeyUsageOption`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `DigitalSignature`: 0 bytes
print-type-size     variant `NonRepudiation`: 0 bytes
print-type-size     variant `KeyEncipherment`: 0 bytes
print-type-size     variant `DataEncipherment`: 0 bytes
print-type-size     variant `KeyAgreement`: 0 bytes
print-type-size     variant `KeyCertSign`: 0 bytes
print-type-size     variant `CRLSign`: 0 bytes
print-type-size     variant `EncipherOnly`: 0 bytes
print-type-size     variant `DecipherOnly`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/bn/mod.rs:324:39: 324:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/bn/mod.rs:325:39: 325:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/ssl/mod.rs:57:24: 67:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:109:39: 109:89]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/extension.rs:113:39: 113:89]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/mod.rs:368:56: 368:72]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.7.14/src/x509/mod.rs:369:55: 369:89]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `bitflags::<unnamed>::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `ssl::INDEXES`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `ssl::SSL_INDEXES`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::string::String, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(x509::extension::AltNameOption, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ssl::error::OpenSslError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ssl::error::OpensslError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&x509::extension::ExtKeyUsageOption>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&x509::extension::KeyUsageOption>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, i32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(x509::extension::AltNameOption, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(x509::extension::ExtensionType, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut std::sync::once::Waiter>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<ssl::bio::BioMethod>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ssl::error::OpenSslError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ssl::error::OpensslError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::TcpStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<x509::extension::ExtKeyUsageOption>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<x509::extension::Extension>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<x509::extension::KeyUsageOption>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::InternalNode<std::string::String, value::Value>`: 728 bytes, alignment: 8 bytes
print-type-size     field `.data`: 632 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<std::string::String, value::Value>`: 632 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 352 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `value::MapDeserializer`: 128 bytes, alignment: 8 bytes
print-type-size     field `.de`: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.value`: 40 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, value::Value, collections::btree::node::marker::Internal>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 96 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 32 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, value::Value, collections::btree::node::marker::Leaf>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 96 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 32 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `core::str::MatchIndices<&str>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.0`: 104 bytes
print-type-size type: `core::str::MatchIndicesInternal<&str>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.0`: 104 bytes
print-type-size type: `core::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `core::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::iter::Skip<core::str::Split<char>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `value::VariantDeserializer`: 88 bytes, alignment: 8 bytes
print-type-size     field `.de`: 8 bytes
print-type-size     field `.val`: 40 bytes
print-type-size     field `.variant`: 40 bytes
print-type-size type: `core::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::btree_map::Entry<std::string::String, value::Value>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, value::Value>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<std::string::String, value::Value>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `core::result::Result<&str, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<(), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<bool, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<core::option::Option<(std::string::String, value::Value)>, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<core::option::Option<std::string::String>, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<core::option::Option<u8>, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<core::option::Option<value::Value>, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<ser::State, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<std::collections::BTreeMap<std::string::String, value::Value>, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<std::string::String, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<std::vec::Vec<value::Value>, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<u16, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 62 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<u8, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<value::MapState, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<value::StructVariantState, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<value::TupleVariantState, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::result::Result<value::Value, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::collections::btree_map::Range<std::string::String, value::Value>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<std::string::String, value::Value>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `core::option::Option<(std::string::String, value::Value)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `core::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `error::Error`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Syntax`: 48 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.2`: 8 bytes
print-type-size     variant `Io`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `de::DeserializerImpl<read::StrRead>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.read`: 24 bytes
print-type-size     field `.str_buf`: 24 bytes
print-type-size type: `value::MapState`: 48 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size     field `.next_key`: 24 bytes
print-type-size type: `value::SeqDeserializer`: 48 bytes, alignment: 8 bytes
print-type-size     field `.de`: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `value::StructVariantState`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `value::TupleVariantState`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::option::Option<value::Value>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, &mut collections::btree::node::Root<std::string::String, value::Value>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<std::string::String, value::Value>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `value::Deserializer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `error::ErrorCode`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Custom`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidType`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidValue`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidLength`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `UnknownVariant`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnknownField`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MissingField`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `EOFWhileParsingList`: 0 bytes
print-type-size     variant `EOFWhileParsingObject`: 0 bytes
print-type-size     variant `EOFWhileParsingString`: 0 bytes
print-type-size     variant `EOFWhileParsingValue`: 0 bytes
print-type-size     variant `ExpectedColon`: 0 bytes
print-type-size     variant `ExpectedListCommaOrEnd`: 0 bytes
print-type-size     variant `ExpectedObjectCommaOrEnd`: 0 bytes
print-type-size     variant `ExpectedSomeIdent`: 0 bytes
print-type-size     variant `ExpectedSomeValue`: 0 bytes
print-type-size     variant `InvalidEscape`: 0 bytes
print-type-size     variant `InvalidNumber`: 0 bytes
print-type-size     variant `NumberOutOfRange`: 0 bytes
print-type-size     variant `InvalidUnicodeCodePoint`: 0 bytes
print-type-size     variant `KeyMustBeAString`: 0 bytes
print-type-size     variant `LoneLeadingSurrogateInHexEscape`: 0 bytes
print-type-size     variant `TrailingCharacters`: 0 bytes
print-type-size     variant `UnexpectedEndOfHexEscape`: 0 bytes
print-type-size type: `serde::de::value::Error`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Custom`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidType`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidLength`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `InvalidValue`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `EndOfStream`: 0 bytes
print-type-size     variant `UnknownVariant`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnknownField`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MissingField`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::vec::IntoIter<value::Value>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `value::Serializer`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `value::Value`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Object`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `builder::ArrayBuilder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.array`: 24 bytes
print-type-size type: `builder::ObjectBuilder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.object`: 24 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, value::Value, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::iter::Enumerate<core::slice::Iter<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::iter::Enumerate<core::slice::Iter<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<&str, core::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<&str, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::option::Option<u8>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `read::SliceRead`: 24 bytes, alignment: 8 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `read::StrRead`: 24 bytes, alignment: 8 bytes
print-type-size     field `.delegate`: 24 bytes
print-type-size type: `ser::PrettyFormatter`: 24 bytes, alignment: 8 bytes
print-type-size     field `.current_indent`: 8 bytes
print-type-size     field `.indent`: 16 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, value::Value>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<value::Value>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<value::Value>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `collections::btree::node::Root<std::string::String, value::Value>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `core::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::iter::Cloned<core::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<isize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<(&std::string::String, &value::Value)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<usize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Iter<core::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Iter<value::Value>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<collections::btree::node::BoxedNode<std::string::String, value::Value>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<value::Value>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `de::MapVisitor<read::StrRead>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.de`: 8 bytes
print-type-size     field `.first`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `de::SeqVisitor<read::StrRead>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.de`: 8 bytes
print-type-size     field `.first`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `dtoa::diyfp::DiyFp<u64, isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.e`: 8 bytes
print-type-size type: `read::Position`: 16 bytes, alignment: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.column`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-0.8.3/src/read.rs:376:18: 376:69 read:&&read::SliceRead]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-0.8.3/src/value.rs:182:54: 182:69 list:&&std::vec::Vec<value::Value>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut core::iter::Enumerate<core::slice::Iter<std::string::String>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut core::iter::Enumerate<core::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6993) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[21]::next[0]::{{closure}}[0] } 0:&&mut core::str::MatchIndicesInternal<&str>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<std::string::String, value::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<std::string::String, value::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const value::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&mut std::collections::BTreeMap<std::string::String, value::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&mut std::vec::Vec<value::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&std::collections::BTreeMap<std::string::String, value::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&std::vec::Vec<value::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<&value::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `core::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::ptr::Shared<value::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<collections::btree::node::LeafNode<std::string::String, value::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<value::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::result::Result<char, core::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `ser::MapKeySerializer<&mut value::WriterFormatter, ser::CompactFormatter>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ser`: 8 bytes
print-type-size type: `ser::Serializer<&mut value::WriterFormatter>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.writer`: 8 bytes
print-type-size     field `.formatter`: 0 bytes
print-type-size type: `value::WriterFormatter`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `core::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `core::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `ser::State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `First`: 0 bytes
print-type-size     variant `Rest`: 0 bytes
print-type-size type: `serde::de::Type`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size     variant `Usize`: 0 bytes
print-type-size     variant `U8`: 0 bytes
print-type-size     variant `U16`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `U64`: 0 bytes
print-type-size     variant `Isize`: 0 bytes
print-type-size     variant `I8`: 0 bytes
print-type-size     variant `I16`: 0 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `I64`: 0 bytes
print-type-size     variant `F32`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `String`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `Option`: 0 bytes
print-type-size     variant `Seq`: 0 bytes
print-type-size     variant `Map`: 0 bytes
print-type-size     variant `UnitStruct`: 0 bytes
print-type-size     variant `NewtypeStruct`: 0 bytes
print-type-size     variant `TupleStruct`: 0 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size     variant `FieldName`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size     variant `VariantName`: 0 bytes
print-type-size     variant `StructVariant`: 0 bytes
print-type-size     variant `TupleVariant`: 0 bytes
print-type-size     variant `UnitVariant`: 0 bytes
print-type-size     variant `Bytes`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `<value::Value as serde::Deserialize>::deserialize::ValueVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-0.8.3/src/read.rs:331:48: 335:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-0.8.3/src/value.rs:503:54: 503:68]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-0.8.3/src/value.rs:513:54: 513:68]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1723) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::unwrap_unchecked[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1786) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1793) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Immut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Mut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&core::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut (std::string::String, value::Value)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&value::Value>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<collections::btree::node::LeafNode<std::string::String, value::Value>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<std::collections::BTreeMap<std::string::String, value::Value>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<std::vec::Vec<value::Value>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<value::Value>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `ser::CompactFormatter`: 0 bytes, alignment: 1 bytes
print-type-size type: `serde::de::impls::BTreeMapVisitor<std::string::String, value::Value>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `serde::de::impls::StringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `serde::de::impls::UnitVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `serde::de::impls::VecVisitor<value::Value>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::arc::ArcInner<futures::sync::oneshot::Inner<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>`: 272 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 256 bytes
print-type-size type: `futures::sync::oneshot::Inner<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.complete`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 120 bytes, alignment: 8 bytes
print-type-size     field `.rx_task`: 64 bytes
print-type-size     field `.tx_task`: 64 bytes
print-type-size type: `std::rc::RcBox<std::cell::RefCell<reactor::Inner>>`: 240 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 224 bytes
print-type-size type: `std::cell::RefCell<reactor::Inner>`: 224 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 216 bytes
print-type-size type: `futures::stream::AndThen<net::tcp::TcpListener::incoming::MyIncoming, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:122:36: 132:14 remote:reactor::Remote], futures::Then<futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]>>`: 216 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 64 bytes
print-type-size     field `.future`: 128 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `reactor::Inner`: 216 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.io`: 24 bytes
print-type-size     field `.io_dispatch`: 40 bytes
print-type-size     field `.task_dispatch`: 40 bytes
print-type-size     field `.timer_heap`: 64 bytes
print-type-size     field `.timeouts`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<reactor::Inner>`: 216 bytes, alignment: 8 bytes
print-type-size     field `.value`: 216 bytes
print-type-size type: `std::option::Option<slab::Slot<reactor::ScheduledIo>>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `slab::Slot<reactor::ScheduledIo>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Filled`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `std::option::Option<<futures::Then<futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]> as futures::IntoFuture>::Future>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::option::Option<futures::Then<futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]>>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::result::Result<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), futures::FutureResult<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, std::io::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `futures::Then<futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.state`: 120 bytes
print-type-size type: `futures::future::chain::Chain<futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, <std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error> as futures::IntoFuture>::Future, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `First`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 0 bytes
print-type-size     variant `Second`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `futures::future::chain::Chain<futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, futures::FutureResult<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `First`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 0 bytes
print-type-size     variant `Second`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `futures::lock::Lock<std::option::Option<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.locked`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 112 bytes, alignment: 8 bytes
print-type-size type: `reactor::ScheduledIo`: 120 bytes, alignment: 8 bytes
print-type-size     field `.readiness`: 8 bytes
print-type-size     field `.reader`: 56 bytes
print-type-size     field `.writer`: 56 bytes
print-type-size type: `std::option::Option<reactor::ScheduledIo>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), futures::FutureResult<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size type: `std::result::Result<futures::Async<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, futures::Canceled>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `futures::Async<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ready`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `NotReady`: 0 bytes
print-type-size type: `futures::FutureResult<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 112 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::option::Option<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `std::result::Result<futures::Async<std::option::Option<(net::tcp::TcpStream, std::net::SocketAddr)>>, std::io::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::Core, std::io::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>, futures::Canceled>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `futures::Async<std::option::Option<(net::tcp::TcpStream, std::net::SocketAddr)>>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ready`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `NotReady`: 0 bytes
print-type-size type: `reactor::Core`: 104 bytes, alignment: 8 bytes
print-type-size     field `.events`: 24 bytes
print-type-size     field `.tx`: 16 bytes
print-type-size     field `.rx`: 32 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `._future_registration`: 16 bytes
print-type-size     field `.future_readiness`: 8 bytes
print-type-size type: `std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<futures::Async<(net::tcp::TcpStream, std::net::SocketAddr)>, std::io::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:553:31: 560:14 self:&&reactor::Remote, f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:525:24: 546:10 msg:reactor::Message, self:&&reactor::Remote]]`: 96 bytes, alignment: 8 bytes
print-type-size     end padding: 96 bytes
print-type-size type: `futures::Async<(net::tcp::TcpStream, std::net::SocketAddr)>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ready`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `mpsc_queue::Node<reactor::Message>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<(net::tcp::TcpStream, std::net::SocketAddr)>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::option::Option<slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<slab::Slot<reactor::ScheduledTask>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::result::Result<std::option::Option<reactor::Message>, std::io::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:525:24: 546:10 msg:reactor::Message, self:&&reactor::Remote]`: 88 bytes, alignment: 8 bytes
print-type-size     end padding: 88 bytes
print-type-size type: `futures::AndThen<futures::FutureResult<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>, std::io::Error>, net::tcp::TcpStreamConnect, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:230:37: 232:10]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.state`: 88 bytes
print-type-size type: `futures::future::chain::Chain<futures::FutureResult<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>, std::io::Error>, <net::tcp::TcpStreamConnect as futures::IntoFuture>::Future, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:230:37: 232:10]>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `First`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size         field `.1`: 0 bytes
print-type-size     variant `Second`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `futures::future::chain::Chain<futures::FutureResult<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>, std::io::Error>, net::tcp::TcpStreamConnect, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:230:37: 232:10]>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `First`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size         field `.1`: 0 bytes
print-type-size     variant `Second`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `mpsc_queue::PopResult<reactor::Message>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Data`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Inconsistent`: 0 bytes
print-type-size type: `slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Filled`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `slab::Slot<reactor::ScheduledTask>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Filled`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `std::option::Option<(std::option::Option<heap::Slot>, reactor::TimeoutState)>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::option::Option<reactor::Message>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `futures::FutureResult<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>, std::io::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `reactor::Message`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `DropSource`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Schedule`: 65 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 56 bytes
print-type-size         field `.2`: 1 bytes
print-type-size     variant `UpdateTimeout`: 64 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 56 bytes
print-type-size     variant `ResetTimeout`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `CancelTimeout`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Run`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `reactor::ScheduledTask`: 80 bytes, alignment: 8 bytes
print-type-size     field `._registration`: 16 bytes
print-type-size     field `.spawn`: 56 bytes
print-type-size     field `.wake`: 8 bytes
print-type-size type: `std::option::Option<reactor::ScheduledTask>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::option::Option<std::result::Result<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>, std::io::Error>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::result::Result<std::result::Result<net::tcp::TcpStream, net::tcp::TcpStreamConnect>, std::io::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `mio::poll::ReadinessNode`: 72 bytes, alignment: 8 bytes
print-type-size     field `.next_all_nodes`: 8 bytes
print-type-size     field `.prev_all_nodes`: 8 bytes
print-type-size     field `.registration_data`: 24 bytes
print-type-size     field `.next_readiness`: 8 bytes
print-type-size     field `.events`: 8 bytes
print-type-size     field `.queued`: 8 bytes
print-type-size     field `.ref_count`: 8 bytes
print-type-size type: `std::result::Result<futures::Async<net::tcp::TcpStream>, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<futures::Async<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>>, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<futures::Async<std::option::Option<(mio::tcp::TcpStream, std::net::SocketAddr)>>, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<net::tcp::TcpListener, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<net::tcp::TcpStream, net::tcp::TcpStreamConnect>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::result::Result<net::udp::UdpSocket, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::interval::Interval, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::poll_evented::PollEvented<mio::tcp::TcpListener>, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::poll_evented::PollEvented<mio::udp::UdpSocket>, std::io::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `futures::Async<net::tcp::TcpStream>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ready`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `futures::Async<reactor::poll_evented::PollEvented<mio::tcp::TcpStream>>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ready`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `futures::Async<std::option::Option<(mio::tcp::TcpStream, std::net::SocketAddr)>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ready`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `NotReady`: 0 bytes
print-type-size type: `futures::lock::Lock<std::option::Option<futures::task::Task>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.locked`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 56 bytes, alignment: 8 bytes
print-type-size type: `heap::Heap<(std::time::Instant, usize)>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.index`: 40 bytes
print-type-size type: `net::tcp::TcpListener`: 64 bytes, alignment: 8 bytes
print-type-size     field `.io`: 64 bytes
print-type-size type: `net::tcp::TcpListener::incoming::MyIncoming`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `net::tcp::TcpStream`: 64 bytes, alignment: 8 bytes
print-type-size     field `.io`: 64 bytes
print-type-size type: `net::tcp::TcpStreamConnect`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Waiting`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `net::udp::UdpSocket`: 64 bytes, alignment: 8 bytes
print-type-size     field `.io`: 64 bytes
print-type-size type: `reactor::TimeoutState`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NotFired`: 0 bytes
print-type-size     variant `Fired`: 0 bytes
print-type-size     variant `Waiting`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `reactor::interval::Interval`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size     field `.next`: 16 bytes
print-type-size     field `.interval`: 16 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size type: `reactor::poll_evented::PollEvented<mio::tcp::TcpListener>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 16 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.readiness`: 8 bytes
print-type-size     field `.io`: 16 bytes
print-type-size type: `reactor::poll_evented::PollEvented<mio::tcp::TcpStream>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 16 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.readiness`: 8 bytes
print-type-size     field `.io`: 16 bytes
print-type-size type: `reactor::poll_evented::PollEvented<mio::udp::UdpSocket>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 16 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.readiness`: 8 bytes
print-type-size     field `.io`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:124:30: 130:18 tcp:mio::tcp::TcpStream, addr:std::net::SocketAddr, tx:futures::Sender<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>]`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:579:41: 582:10 f:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:124:30: 130:18 tcp:mio::tcp::TcpStream, addr:std::net::SocketAddr, tx:futures::Sender<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>]]`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `alloc::arc::ArcInner<mio::channel::Inner>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 40 bytes
print-type-size type: `futures::task::Spawn<Box<futures::Future<Error=(), Item=()> + 'static>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `futures::task::Spawn<Box<futures::Future<Error=(), Item=()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `futures::task::Task`: 56 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.unpark`: 16 bytes
print-type-size     field `.events`: 32 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<futures::task::Task>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::option::Option<(mio::tcp::TcpStream, std::net::SocketAddr)>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<futures::task::Spawn<Box<futures::Future<Error=(), Item=()> + 'static>>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::option::Option<futures::task::Spawn<Box<futures::Future<Error=(), Item=()>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::option::Option<futures::task::Task>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(mio::tcp::TcpStream, std::net::SocketAddr), std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::timeout::Timeout, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<(usize, std::net::SocketAddr)>, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<mio::poll::ReadinessQueueInner>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `reactor::timeout::Timeout`: 48 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size     field `.when`: 16 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(usize, std::net::SocketAddr)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<(usize, std::net::SocketAddr), std::io::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<std::vec::Vec<u8>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `log::LogLocation`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__module_path`: 16 bytes
print-type-size     field `.__file`: 16 bytes
print-type-size     field `.__line`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `mio::channel::Inner`: 40 bytes, alignment: 8 bytes
print-type-size     field `.pending`: 8 bytes
print-type-size     field `.senders`: 8 bytes
print-type-size     field `.set_readiness`: 24 bytes
print-type-size type: `slab::Slab<(std::option::Option<heap::Slot>, reactor::TimeoutState)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 24 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `slab::Slab<reactor::ScheduledIo>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 24 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `slab::Slab<reactor::ScheduledTask>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 24 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `slab::Slab<usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 24 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<((std::time::Instant, usize), usize)>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::net::SocketAddr, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::vec::Drain<u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:125:65: 127:22 addr:std::net::SocketAddr]`: 32 bytes, alignment: 4 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::arc::ArcInner<mpsc_queue::Queue<reactor::Message>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<reactor::MySetReadiness>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size type: `futures::task_impl::Events`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Lots`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `mio::poll::ReadinessQueueInner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.awakener`: 8 bytes
print-type-size     field `.head_all_nodes`: 8 bytes
print-type-size     field `.head_readiness`: 8 bytes
print-type-size     field `.sleep_token`: 8 bytes
print-type-size type: `reactor::Handle`: 32 bytes, alignment: 8 bytes
print-type-size     field `.remote`: 24 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `reactor::channel::Receiver<reactor::Message>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctl`: 24 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<mio::poll::ReadinessQueueInner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, Box<futures::task_impl::data::Opaque>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `std::option::Option<(std::time::Instant, usize)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<mio::Poll, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<std::io::Error>, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 28 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:122:36: 132:14 remote:reactor::Remote]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(2869) => futures/f793441d280f1962779ea47d44f512b9::task_impl[0]::set[0]::{{closure}}[0] } 0:&&futures::task::Task, 1:&&std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>, 2:[closure@DefId { krate: CrateNum(12), node: DefIndex(2980) => futures/f793441d280f1962779ea47d44f512b9::task_impl[0]::{{impl}}[7]::enter[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(12), node: DefIndex(2948) => futures/f793441d280f1962779ea47d44f512b9::task_impl[0]::{{impl}}[5]::poll_future[0]::{{closure}}[0] }], 1:&mut &mut Box<futures::Future<Error=(), Item=()>>]]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `futures::Err<net::tcp::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._t`: 0 bytes
print-type-size     field `.e`: 24 bytes
print-type-size type: `futures::task::UnparkEvent`: 24 bytes, alignment: 8 bytes
print-type-size     field `.set`: 16 bytes
print-type-size     field `.item`: 8 bytes
print-type-size type: `io::frame::EasyBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `lazycell::AtomicLazyCell<mio::SetReadiness>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.state`: 8 bytes
print-type-size type: `mio::Events`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `mio::Poll`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.selector`: 16 bytes
print-type-size     field `.readiness_queue`: 8 bytes
print-type-size type: `mio::channel::ReceiverCtl`: 24 bytes, alignment: 8 bytes
print-type-size     field `.registration`: 16 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `mio::poll::RegistrationData`: 24 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size     field `.interest`: 8 bytes
print-type-size     field `.opts`: 8 bytes
print-type-size type: `mio::sys::unix::epoll::Events`: 24 bytes, alignment: 8 bytes
print-type-size     field `.events`: 24 bytes
print-type-size type: `reactor::Remote`: 24 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.tx`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<mio::poll::RegistrationData>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(*const futures::task::Task, *const std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<futures::task_impl::data::Opaque>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<((std::time::Instant, usize), usize)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, Box<futures::task_impl::data::Opaque>)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<mio::Event>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::Slot<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(*const futures::task::Task, *const std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::time::Duration>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(std::sync::Arc<std::sync::atomic::AtomicUsize>, usize), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<bool, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<futures::Async<()>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<futures::Async<std::option::Option<()>>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<mio::tcp::TcpListener, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<mio::tcp::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<mio::udp::UdpSocket, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::io_token::IoToken, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<reactor::timeout_token::TimeoutToken, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<u32>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<usize>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u32, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::thread::Key<std::cell::Cell<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.dtor_registered`: 1 bytes
print-type-size     field `.dtor_running`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::vec::Vec<((std::time::Instant, usize), usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<futures::task::UnparkEvent>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<nix::sys::epoll::EpollEvent>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<slab::Slot<reactor::ScheduledIo>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<slab::Slot<reactor::ScheduledTask>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<slab::Slot<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `<scoped_tls::ScopedKey<T>>::set::Reset`: 16 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.val`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:340:42: 340:67 task:&mut futures::task::Spawn<Box<futures::Future<Error=(), Item=()>>>, wake:std::sync::Arc<reactor::MySetReadiness>]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::arc::ArcInner<futures::task::EventSet>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::arc::ArcInner<futures::task::Unpark>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<((std::time::Instant, usize), usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<futures::task::UnparkEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<nix::sys::epoll::EpollEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<slab::Slot<reactor::ScheduledIo>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<slab::Slot<reactor::ScheduledTask>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<slab::Slot<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::task::EventSet + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::task::EventSet>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::task::Unpark + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::task::Unpark>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::slice::Repr<((std::time::Instant, usize), usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<futures::task::UnparkEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<nix::sys::epoll::EpollEvent>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<slab::Slot<reactor::ScheduledIo>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<slab::Slot<reactor::ScheduledTask>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<slab::Slot<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `futures::task_impl::set::Reset`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `io::frame::EasyBufMut`: 16 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `lazycell::LazyCell<mio::Registration>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `libc::unix::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `mio::Event`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size type: `mio::Registration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `mio::SetReadiness`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `mio::poll::RegistrationInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.queue`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `mio::sys::unix::epoll::Selector`: 16 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.epfd`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `mio::tcp::TcpListener`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.selector_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `mio::tcp::TcpStream`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.selector_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `mio::udp::UdpSocket`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sys`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.selector_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `mpsc_queue::Queue<reactor::Message>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size type: `net::tcp::Incoming`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `net::tcp::TcpStreamNew`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `reactor::MySetReadiness`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `reactor::channel::Sender<reactor::Message>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ctl`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `reactor::io_token::IoToken`: 16 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size     field `.readiness`: 8 bytes
print-type-size type: `slab::Entry<(std::option::Option<heap::Slot>, reactor::TimeoutState), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `slab::Entry<reactor::ScheduledIo, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `slab::Entry<reactor::ScheduledTask, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `slab::Entry<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `slab::Slot<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Filled`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `slab::VacantEntry<(std::option::Option<heap::Slot>, reactor::TimeoutState), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `slab::VacantEntry<reactor::ScheduledIo, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `slab::VacantEntry<reactor::ScheduledTask, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `slab::VacantEntry<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.slab`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::cell::Cell<(*const futures::task::Task, *const std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Ref<reactor::Inner>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<reactor::Inner>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<(*const futures::task::Task, *const std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<mio::Registration>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<mio::SetReadiness>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<usize>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, Box<futures::task_impl::data::Opaque>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, fn(usize) -> slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)> {slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>::Empty}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, fn(usize) -> slab::Slot<reactor::ScheduledIo> {slab::Slot<reactor::ScheduledIo>::Empty}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, fn(usize) -> slab::Slot<reactor::ScheduledTask> {slab::Slot<reactor::ScheduledTask>::Empty}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, fn(usize) -> slab::Slot<usize> {slab::Slot<usize>::Empty}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::net::SocketAddrV4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &((std::time::Instant, usize), usize))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<heap::Slot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<mio::Registration>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<mio::SetReadiness>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::Entry<(std::option::Option<heap::Slot>, reactor::TimeoutState), usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::Entry<reactor::ScheduledIo, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::Entry<reactor::ScheduledTask, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::Entry<usize, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::VacantEntry<(std::option::Option<heap::Slot>, reactor::TimeoutState), usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::VacantEntry<reactor::ScheduledIo, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::VacantEntry<reactor::ScheduledTask, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<slab::VacantEntry<usize, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::task::EventSet + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::task::EventSet>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::task::Unpark + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::task::Unpark>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<std::cell::Ref<reactor::Inner>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<reactor::Inner>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<((std::time::Instant, usize), usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Arc<futures::task::EventSet + 'static>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<futures::task::EventSet>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<futures::task::Unpark + 'static>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<futures::task::Unpark>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sys::imp::time::Timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::sys::imp::time::inner::Instant`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(*const futures::task::Task, *const std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::Instant`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `nix::sys::epoll::EpollEvent`: 12 bytes, alignment: 1 bytes
print-type-size     field `.events`: 4 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/interval.rs:95:19: 95:63 dur:&std::time::Duration]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:247:69: 253:10 start:&std::time::Instant]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:283:41: 283:64 self:&&mut reactor::Core]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/reactor/mod.rs:380:33: 380:51 handle:&futures::task::Task]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(2980) => futures/f793441d280f1962779ea47d44f512b9::task_impl[0]::{{impl}}[7]::enter[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(12), node: DefIndex(2948) => futures/f793441d280f1962779ea47d44f512b9::task_impl[0]::{{impl}}[5]::poll_future[0]::{{closure}}[0] }], 1:&mut &mut Box<futures::Future<Error=(), Item=()>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<((std::time::Instant, usize), usize)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(23), node: DefIndex(30) => scoped_tls/f76bc314147f04abbaf0731aa39ce4fe::{{impl}}[1]::set[0]::{{closure}}[0] } 0:&&reactor::Core]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ((std::time::Instant, usize), usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<futures::sync::oneshot::Inner<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<mio::channel::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<mpsc_queue::Queue<reactor::Message>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<reactor::MySetReadiness>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<mio::poll::ReadinessQueueInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const futures::task::UnparkEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const nix::sys::epoll::EpollEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const slab::Slot<reactor::ScheduledIo>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const slab::Slot<reactor::ScheduledTask>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const slab::Slot<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::rc::RcBox<std::cell::RefCell<reactor::Inner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `futures::Sender<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `futures::lock::TryLock<std::option::Option<futures::task::Task>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__ptr`: 8 bytes
print-type-size type: `futures::lock::TryLock<std::option::Option<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__ptr`: 8 bytes
print-type-size type: `heap::Slot`: 8 bytes, alignment: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `log::LogLevel`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `log::LogLevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `mio::PollOpt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `mio::Ready`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `mio::Token`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `mio::channel::SenderCtl`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `mio::net::SelectorId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `mio::poll::ReadinessQueue`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `mio::poll::ReadyRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `mio::sys::unix::awakener::pipe::Awakener`: 8 bytes, alignment: 4 bytes
print-type-size     field `.reader`: 4 bytes
print-type-size     field `.writer`: 4 bytes
print-type-size type: `reactor::timeout_token::TimeoutToken`: 8 bytes, alignment: 8 bytes
print-type-size     field `.token`: 8 bytes
print-type-size type: `scoped_tls::ScopedKey<reactor::Core>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut mio::poll::ReadinessNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut mpsc_queue::Node<reactor::Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&((std::time::Instant, usize), usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::time::Instant, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut (std::option::Option<heap::Slot>, reactor::TimeoutState)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut futures::Then<futures::Receiver<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>, std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut reactor::ScheduledIo>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut reactor::ScheduledTask>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&reactor::Core>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&reactor::ScheduledTask>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(*const futures::task::Task, *const std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(*const futures::task::Task, *const std::cell::RefCell<std::collections::HashMap<std::any::TypeId, Box<futures::task_impl::data::Opaque>, std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>>>)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<usize>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<Box<mio::poll::ReadinessNode>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<futures::lock::TryLock<std::option::Option<futures::task::Task>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<futures::lock::TryLock<std::option::Option<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::RefCell<reactor::Inner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<futures::sync::oneshot::Inner<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<mio::channel::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<mpsc_queue::Queue<reactor::Message>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<reactor::MySetReadiness>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<mio::poll::ReadinessQueueInner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::rc::RcBox<std::cell::RefCell<reactor::Inner>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<((std::time::Instant, usize), usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<futures::task::UnparkEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<nix::sys::epoll::EpollEvent>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<slab::Slot<reactor::ScheduledIo>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<slab::Slot<reactor::ScheduledTask>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<slab::Slot<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::rc::Rc<std::cell::RefCell<reactor::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::rc::Weak<std::cell::RefCell<reactor::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<futures::sync::oneshot::Inner<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<mio::channel::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<mpsc_queue::Queue<reactor::Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<reactor::MySetReadiness>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<mio::poll::ReadinessQueueInner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::atomic::AtomicUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<mio::poll::ReadinessNode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<mpsc_queue::Node<reactor::Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `mio::deprecated::PipeReader`: 4 bytes, alignment: 4 bytes
print-type-size     field `.io`: 4 bytes
print-type-size type: `mio::deprecated::PipeWriter`: 4 bytes, alignment: 4 bytes
print-type-size     field `.io`: 4 bytes
print-type-size type: `mio::deprecated::unix::Io`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `mio::sys::unix::tcp::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `mio::sys::unix::tcp::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `mio::sys::unix::udp::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.io`: 4 bytes
print-type-size type: `nix::sys::epoll::EpollEventKind`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::net::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::net::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys_common::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::net::UdpSocket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `futures::Async<std::option::Option<()>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ready`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `NotReady`: 0 bytes
print-type-size type: `futures::FutureResult<(), ()>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::result::Result<(), ()>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<futures::Async<()>, ()>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `futures::Async<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ready`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `NotReady`: 0 bytes
print-type-size type: `reactor::Direction`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Read`: 0 bytes
print-type-size     variant `Write`: 0 bytes
print-type-size type: `std::cell::Cell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::net::Shutdown`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Read`: 0 bytes
print-type-size     variant `Write`: 0 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), ()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/heap.rs:57:31: 57:39]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:131:25: 131:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:230:37: 232:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(175) => futures/f793441d280f1962779ea47d44f512b9::future[0]::and_then[0]::{{impl}}[0]::poll[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(178) => futures/f793441d280f1962779ea47d44f512b9::future[0]::and_then[0]::{{impl}}[0]::poll[0]::{{closure}}[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.1/src/net/tcp.rs:230:37: 232:10]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(2948) => futures/f793441d280f1962779ea47d44f512b9::task_impl[0]::{{impl}}[5]::poll_future[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(437) => futures/f793441d280f1962779ea47d44f512b9::future[0]::then[0]::{{impl}}[0]::poll[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(23), node: DefIndex(40) => scoped_tls/f76bc314147f04abbaf0731aa39ce4fe::{{impl}}[1]::with[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(23), node: DefIndex(44) => scoped_tls/f76bc314147f04abbaf0731aa39ce4fe::{{impl}}[1]::is_set[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4414) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[61]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(5), node: DefIndex(726) => alloc/8a732dca6b5bfa0e664f890723f35836::rc[0]::RcBoxPtr[0]::inc_strong[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(5), node: DefIndex(733) => alloc/8a732dca6b5bfa0e664f890723f35836::rc[0]::RcBoxPtr[0]::inc_weak[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `futures::Canceled`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::BuildHasherDefault<futures::task_impl::data::IdHasher>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&((std::time::Instant, usize), usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<((std::time::Instant, usize), usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<futures::task_impl::data::Opaque + 'static>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<futures::task_impl::data::Opaque>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::sync::oneshot::Inner<std::result::Result<(net::tcp::TcpStream, std::net::SocketAddr), std::io::Error>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::task::EventSet + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::task::EventSet>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::task::Unpark + 'static>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<futures::task::Unpark>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<mio::channel::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<mpsc_queue::Queue<reactor::Message>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<reactor::MySetReadiness>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<mio::poll::ReadinessQueueInner>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::atomic::AtomicUsize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::vec::Vec<u8>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<futures::task::UnparkEvent>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<futures::task_impl::data::IdHasher>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<net::tcp::TcpStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<nix::sys::epoll::EpollEvent>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<reactor::Core>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<slab::Slot<(std::option::Option<heap::Slot>, reactor::TimeoutState)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<slab::Slot<reactor::ScheduledIo>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<slab::Slot<reactor::ScheduledTask>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<slab::Slot<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::cell::Cell<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::RefCell<reactor::Inner>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Zip<std::iter::Rev<std::slice::Iter<u32>>, std::iter::Rev<std::slice::Iter<u32>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<u32>, std::slice::IterMut<u32>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<u32>, std::slice::Iter<u32>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bigint::BigInt`: 32 bytes, alignment: 8 bytes
print-type-size     field `.sign`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::borrow::Cow<biguint::BigUint>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Map<std::slice::Chunks<u8>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:126:22: 128:18 bits:&usize]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::result::Result<biguint::BigUint, ParseBigIntError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `biguint::BigUint`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Chunks<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::IterMut<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<u32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.n`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&mut u32, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u32, &mut u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u32, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u64, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:121:32: 121:66 bits:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:126:22: 128:18 bits:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:127:48: 127:87 bits:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:138:32: 138:66 bits:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:172:32: 172:55 radix:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:190:37: 190:74 radix:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/biguint.rs:205:38: 205:75 radix:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::iter::Rev<std::slice::Iter<u32>>, std::iter::Rev<std::slice::Iter<u32>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:&u32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u32>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::iter::Repeat<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.element`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `ParseBigIntError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ParseInt`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `bigint::Sign`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Minus`: 0 bytes
print-type-size     variant `NoSign`: 0 bytes
print-type-size     variant `Plus`: 0 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/algorithms.rs:168:44: 168:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/algorithms.rs:188:44: 188:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/algorithms.rs:194:37: 194:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/algorithms.rs:194:60: 194:69]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/algorithms.rs:195:37: 195:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/num-bigint-0.1.35/src/algorithms.rs:195:60: 195:69]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(417) => std/8a732dca6b5bfa0e664f890723f35836::f64[0]::{{impl}}[0]::log2[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `core::str::MatchIndicesInternal<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::iter::Map<std::str::MatchIndices<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-verify-0.1.0/src/lib.rs:134:55: 134:65]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::str::MatchIndices<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `openssl_sys::_STACK`: 32 bytes, alignment: 8 bytes
print-type-size     field `.num`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.data`: 8 bytes, alignment: 8 bytes
print-type-size     field `.sorted`: 4 bytes
print-type-size     field `.num_alloc`: 4 bytes
print-type-size     field `.comp`: 8 bytes
print-type-size type: `openssl_sys::stack_st_GENERAL_NAME`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<openssl::x509::X509>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `openssl::x509::X509`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size     field `.handle`: 8 bytes
print-type-size     field `.owned`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::net::IpAddr, std::net::AddrParseError>`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::net::IpAddr`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `V6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-verify-0.1.0/src/lib.rs:120:63: 120:85 pattern:&&str, hostname:&&str]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `core::slice::Repr<u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `openssl::x509::GeneralNamesIter`: 16 bytes, alignment: 8 bytes
print-type-size     field `.names`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `openssl::x509::SslString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `openssl::x509::X509Name`: 16 bytes, alignment: 8 bytes
print-type-size     field `.x509`: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size type: `openssl_sys::GENERAL_NAME`: 16 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.d`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<openssl::x509::GeneralName>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<openssl::x509::GeneralNames>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<openssl::x509::SslString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6993) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[21]::next[0]::{{closure}}[0] } 0:&&mut core::str::MatchIndicesInternal<char>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `openssl::nid::Nid`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Undefined`: 0 bytes
print-type-size     variant `Rsadsi`: 0 bytes
print-type-size     variant `Pkcs`: 0 bytes
print-type-size     variant `MD2`: 0 bytes
print-type-size     variant `MD4`: 0 bytes
print-type-size     variant `MD5`: 0 bytes
print-type-size     variant `RC4`: 0 bytes
print-type-size     variant `RsaEncryption`: 0 bytes
print-type-size     variant `RSA_MD2`: 0 bytes
print-type-size     variant `RSA_MD5`: 0 bytes
print-type-size     variant `PBE_MD2_DES`: 0 bytes
print-type-size     variant `X500`: 0 bytes
print-type-size     variant `x509`: 0 bytes
print-type-size     variant `CN`: 0 bytes
print-type-size     variant `C`: 0 bytes
print-type-size     variant `L`: 0 bytes
print-type-size     variant `ST`: 0 bytes
print-type-size     variant `O`: 0 bytes
print-type-size     variant `OU`: 0 bytes
print-type-size     variant `RSA`: 0 bytes
print-type-size     variant `Pkcs7`: 0 bytes
print-type-size     variant `Pkcs7_data`: 0 bytes
print-type-size     variant `Pkcs7_signedData`: 0 bytes
print-type-size     variant `Pkcs7_envelopedData`: 0 bytes
print-type-size     variant `Pkcs7_signedAndEnvelopedData`: 0 bytes
print-type-size     variant `Pkcs7_digestData`: 0 bytes
print-type-size     variant `Pkcs7_encryptedData`: 0 bytes
print-type-size     variant `Pkcs3`: 0 bytes
print-type-size     variant `DhKeyAgreement`: 0 bytes
print-type-size     variant `DES_ECB`: 0 bytes
print-type-size     variant `DES_CFB`: 0 bytes
print-type-size     variant `DES_CBC`: 0 bytes
print-type-size     variant `DES_EDE`: 0 bytes
print-type-size     variant `DES_EDE3`: 0 bytes
print-type-size     variant `IDEA_CBC`: 0 bytes
print-type-size     variant `IDEA_CFB`: 0 bytes
print-type-size     variant `IDEA_ECB`: 0 bytes
print-type-size     variant `RC2_CBC`: 0 bytes
print-type-size     variant `RC2_ECB`: 0 bytes
print-type-size     variant `RC2_CFB`: 0 bytes
print-type-size     variant `RC2_OFB`: 0 bytes
print-type-size     variant `SHA`: 0 bytes
print-type-size     variant `RSA_SHA`: 0 bytes
print-type-size     variant `DES_EDE_CBC`: 0 bytes
print-type-size     variant `DES_EDE3_CBC`: 0 bytes
print-type-size     variant `DES_OFB`: 0 bytes
print-type-size     variant `IDEA_OFB`: 0 bytes
print-type-size     variant `Pkcs9`: 0 bytes
print-type-size     variant `Email`: 0 bytes
print-type-size     variant `UnstructuredName`: 0 bytes
print-type-size     variant `ContentType`: 0 bytes
print-type-size     variant `MessageDigest`: 0 bytes
print-type-size     variant `SigningTime`: 0 bytes
print-type-size     variant `CounterSignature`: 0 bytes
print-type-size     variant `ChallengePassword`: 0 bytes
print-type-size     variant `UnstructuredAddress`: 0 bytes
print-type-size     variant `ExtendedCertificateAttributes`: 0 bytes
print-type-size     variant `Netscape`: 0 bytes
print-type-size     variant `NetscapeCertExtention`: 0 bytes
print-type-size     variant `NetscapeDatatype`: 0 bytes
print-type-size     variant `DES_EDE_CFB64`: 0 bytes
print-type-size     variant `DES_EDE3_CFB64`: 0 bytes
print-type-size     variant `DES_EDE_OFB64`: 0 bytes
print-type-size     variant `DES_EDE3_OFB64`: 0 bytes
print-type-size     variant `SHA1`: 0 bytes
print-type-size     variant `RSA_SHA1`: 0 bytes
print-type-size     variant `DSA_SHA`: 0 bytes
print-type-size     variant `DSA_OLD`: 0 bytes
print-type-size     variant `PBE_SHA1_RC2_64`: 0 bytes
print-type-size     variant `PBKDF2`: 0 bytes
print-type-size     variant `DSA_SHA1_OLD`: 0 bytes
print-type-size     variant `NetscapeCertType`: 0 bytes
print-type-size     variant `NetscapeBaseUrl`: 0 bytes
print-type-size     variant `NetscapeRevocationUrl`: 0 bytes
print-type-size     variant `NetscapeCARevocationUrl`: 0 bytes
print-type-size     variant `NetscapeRenewalUrl`: 0 bytes
print-type-size     variant `NetscapeCAPolicyUrl`: 0 bytes
print-type-size     variant `NetscapeSSLServerName`: 0 bytes
print-type-size     variant `NetscapeComment`: 0 bytes
print-type-size     variant `NetscapeCertSequence`: 0 bytes
print-type-size     variant `DESX_CBC`: 0 bytes
print-type-size     variant `ID_CE`: 0 bytes
print-type-size     variant `SubjectKeyIdentifier`: 0 bytes
print-type-size     variant `KeyUsage`: 0 bytes
print-type-size     variant `PrivateKeyUsagePeriod`: 0 bytes
print-type-size     variant `SubjectAltName`: 0 bytes
print-type-size     variant `IssuerAltName`: 0 bytes
print-type-size     variant `BasicConstraints`: 0 bytes
print-type-size     variant `CrlNumber`: 0 bytes
print-type-size     variant `CertificatePolicies`: 0 bytes
print-type-size     variant `AuthorityKeyIdentifier`: 0 bytes
print-type-size     variant `BF_CBC`: 0 bytes
print-type-size     variant `BF_ECB`: 0 bytes
print-type-size     variant `BF_CFB`: 0 bytes
print-type-size     variant `BF_OFB`: 0 bytes
print-type-size     variant `MDC2`: 0 bytes
print-type-size     variant `RSA_MDC2`: 0 bytes
print-type-size     variant `RC4_40`: 0 bytes
print-type-size     variant `RC2_40_CBC`: 0 bytes
print-type-size     variant `G`: 0 bytes
print-type-size     variant `S`: 0 bytes
print-type-size     variant `I`: 0 bytes
print-type-size     variant `UID`: 0 bytes
print-type-size     variant `CrlDistributionPoints`: 0 bytes
print-type-size     variant `RSA_NP_MD5`: 0 bytes
print-type-size     variant `SN`: 0 bytes
print-type-size     variant `T`: 0 bytes
print-type-size     variant `D`: 0 bytes
print-type-size     variant `CAST5_CBC`: 0 bytes
print-type-size     variant `CAST5_ECB`: 0 bytes
print-type-size     variant `CAST5_CFB`: 0 bytes
print-type-size     variant `CAST5_OFB`: 0 bytes
print-type-size     variant `PbeWithMD5AndCast5CBC`: 0 bytes
print-type-size     variant `DSA_SHA1`: 0 bytes
print-type-size     variant `MD5_SHA1`: 0 bytes
print-type-size     variant `RSA_SHA1_2`: 0 bytes
print-type-size     variant `DSA`: 0 bytes
print-type-size     variant `RIPEMD160`: 0 bytes
print-type-size     variant `RSA_RIPEMD160`: 0 bytes
print-type-size     variant `RC5_CBC`: 0 bytes
print-type-size     variant `RC5_ECB`: 0 bytes
print-type-size     variant `RC5_CFB`: 0 bytes
print-type-size     variant `RC5_OFB`: 0 bytes
print-type-size     variant `RLE`: 0 bytes
print-type-size     variant `ZLIB`: 0 bytes
print-type-size     variant `ExtendedKeyUsage`: 0 bytes
print-type-size     variant `PKIX`: 0 bytes
print-type-size     variant `ID_KP`: 0 bytes
print-type-size     variant `ServerAuth`: 0 bytes
print-type-size     variant `ClientAuth`: 0 bytes
print-type-size     variant `CodeSigning`: 0 bytes
print-type-size     variant `EmailProtection`: 0 bytes
print-type-size     variant `TimeStamping`: 0 bytes
print-type-size     variant `MsCodeInd`: 0 bytes
print-type-size     variant `MsCodeCom`: 0 bytes
print-type-size     variant `MsCtlSigh`: 0 bytes
print-type-size     variant `MsSGC`: 0 bytes
print-type-size     variant `MsEFS`: 0 bytes
print-type-size     variant `NsSGC`: 0 bytes
print-type-size     variant `DeltaCRL`: 0 bytes
print-type-size     variant `CRLReason`: 0 bytes
print-type-size     variant `InvalidityDate`: 0 bytes
print-type-size     variant `SXNetID`: 0 bytes
print-type-size     variant `PBE_SHA1_RC4_128`: 0 bytes
print-type-size     variant `PBE_SHA1_RC4_40`: 0 bytes
print-type-size     variant `PBE_SHA1_3DES`: 0 bytes
print-type-size     variant `PBE_SHA1_2DES`: 0 bytes
print-type-size     variant `PBE_SHA1_RC2_128`: 0 bytes
print-type-size     variant `PBE_SHA1_RC2_40`: 0 bytes
print-type-size     variant `KeyBag`: 0 bytes
print-type-size     variant `Pkcs8ShroudedKeyBag`: 0 bytes
print-type-size     variant `CertBag`: 0 bytes
print-type-size     variant `CrlBag`: 0 bytes
print-type-size     variant `SecretBag`: 0 bytes
print-type-size     variant `SafeContentsBag`: 0 bytes
print-type-size     variant `FriendlyName`: 0 bytes
print-type-size     variant `LocalKeyID`: 0 bytes
print-type-size     variant `X509Certificate`: 0 bytes
print-type-size     variant `SdsiCertificate`: 0 bytes
print-type-size     variant `X509Crl`: 0 bytes
print-type-size     variant `PBES2`: 0 bytes
print-type-size     variant `PBMAC1`: 0 bytes
print-type-size     variant `HmacWithSha1`: 0 bytes
print-type-size     variant `ID_QT_CPS`: 0 bytes
print-type-size     variant `ID_QT_UNOTICE`: 0 bytes
print-type-size     variant `RC2_64_CBC`: 0 bytes
print-type-size     variant `SMIMECaps`: 0 bytes
print-type-size     variant `PBE_MD2_RC2_64`: 0 bytes
print-type-size     variant `PBE_MD5_RC2_64`: 0 bytes
print-type-size     variant `PBE_SHA1_DES`: 0 bytes
print-type-size     variant `MicrosoftExtensionRequest`: 0 bytes
print-type-size     variant `ExtensionRequest`: 0 bytes
print-type-size     variant `Name`: 0 bytes
print-type-size     variant `DnQualifier`: 0 bytes
print-type-size     variant `IdPe`: 0 bytes
print-type-size     variant `IdAd`: 0 bytes
print-type-size     variant `AuthorityInfoAccess`: 0 bytes
print-type-size     variant `OCSP`: 0 bytes
print-type-size     variant `CaIssuers`: 0 bytes
print-type-size     variant `OCSPSigning`: 0 bytes
print-type-size     variant `UserId`: 0 bytes
print-type-size     variant `SHA256`: 0 bytes
print-type-size     variant `SHA384`: 0 bytes
print-type-size     variant `SHA512`: 0 bytes
print-type-size     variant `SHA224`: 0 bytes
print-type-size type: `openssl::x509::GeneralName`: 8 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.m`: 0 bytes
print-type-size type: `openssl::x509::GeneralNames`: 8 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 8 bytes
print-type-size     field `.m`: 0 bytes
print-type-size type: `openssl::x509::X509StoreContext`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&openssl::x509::X509StoreContext>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*const libc::c_void, *const libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-verify-0.1.0/src/lib.rs:134:55: 134:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7461) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::find[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::net::AddrParseError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::InternalNode<std::string::String, std::string::String>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<std::string::String, std::string::String>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `jar::secure::openssl::crypto::hmac::HMAC`: 296 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 288 bytes
print-type-size     field `.type_`: 1 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `openssl_sys::HMAC_CTX`: 288 bytes, alignment: 8 bytes
print-type-size     field `.md`: 8 bytes
print-type-size     field `.md_ctx`: 48 bytes
print-type-size     field `.i_ctx`: 48 bytes
print-type-size     field `.o_ctx`: 48 bytes
print-type-size     field `.key_length`: 4 bytes
print-type-size     field `.key`: 128 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::option::Option<(std::string::String, Cookie)>`: 216 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 216 bytes
print-type-size         field `.0`: 216 bytes
print-type-size type: `Cookie`: 192 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `.expires`: 48 bytes
print-type-size     field `.max_age`: 16 bytes
print-type-size     field `.domain`: 24 bytes
print-type-size     field `.path`: 24 bytes
print-type-size     field `.secure`: 1 bytes
print-type-size     field `.httponly`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.custom`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<Cookie>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size type: `std::result::Result<Cookie, ()>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size type: `jar::CookieJar`: 176 bytes, alignment: 8 bytes
print-type-size     field `.flavor`: 176 bytes
print-type-size type: `jar::Flavor`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Child`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size type: `jar::Root`: 168 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size     field `.new_cookies`: 48 bytes
print-type-size     field `.removed_cookies`: 48 bytes
print-type-size     field `._key`: 24 bytes
print-type-size type: `core::str::SplitInternal<&str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 104 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<&str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, std::string::String, collections::btree::node::marker::Internal>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 88 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 24 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, std::string::String, collections::btree::node::marker::Leaf>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 88 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 24 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, ()>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::string::String, Cookie>>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `core::str::SplitNInternal<char>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, ()>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::collections::hash_map::Entry<std::string::String, Cookie>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Vacant`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::str::SplitN<char>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 88 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, ()>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::string::String, Cookie>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::collections::btree_map::Entry<std::string::String, std::string::String>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, std::string::String>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<std::string::String, std::string::String>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::btree_map::Range<std::string::String, std::string::String>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<std::string::String, std::string::String>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, (), &std::collections::hash::table::RawTable<std::string::String, ()>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::string::String, Cookie, &std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, (), std::collections::hash::table::FullBucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, Cookie, std::collections::hash::table::FullBucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, (), std::collections::hash::table::FullBucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, Cookie, std::collections::hash::table::FullBucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, (), std::collections::hash::table::FullBucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, Cookie, std::collections::hash::table::FullBucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, (), std::collections::hash::table::FullBucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, Cookie, std::collections::hash::table::FullBucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::GapThenFull<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.gap`: 24 bytes
print-type-size     field `.full`: 32 bytes
print-type-size type: `std::collections::hash::table::GapThenFull<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.gap`: 24 bytes
print-type-size     field `.full`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, ()>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::string::String, Cookie>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::GapThenFull<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::GapThenFull<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `openssl_sys::EVP_MD_CTX`: 48 bytes, alignment: 8 bytes
print-type-size     field `.digest`: 8 bytes
print-type-size     field `.engine`: 8 bytes
print-type-size     field `.flags`: 8 bytes
print-type-size     field `.md_data`: 8 bytes
print-type-size     field `.pctx`: 8 bytes
print-type-size     field `.update`: 8 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashMap<std::string::String, Cookie>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashSet<std::string::String>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, (), &std::collections::hash::table::RawTable<std::string::String, ()>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::string::String, Cookie, &std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::option::Option<(std::string::String, std::string::String)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<time::Tm>`: 48 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size type: `std::result::Result<time::Tm, time::ParseError>`: 48 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `time::Tm`: 44 bytes, alignment: 4 bytes
print-type-size     field `.tm_sec`: 4 bytes
print-type-size     field `.tm_min`: 4 bytes
print-type-size     field `.tm_hour`: 4 bytes
print-type-size     field `.tm_mday`: 4 bytes
print-type-size     field `.tm_mon`: 4 bytes
print-type-size     field `.tm_year`: 4 bytes
print-type-size     field `.tm_wday`: 4 bytes
print-type-size     field `.tm_yday`: 4 bytes
print-type-size     field `.tm_isdst`: 4 bytes
print-type-size     field `.tm_utcoff`: 4 bytes
print-type-size     field `.tm_nsec`: 4 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::string::String, Cookie>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashSet<std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<std::string::String, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::string::String, Cookie>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashSet<std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.map`: 40 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<std::string::String, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, (), &std::collections::hash::table::RawTable<std::string::String, ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::string::String, Cookie, &std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(&str, std::vec::Vec<u8>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, &mut collections::btree::node::Root<std::string::String, std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::borrow::Cow<str>, std::str::Utf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `AttrVal`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 16 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `jar::Iter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.jar`: 8 bytes
print-type-size     field `.keys`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, (), &std::collections::hash::table::RawTable<std::string::String, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::string::String, Cookie, &std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, (), &std::collections::hash::table::RawTable<std::string::String, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, Cookie, &std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, (), &std::collections::hash::table::RawTable<std::string::String, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::string::String, Cookie, &std::collections::hash::table::RawTable<std::string::String, Cookie>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::string::String, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::string::String, Cookie>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, Cookie>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash_map::Iter<std::string::String, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::string::String, Cookie>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Keys<std::string::String, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Keys<std::string::String, Cookie>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_set::Iter<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::iter::Cloned<std::collections::hash_map::Keys<std::string::String, Cookie>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.it`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, (), &mut std::collections::hash::table::RawTable<std::string::String, ()>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, (), &std::collections::hash::table::RawTable<std::string::String, ()>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, Cookie, &mut std::collections::hash::table::RawTable<std::string::String, Cookie>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::string::String, Cookie, &std::collections::hash::table::RawTable<std::string::String, Cookie>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(&str, &str), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, jar::secure::rustc_serialize::base64::FromBase64Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `time::TmFmt`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tm`: 8 bytes
print-type-size     field `.format`: 24 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `jar::Child`: 24 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.read`: 8 bytes
print-type-size     field `.write`: 8 bytes
print-type-size type: `jar::secure::rustc_serialize::base64::Config`: 24 bytes, alignment: 8 bytes
print-type-size     field `.char_set`: 1 bytes
print-type-size     field `.newline`: 1 bytes
print-type-size     field `.pad`: 1 bytes
print-type-size     padding: 5 bytes
print-type-size     field `.line_length`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, (), ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 0 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::string::String, Cookie, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::string::String, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::string::String, Cookie>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, Cookie>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(&u8, &[u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(std::string::String, ())>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::string::String, ()>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::string::String, Cookie>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<Cookie>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `time::Fmt`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Rfc3339`: 0 bytes
print-type-size     variant `Ctime`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.2.5/src/jar.rs:171:47: 171:81 self:&&jar::CookieJar, root:&&jar::Root]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<Cookie>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `collections::btree::node::Root<std::string::String, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `core::slice::Repr<Cookie>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<collections::btree::node::BoxedNode<std::string::String, std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `jar::secure::rustc_serialize::base64::FromBase64Error`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidBase64Byte`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `InvalidBase64Length`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Ref<std::collections::HashMap<std::string::String, Cookie>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Ref<std::collections::HashSet<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<std::collections::HashMap<std::string::String, Cookie>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<std::collections::HashSet<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, Cookie>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.n`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &())>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &Cookie)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::string::String, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<i64, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::cell::Ref<std::collections::HashMap<std::string::String, Cookie>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::cell::Ref<std::collections::HashSet<std::string::String>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<std::collections::HashMap<std::string::String, Cookie>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<std::collections::HashSet<std::string::String>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `url::percent_encoding::PercentDecode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `url::percent_encoding::PercentEncode<url::percent_encoding::DEFAULT_ENCODE_SET>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.encode_set`: 0 bytes
print-type-size type: `time::ParseError`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `InvalidSecond`: 0 bytes
print-type-size     variant `InvalidMinute`: 0 bytes
print-type-size     variant `InvalidHour`: 0 bytes
print-type-size     variant `InvalidDay`: 0 bytes
print-type-size     variant `InvalidMonth`: 0 bytes
print-type-size     variant `InvalidYear`: 0 bytes
print-type-size     variant `InvalidDayOfWeek`: 0 bytes
print-type-size     variant `InvalidDayOfMonth`: 0 bytes
print-type-size     variant `InvalidDayOfYear`: 0 bytes
print-type-size     variant `InvalidZoneOffset`: 0 bytes
print-type-size     variant `InvalidTime`: 0 bytes
print-type-size     variant `InvalidSecondsSinceEpoch`: 0 bytes
print-type-size     variant `MissingFormatConverter`: 0 bytes
print-type-size     variant `InvalidFormatSpecifier`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnexpectedCharacter`: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.2.5/src/lib.rs:104:84: 106:22 v:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.2.5/src/lib.rs:106:32: 108:22 v:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.2.5/src/lib.rs:108:32: 110:22 v:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::string::String, ()>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::string::String, Cookie>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1456) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search_mut[0]::{{closure}}[0] } 0:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<std::string::String>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<std::string::String, std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Cookie>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<std::string::String, std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::BorrowRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&Cookie>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<Cookie>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<std::string::String, std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `jar::secure::openssl::crypto::hash::Type`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `MD5`: 0 bytes
print-type-size     variant `SHA1`: 0 bytes
print-type-size     variant `SHA224`: 0 bytes
print-type-size     variant `SHA256`: 0 bytes
print-type-size     variant `SHA384`: 0 bytes
print-type-size     variant `SHA512`: 0 bytes
print-type-size     variant `RIPEMD160`: 0 bytes
print-type-size type: `jar::secure::openssl::crypto::hmac::State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Reset`: 0 bytes
print-type-size     variant `Updated`: 0 bytes
print-type-size     variant `Finalized`: 0 bytes
print-type-size type: `jar::secure::openssl::crypto::symm::Type`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `AES_128_ECB`: 0 bytes
print-type-size     variant `AES_128_CBC`: 0 bytes
print-type-size     variant `AES_128_CFB1`: 0 bytes
print-type-size     variant `AES_128_CFB128`: 0 bytes
print-type-size     variant `AES_128_CFB8`: 0 bytes
print-type-size     variant `AES_256_ECB`: 0 bytes
print-type-size     variant `AES_256_CBC`: 0 bytes
print-type-size     variant `AES_256_CFB1`: 0 bytes
print-type-size     variant `AES_256_CFB128`: 0 bytes
print-type-size     variant `AES_256_CFB8`: 0 bytes
print-type-size     variant `DES_CBC`: 0 bytes
print-type-size     variant `DES_ECB`: 0 bytes
print-type-size     variant `RC4_128`: 0 bytes
print-type-size type: `jar::secure::rustc_serialize::base64::CharacterSet`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Standard`: 0 bytes
print-type-size     variant `UrlSafe`: 0 bytes
print-type-size type: `jar::secure::rustc_serialize::base64::Newline`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `LF`: 0 bytes
print-type-size     variant `CRLF`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::iter::Repeat<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.element`: 1 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie-0.2.5/src/jar.rs:434:43: 434:78]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1576) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::remove[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1838) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[29]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7461) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::find[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1723) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::unwrap_unchecked[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1786) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1793) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Immut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Mut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (std::string::String, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, Cookie)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Cookie>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<std::string::String, std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `url::percent_encoding::DEFAULT_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `url::percent_encoding::QUERY_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `url::percent_encoding::SIMPLE_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `ParseRatioError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `RatioErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ParseError`: 0 bytes
print-type-size     variant `ZeroDenominator`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `pso::Descriptor`: 440 bytes, alignment: 4 bytes
print-type-size     field `.primitive`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.rasterizer`: 28 bytes, alignment: 4 bytes
print-type-size     field `.scissor`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.attributes`: 320 bytes, alignment: 4 bytes
print-type-size     field `.color_targets`: 64 bytes
print-type-size     field `.depth_stencil`: 19 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `handle::Manager<dummy::DummyResources>`: 264 bytes, alignment: 8 bytes
print-type-size     field `.buffers`: 24 bytes
print-type-size     field `.shaders`: 24 bytes
print-type-size     field `.programs`: 24 bytes
print-type-size     field `.psos`: 24 bytes
print-type-size     field `.textures`: 24 bytes
print-type-size     field `.srvs`: 24 bytes
print-type-size     field `.uavs`: 24 bytes
print-type-size     field `.rtvs`: 24 bytes
print-type-size     field `.dsvs`: 24 bytes
print-type-size     field `.samplers`: 24 bytes
print-type-size     field `.fences`: 24 bytes
print-type-size type: `pso::VertexBufferSet<dummy::DummyResources>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `shade::ProgramInfo`: 176 bytes, alignment: 8 bytes
print-type-size     field `.vertex_attributes`: 24 bytes
print-type-size     field `.globals`: 24 bytes
print-type-size     field `.constant_buffers`: 24 bytes
print-type-size     field `.textures`: 24 bytes
print-type-size     field `.unordereds`: 24 bytes
print-type-size     field `.samplers`: 24 bytes
print-type-size     field `.outputs`: 24 bytes
print-type-size     field `.knows_outputs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `shade::UniformValue`: 68 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `I32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `I32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `I32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `I32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `F32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `F32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix2`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix3`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `F32Matrix4`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `shade::ConstVar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.location`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `shade::ConstantBufferVar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.size`: 8 bytes, alignment: 8 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `Capabilities`: 32 bytes, alignment: 8 bytes
print-type-size     field `.max_vertex_count`: 8 bytes
print-type-size     field `.max_index_count`: 8 bytes
print-type-size     field `.max_texture_size`: 8 bytes
print-type-size     field `.instance_base_supported`: 1 bytes
print-type-size     field `.instance_call_supported`: 1 bytes
print-type-size     field `.instance_rate_supported`: 1 bytes
print-type-size     field `.vertex_base_supported`: 1 bytes
print-type-size     field `.srgb_color_supported`: 1 bytes
print-type-size     field `.constant_buffer_supported`: 1 bytes
print-type-size     field `.unordered_access_view_supported`: 1 bytes
print-type-size     field `.separate_blending_slots_supported`: 1 bytes
print-type-size type: `dummy::DummyDevice`: 32 bytes, alignment: 8 bytes
print-type-size     field `.capabilities`: 32 bytes
print-type-size type: `shade::AttributeVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `shade::CreateShaderError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ModelNotSupported`: 0 bytes
print-type-size     variant `StageNotSupported`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CompilationFailed`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `shade::OutputVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `shade::SamplerVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.ty`: 2 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `shade::TextureVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.ty`: 3 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `shade::UnorderedVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `draw_state::state::Rasterizer`: 28 bytes, alignment: 4 bytes
print-type-size     field `.front_face`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.method`: 8 bytes, alignment: 4 bytes
print-type-size     field `.offset`: 12 bytes
print-type-size     field `.samples`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `factory::BufferInfo`: 24 bytes, alignment: 8 bytes
print-type-size     field `.role`: 1 bytes
print-type-size     field `.usage`: 2 bytes
print-type-size     field `.bind`: 1 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.size`: 8 bytes, alignment: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `factory::CombinedError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Texture`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Resource`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Target`: 5 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 4 bytes, alignment: 2 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<shade::AttributeVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::ConstVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::ConstantBufferVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::OutputVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::SamplerVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::TextureVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::UnorderedVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<()>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `draw::ClearColor`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Uint`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `draw_state::state::RefValues`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stencil`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.blend`: 16 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<(pso::Element<format::Format>, u8)>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `tex::SamplerInfo`: 20 bytes, alignment: 4 bytes
print-type-size     field `.filter`: 2 bytes
print-type-size     field `.wrap_mode`: 3 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.lod_bias`: 2 bytes, alignment: 2 bytes
print-type-size     field `.lod_range`: 4 bytes
print-type-size     field `.comparison`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.border`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<(format::SurfaceType, pso::DepthStencilInfo)>`: 19 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 18 bytes
print-type-size         field `.0`: 18 bytes
print-type-size type: `tex::Descriptor`: 18 bytes, alignment: 2 bytes
print-type-size     field `.kind`: 12 bytes
print-type-size     field `.levels`: 1 bytes
print-type-size     field `.format`: 1 bytes
print-type-size     field `.bind`: 1 bytes
print-type-size     field `.usage`: 2 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `pso::DepthStencilInfo`: 17 bytes, alignment: 1 bytes
print-type-size     field `.depth`: 3 bytes
print-type-size     field `.front`: 7 bytes
print-type-size     field `.back`: 7 bytes
print-type-size type: `alloc::arc::ArcInner<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::AttributeVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::ConstVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::ConstantBufferVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::OutputVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::SamplerVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::TextureVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::UnorderedVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<[f32; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<[f32; 3]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<[f32; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<shade::AttributeVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<shade::ConstVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<shade::ConstantBufferVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<shade::OutputVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<shade::SamplerVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<shade::TextureVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<shade::UnorderedVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<(format::Format, pso::ColorInfo)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<(pso::Element<format::Format>, u8)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `pso::PixelTargetSet<dummy::DummyResources>`: 16 bytes, alignment: 2 bytes
print-type-size     field `.colors`: 4 bytes
print-type-size     field `.depth`: 1 bytes
print-type-size     field `.stencil`: 1 bytes
print-type-size     field `.size`: 10 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<f32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<((), usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(<dummy::DummyResources as Resources>::Buffer, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(format::Format, pso::ColorInfo)>`: 16 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         field `.0`: 15 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<[f32; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<[f32; 3]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<[f32; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::AttributeVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::ConstVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::ConstantBufferVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::OutputVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::SamplerVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::TextureVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::UnorderedVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<(format::Format, pso::ColorInfo)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<(pso::Element<format::Format>, u8)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `tex::Error`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Format`: 3 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 2 bytes
print-type-size     variant `Kind`: 0 bytes
print-type-size     variant `Samples`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size     variant `Size`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Data`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `tex::ImageInfoCommon<format::Format>`: 16 bytes, alignment: 2 bytes
print-type-size     field `.xoffset`: 2 bytes
print-type-size     field `.yoffset`: 2 bytes
print-type-size     field `.zoffset`: 2 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.height`: 2 bytes
print-type-size     field `.depth`: 2 bytes
print-type-size     field `.format`: 2 bytes
print-type-size     field `.mipmap`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `tex::ImageInfoCommon<()>`: 14 bytes, alignment: 2 bytes
print-type-size     field `.xoffset`: 2 bytes
print-type-size     field `.yoffset`: 2 bytes
print-type-size     field `.zoffset`: 2 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.height`: 2 bytes
print-type-size     field `.depth`: 2 bytes
print-type-size     field `.format`: 0 bytes
print-type-size     field `.mipmap`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `pso::ColorInfo`: 13 bytes, alignment: 1 bytes
print-type-size     field `.mask`: 1 bytes
print-type-size     field `.color`: 6 bytes
print-type-size     field `.alpha`: 6 bytes
print-type-size type: `draw_state::state::Stencil`: 12 bytes, alignment: 1 bytes
print-type-size     field `.front`: 6 bytes
print-type-size     field `.back`: 6 bytes
print-type-size type: `pso::Element<format::Format>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.format`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.offset`: 4 bytes, alignment: 4 bytes
print-type-size     field `.stride`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<(u32, u32)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<draw_state::state::Offset>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `tex::Kind`: 12 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `D1`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `D1Array`: 4 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size     variant `D2`: 7 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         field `.2`: 3 bytes
print-type-size     variant `D2Array`: 9 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         field `.2`: 2 bytes
print-type-size         field `.3`: 3 bytes
print-type-size     variant `D3`: 6 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         field `.2`: 2 bytes
print-type-size     variant `Cube`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `CubeArray`: 4 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `draw_state::state::Blend`: 10 bytes, alignment: 1 bytes
print-type-size     field `.color`: 5 bytes
print-type-size     field `.alpha`: 5 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.2.1/src/tex.rs:178:19: 178:55 level:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.2.1/src/tex.rs:188:24: 188:52 dominant:&u16]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const shade::AttributeVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const shade::ConstVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const shade::ConstantBufferVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const shade::OutputVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const shade::SamplerVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const shade::TextureVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const shade::UnorderedVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `draw_state::state::Offset`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size type: `draw_state::state::RasterMethod`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Point`: 0 bytes
print-type-size     variant `Line`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Fill`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `draw_state::target::Rect`: 8 bytes, alignment: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size     field `.w`: 2 bytes
print-type-size     field `.h`: 2 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&[f32; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&[f32; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&[f32; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::AttributeVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::ConstVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::ConstantBufferVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::OutputVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::SamplerVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::TextureVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::UnorderedVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<(format::Format, pso::ColorInfo)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<(pso::Element<format::Format>, u8)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::AttributeVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::ConstVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::ConstantBufferVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::OutputVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::SamplerVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::TextureVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::UnorderedVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Arc<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `tex::DepthStencilDesc`: 8 bytes, alignment: 2 bytes
print-type-size     field `.level`: 1 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.layer`: 4 bytes, alignment: 2 bytes
print-type-size     field `.flags`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::StencilSide>`: 7 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size type: `tex::ResourceDesc`: 7 bytes, alignment: 1 bytes
print-type-size     field `.channel`: 1 bytes
print-type-size     field `.min`: 1 bytes
print-type-size     field `.max`: 1 bytes
print-type-size     field `.swizzle`: 4 bytes
print-type-size type: `draw_state::state::StencilSide`: 6 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.mask_read`: 1 bytes
print-type-size     field `.mask_write`: 1 bytes
print-type-size     field `.op_fail`: 1 bytes
print-type-size     field `.op_depth_fail`: 1 bytes
print-type-size     field `.op_pass`: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::BlendChannel>`: 6 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 5 bytes
print-type-size         field `.0`: 5 bytes
print-type-size type: `tex::RenderDesc`: 6 bytes, alignment: 2 bytes
print-type-size     field `.channel`: 1 bytes
print-type-size     field `.level`: 1 bytes
print-type-size     field `.layer`: 4 bytes
print-type-size type: `draw_state::state::BlendChannel`: 5 bytes, alignment: 1 bytes
print-type-size     field `.equation`: 1 bytes
print-type-size     field `.source`: 2 bytes
print-type-size     field `.destination`: 2 bytes
print-type-size type: `factory::TargetViewError`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NoBindFlag`: 0 bytes
print-type-size     variant `BadLevel`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `BadLayer`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Channel`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size type: `format::Swizzle`: 4 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size type: `shade::ContainerType`: 4 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Single`: 0 bytes
print-type-size     variant `Vector`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Matrix`: 3 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         field `.2`: 1 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `tex::PackedColor`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `shade::TextureType`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Buffer`: 0 bytes
print-type-size     variant `D1`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `D2`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `D3`: 0 bytes
print-type-size     variant `Cube`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::Depth>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `tex::AaMode`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Single`: 0 bytes
print-type-size     variant `Multi`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Coverage`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size type: `draw_state::state::Depth`: 2 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size type: `draw_state::state::Factor`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `SourceAlphaSaturated`: 0 bytes
print-type-size     variant `ZeroPlus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `OneMinus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `factory::BufferError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `UnsupportedBind`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `factory::ResourceViewError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NoBindFlag`: 0 bytes
print-type-size     variant `Channel`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size type: `factory::Usage`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `GpuOnly`: 0 bytes
print-type-size     variant `Const`: 0 bytes
print-type-size     variant `Dynamic`: 0 bytes
print-type-size     variant `CpuOnly`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `format::F16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `format::Format`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `format::I16Norm`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `format::U16Norm`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `pso::ConstantBufferParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `pso::ResourceViewParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `pso::SamplerParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `pso::UnorderedViewParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `shade::SamplerType`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::Comparison>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<format::ChannelType>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<tex::CubeFace>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), shade::CompatibilityError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `tex::FilterMethod`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Scale`: 0 bytes
print-type-size     variant `Mipmap`: 0 bytes
print-type-size     variant `Bilinear`: 0 bytes
print-type-size     variant `Trilinear`: 0 bytes
print-type-size     variant `Anisotropic`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `tex::Lod`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `IndexType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `U8`: 0 bytes
print-type-size     variant `U16`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size type: `Primitive`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PointList`: 0 bytes
print-type-size     variant `LineList`: 0 bytes
print-type-size     variant `LineStrip`: 0 bytes
print-type-size     variant `TriangleList`: 0 bytes
print-type-size     variant `TriangleStrip`: 0 bytes
print-type-size type: `draw_state::state::BlendValue`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SourceColor`: 0 bytes
print-type-size     variant `SourceAlpha`: 0 bytes
print-type-size     variant `DestColor`: 0 bytes
print-type-size     variant `DestAlpha`: 0 bytes
print-type-size     variant `ConstColor`: 0 bytes
print-type-size     variant `ConstAlpha`: 0 bytes
print-type-size type: `draw_state::state::ColorMask`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `draw_state::state::Comparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Never`: 0 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `LessEqual`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `GreaterEqual`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size     variant `NotEqual`: 0 bytes
print-type-size     variant `Always`: 0 bytes
print-type-size type: `draw_state::state::CullFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nothing`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `draw_state::state::Equation`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Sub`: 0 bytes
print-type-size     variant `RevSub`: 0 bytes
print-type-size     variant `Min`: 0 bytes
print-type-size     variant `Max`: 0 bytes
print-type-size type: `draw_state::state::FrontFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Clockwise`: 0 bytes
print-type-size     variant `CounterClockwise`: 0 bytes
print-type-size type: `draw_state::state::StencilOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Keep`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Replace`: 0 bytes
print-type-size     variant `IncrementClamp`: 0 bytes
print-type-size     variant `IncrementWrap`: 0 bytes
print-type-size     variant `DecrementClamp`: 0 bytes
print-type-size     variant `DecrementWrap`: 0 bytes
print-type-size     variant `Invert`: 0 bytes
print-type-size type: `factory::Bind`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `factory::BufferRole`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Vertex`: 0 bytes
print-type-size     variant `Index`: 0 bytes
print-type-size     variant `Uniform`: 0 bytes
print-type-size type: `factory::BufferUpdateError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `OutOfBounds`: 0 bytes
print-type-size type: `factory::MapAccess`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Readable`: 0 bytes
print-type-size     variant `Writable`: 0 bytes
print-type-size     variant `RW`: 0 bytes
print-type-size type: `format::ChannelSource`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `X`: 0 bytes
print-type-size     variant `Y`: 0 bytes
print-type-size     variant `Z`: 0 bytes
print-type-size     variant `W`: 0 bytes
print-type-size type: `format::ChannelType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Int`: 0 bytes
print-type-size     variant `Uint`: 0 bytes
print-type-size     variant `Inorm`: 0 bytes
print-type-size     variant `Unorm`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Srgb`: 0 bytes
print-type-size type: `format::I8Norm`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `format::SurfaceType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `R4_G4`: 0 bytes
print-type-size     variant `R4_G4_B4_A4`: 0 bytes
print-type-size     variant `R5_G5_B5_A1`: 0 bytes
print-type-size     variant `R5_G6_B5`: 0 bytes
print-type-size     variant `R8`: 0 bytes
print-type-size     variant `R8_G8`: 0 bytes
print-type-size     variant `R8_G8_B8_A8`: 0 bytes
print-type-size     variant `R10_G10_B10_A2`: 0 bytes
print-type-size     variant `R11_G11_B10`: 0 bytes
print-type-size     variant `R16`: 0 bytes
print-type-size     variant `R16_G16`: 0 bytes
print-type-size     variant `R16_G16_B16`: 0 bytes
print-type-size     variant `R16_G16_B16_A16`: 0 bytes
print-type-size     variant `R32`: 0 bytes
print-type-size     variant `R32_G32`: 0 bytes
print-type-size     variant `R32_G32_B32`: 0 bytes
print-type-size     variant `R32_G32_B32_A32`: 0 bytes
print-type-size     variant `D16`: 0 bytes
print-type-size     variant `D24`: 0 bytes
print-type-size     variant `D24_S8`: 0 bytes
print-type-size     variant `D32`: 0 bytes
print-type-size type: `format::U8Norm`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `shade::BaseType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `F32`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size type: `shade::CompatibilityError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ErrorArraySize`: 0 bytes
print-type-size     variant `ErrorBaseType`: 0 bytes
print-type-size     variant `ErrorContainer`: 0 bytes
print-type-size type: `shade::IsArray`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size     variant `NoArray`: 0 bytes
print-type-size type: `shade::IsComparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `NoCompare`: 0 bytes
print-type-size type: `shade::IsMultiSample`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `MultiSample`: 0 bytes
print-type-size     variant `NoMultiSample`: 0 bytes
print-type-size type: `shade::IsRect`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Rect`: 0 bytes
print-type-size     variant `NoRect`: 0 bytes
print-type-size type: `shade::MatrixFormat`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ColumnMajor`: 0 bytes
print-type-size     variant `RowMajor`: 0 bytes
print-type-size type: `shade::Stage`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Vertex`: 0 bytes
print-type-size     variant `Geometry`: 0 bytes
print-type-size     variant `Pixel`: 0 bytes
print-type-size type: `shade::Usage`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::ops::RangeFrom<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<<dummy::DummyResources as Resources>::DepthStencilView>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<<dummy::DummyResources as Resources>::RenderTargetView>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<draw_state::state::MultiSample>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `tex::CubeFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PosX`: 0 bytes
print-type-size     variant `NegX`: 0 bytes
print-type-size     variant `PosY`: 0 bytes
print-type-size     variant `NegY`: 0 bytes
print-type-size     variant `PosZ`: 0 bytes
print-type-size     variant `NegZ`: 0 bytes
print-type-size type: `tex::DepthStencilFlags`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `tex::WrapMode`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tile`: 0 bytes
print-type-size     variant `Mirror`: 0 bytes
print-type-size     variant `Clamp`: 0 bytes
print-type-size     variant `Border`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.2.1/src/tex.rs:303:44: 305:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `draw_state::state::MultiSample`: 0 bytes, alignment: 1 bytes
print-type-size type: `dummy::DummyCommandBuffer`: 0 bytes, alignment: 1 bytes
print-type-size type: `dummy::DummyResources`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D24`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D24_S8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Float`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Inorm`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Int`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R10_G10_B10_A2`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R11_G11_B10`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16_G16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16_G16_B16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16_G16_B16_A16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32_G32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32_G32_B32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32_G32_B32_A32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R4_G4`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R4_G4_B4_A4`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R5_G5_B5_A1`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R5_G6_B5`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R8_G8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R8_G8_B8_A8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Srgb`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Uint`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Unorm`: 0 bytes, alignment: 1 bytes
print-type-size type: `pso::CreationError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[f32; 2]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[f32; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[f32; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::AttributeVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::ConstVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::ConstantBufferVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::OutputVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::SamplerVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::TextureVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::UnorderedVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<(format::Format, pso::ColorInfo)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<(pso::Element<format::Format>, u8)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::AttributeVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::ConstVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::ConstantBufferVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::OutputVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::SamplerVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::TextureVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::UnorderedVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `pso::Descriptor`: 440 bytes, alignment: 4 bytes
print-type-size     field `.primitive`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.rasterizer`: 28 bytes, alignment: 4 bytes
print-type-size     field `.scissor`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.attributes`: 320 bytes, alignment: 4 bytes
print-type-size     field `.color_targets`: 64 bytes
print-type-size     field `.depth_stencil`: 19 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `handle::Manager<dummy::DummyResources>`: 264 bytes, alignment: 8 bytes
print-type-size     field `.buffers`: 24 bytes
print-type-size     field `.shaders`: 24 bytes
print-type-size     field `.programs`: 24 bytes
print-type-size     field `.psos`: 24 bytes
print-type-size     field `.textures`: 24 bytes
print-type-size     field `.srvs`: 24 bytes
print-type-size     field `.uavs`: 24 bytes
print-type-size     field `.rtvs`: 24 bytes
print-type-size     field `.dsvs`: 24 bytes
print-type-size     field `.samplers`: 24 bytes
print-type-size     field `.fences`: 24 bytes
print-type-size type: `pso::VertexBufferSet<dummy::DummyResources>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `shade::ProgramInfo`: 176 bytes, alignment: 8 bytes
print-type-size     field `.vertex_attributes`: 24 bytes
print-type-size     field `.globals`: 24 bytes
print-type-size     field `.constant_buffers`: 24 bytes
print-type-size     field `.textures`: 24 bytes
print-type-size     field `.unordereds`: 24 bytes
print-type-size     field `.samplers`: 24 bytes
print-type-size     field `.outputs`: 24 bytes
print-type-size     field `.output_depth`: 1 bytes
print-type-size     field `.knows_outputs`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `shade::UniformValue`: 68 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `I32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `I32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `I32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `I32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `F32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `F32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix2`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix3`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `F32Matrix4`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `shade::ConstVar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.location`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `shade::ConstantBufferVar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.size`: 8 bytes, alignment: 8 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `Capabilities`: 32 bytes, alignment: 8 bytes
print-type-size     field `.max_vertex_count`: 8 bytes
print-type-size     field `.max_index_count`: 8 bytes
print-type-size     field `.max_texture_size`: 8 bytes
print-type-size     field `.instance_base_supported`: 1 bytes
print-type-size     field `.instance_call_supported`: 1 bytes
print-type-size     field `.instance_rate_supported`: 1 bytes
print-type-size     field `.vertex_base_supported`: 1 bytes
print-type-size     field `.srgb_color_supported`: 1 bytes
print-type-size     field `.constant_buffer_supported`: 1 bytes
print-type-size     field `.unordered_access_view_supported`: 1 bytes
print-type-size     field `.separate_blending_slots_supported`: 1 bytes
print-type-size type: `dummy::DummyDevice`: 32 bytes, alignment: 8 bytes
print-type-size     field `.capabilities`: 32 bytes
print-type-size type: `shade::AttributeVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `shade::CreateShaderError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ModelNotSupported`: 0 bytes
print-type-size     variant `StageNotSupported`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CompilationFailed`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `shade::OutputVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `shade::SamplerVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.ty`: 2 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `shade::TextureVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.ty`: 3 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `shade::UnorderedVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `draw_state::state::Rasterizer`: 28 bytes, alignment: 4 bytes
print-type-size     field `.front_face`: 1 bytes
print-type-size     field `.cull_face`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.method`: 8 bytes, alignment: 4 bytes
print-type-size     field `.offset`: 12 bytes
print-type-size     field `.samples`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `factory::BufferInfo`: 24 bytes, alignment: 8 bytes
print-type-size     field `.role`: 1 bytes
print-type-size     field `.usage`: 2 bytes
print-type-size     field `.bind`: 1 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.size`: 8 bytes, alignment: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `factory::CombinedError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Texture`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Resource`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Target`: 5 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 4 bytes, alignment: 2 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<shade::AttributeVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::ConstVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::ConstantBufferVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::OutputVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::SamplerVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::TextureVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<shade::UnorderedVar>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<()>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `draw::ClearColor`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Uint`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `draw_state::state::RefValues`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stencil`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.blend`: 16 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<(pso::Element<format::Format>, u8)>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `tex::SamplerInfo`: 20 bytes, alignment: 4 bytes
print-type-size     field `.filter`: 2 bytes
print-type-size     field `.wrap_mode`: 3 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.lod_bias`: 2 bytes, alignment: 2 bytes
print-type-size     field `.lod_range`: 4 bytes
print-type-size     field `.comparison`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.border`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<(format::SurfaceType, pso::DepthStencilInfo)>`: 19 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 18 bytes
print-type-size         field `.0`: 18 bytes
print-type-size type: `tex::Descriptor`: 18 bytes, alignment: 2 bytes
print-type-size     field `.kind`: 12 bytes
print-type-size     field `.levels`: 1 bytes
print-type-size     field `.format`: 1 bytes
print-type-size     field `.bind`: 1 bytes
print-type-size     field `.usage`: 2 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `pso::DepthStencilInfo`: 17 bytes, alignment: 1 bytes
print-type-size     field `.depth`: 3 bytes
print-type-size     field `.front`: 7 bytes
print-type-size     field `.back`: 7 bytes
print-type-size type: `alloc::arc::ArcInner<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::AttributeVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::ConstVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::ConstantBufferVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::OutputVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::SamplerVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::TextureVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<shade::UnorderedVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `bitflags::<unnamed>::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<[f32; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<[f32; 3]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<[f32; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<shade::AttributeVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<shade::ConstVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<shade::ConstantBufferVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<shade::OutputVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<shade::SamplerVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<shade::TextureVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<shade::UnorderedVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<std::option::Option<(format::Format, pso::ColorInfo)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<std::option::Option<(pso::Element<format::Format>, u8)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `bitflags::<unnamed>::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `pso::PixelTargetSet<dummy::DummyResources>`: 16 bytes, alignment: 2 bytes
print-type-size     field `.colors`: 4 bytes
print-type-size     field `.depth`: 1 bytes
print-type-size     field `.stencil`: 1 bytes
print-type-size     field `.size`: 10 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<f32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<((), usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(<dummy::DummyResources as Resources>::Buffer, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(format::Format, pso::ColorInfo)>`: 16 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         field `.0`: 15 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<[f32; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<[f32; 3]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<[f32; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::AttributeVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::ConstVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::ConstantBufferVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::OutputVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::SamplerVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::TextureVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<shade::UnorderedVar>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<(format::Format, pso::ColorInfo)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<(pso::Element<format::Format>, u8)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `tex::Error`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Format`: 3 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 2 bytes
print-type-size     variant `Kind`: 0 bytes
print-type-size     variant `Samples`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size     variant `Size`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Data`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `tex::ImageInfoCommon<format::Format>`: 16 bytes, alignment: 2 bytes
print-type-size     field `.xoffset`: 2 bytes
print-type-size     field `.yoffset`: 2 bytes
print-type-size     field `.zoffset`: 2 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.height`: 2 bytes
print-type-size     field `.depth`: 2 bytes
print-type-size     field `.format`: 2 bytes
print-type-size     field `.mipmap`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `tex::ImageInfoCommon<()>`: 14 bytes, alignment: 2 bytes
print-type-size     field `.xoffset`: 2 bytes
print-type-size     field `.yoffset`: 2 bytes
print-type-size     field `.zoffset`: 2 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.height`: 2 bytes
print-type-size     field `.depth`: 2 bytes
print-type-size     field `.format`: 0 bytes
print-type-size     field `.mipmap`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `pso::ColorInfo`: 13 bytes, alignment: 1 bytes
print-type-size     field `.mask`: 1 bytes
print-type-size     field `.color`: 6 bytes
print-type-size     field `.alpha`: 6 bytes
print-type-size type: `draw_state::state::Stencil`: 12 bytes, alignment: 1 bytes
print-type-size     field `.front`: 6 bytes
print-type-size     field `.back`: 6 bytes
print-type-size type: `pso::Element<format::Format>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.format`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.offset`: 4 bytes, alignment: 4 bytes
print-type-size     field `.stride`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<(u32, u32)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<draw_state::state::Offset>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `tex::Kind`: 12 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `D1`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `D1Array`: 4 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size     variant `D2`: 7 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         field `.2`: 3 bytes
print-type-size     variant `D2Array`: 9 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         field `.2`: 2 bytes
print-type-size         field `.3`: 3 bytes
print-type-size     variant `D3`: 6 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         field `.2`: 2 bytes
print-type-size     variant `Cube`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `CubeArray`: 4 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         field `.1`: 2 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `draw_state::state::Blend`: 10 bytes, alignment: 1 bytes
print-type-size     field `.color`: 5 bytes
print-type-size     field `.alpha`: 5 bytes
print-type-size type: `<factory::Bind as std::fmt::Debug>::fmt::dummy::Bind`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `<shade::Usage as std::fmt::Debug>::fmt::dummy::Usage`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `<tex::DepthStencilFlags as std::fmt::Debug>::fmt::dummy::DepthStencilFlags`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.4.0/src/tex.rs:205:19: 205:55 level:&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.4.0/src/tex.rs:215:24: 215:52 dominant:&u16]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const alloc::arc::ArcInner<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const shade::AttributeVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const shade::ConstVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const shade::ConstantBufferVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const shade::OutputVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const shade::SamplerVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const shade::TextureVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const shade::UnorderedVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bitflags::<unnamed>::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `draw_state::state::Offset`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size type: `draw_state::state::RasterMethod`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Point`: 0 bytes
print-type-size     variant `Line`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fill`: 0 bytes
print-type-size type: `draw_state::target::Rect`: 8 bytes, alignment: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size     field `.w`: 2 bytes
print-type-size     field `.h`: 2 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::option::Option<&[f32; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&[f32; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&[f32; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::AttributeVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::ConstVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::ConstantBufferVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::OutputVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::SamplerVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::TextureVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&shade::UnorderedVar>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<(format::Format, pso::ColorInfo)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<(pso::Element<format::Format>, u8)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::AttributeVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::ConstVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::ConstantBufferVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::OutputVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::SamplerVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::TextureVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<shade::UnorderedVar>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Arc<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `tex::DepthStencilDesc`: 8 bytes, alignment: 2 bytes
print-type-size     field `.level`: 1 bytes
print-type-size     padding: 1 bytes
print-type-size     field `.layer`: 4 bytes, alignment: 2 bytes
print-type-size     field `.flags`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::StencilSide>`: 7 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size type: `tex::ResourceDesc`: 7 bytes, alignment: 1 bytes
print-type-size     field `.channel`: 1 bytes
print-type-size     field `.min`: 1 bytes
print-type-size     field `.max`: 1 bytes
print-type-size     field `.swizzle`: 4 bytes
print-type-size type: `draw_state::state::StencilSide`: 6 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.mask_read`: 1 bytes
print-type-size     field `.mask_write`: 1 bytes
print-type-size     field `.op_fail`: 1 bytes
print-type-size     field `.op_depth_fail`: 1 bytes
print-type-size     field `.op_pass`: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::BlendChannel>`: 6 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 5 bytes
print-type-size         field `.0`: 5 bytes
print-type-size type: `tex::RenderDesc`: 6 bytes, alignment: 2 bytes
print-type-size     field `.channel`: 1 bytes
print-type-size     field `.level`: 1 bytes
print-type-size     field `.layer`: 4 bytes
print-type-size type: `draw_state::state::BlendChannel`: 5 bytes, alignment: 1 bytes
print-type-size     field `.equation`: 1 bytes
print-type-size     field `.source`: 2 bytes
print-type-size     field `.destination`: 2 bytes
print-type-size type: `factory::TargetViewError`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NoBindFlag`: 0 bytes
print-type-size     variant `BadLevel`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `BadLayer`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Channel`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size type: `format::Swizzle`: 4 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size type: `shade::ContainerType`: 4 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Single`: 0 bytes
print-type-size     variant `Vector`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Matrix`: 3 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         field `.2`: 1 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `tex::PackedColor`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `shade::TextureType`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Buffer`: 0 bytes
print-type-size     variant `D1`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `D2`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `D3`: 0 bytes
print-type-size     variant `Cube`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::Depth>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `tex::AaMode`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Single`: 0 bytes
print-type-size     variant `Multi`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Coverage`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size type: `draw_state::state::Depth`: 2 bytes, alignment: 1 bytes
print-type-size     field `.fun`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size type: `draw_state::state::Factor`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `SourceAlphaSaturated`: 0 bytes
print-type-size     variant `ZeroPlus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `OneMinus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `factory::BufferError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `UnsupportedBind`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `factory::ResourceViewError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NoBindFlag`: 0 bytes
print-type-size     variant `Channel`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size type: `factory::Usage`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `GpuOnly`: 0 bytes
print-type-size     variant `Const`: 0 bytes
print-type-size     variant `Dynamic`: 0 bytes
print-type-size     variant `CpuOnly`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `format::F16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `format::Format`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `format::I16Norm`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `format::U16Norm`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `pso::ConstantBufferParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `pso::ResourceViewParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `pso::SamplerParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `pso::UnorderedViewParam<dummy::DummyResources>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size type: `shade::SamplerType`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `std::option::Option<draw_state::state::Comparison>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<format::ChannelType>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<tex::CubeFace>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), shade::CompatibilityError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `tex::FilterMethod`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Scale`: 0 bytes
print-type-size     variant `Mipmap`: 0 bytes
print-type-size     variant `Bilinear`: 0 bytes
print-type-size     variant `Trilinear`: 0 bytes
print-type-size     variant `Anisotropic`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `tex::Lod`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `IndexType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `U16`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size type: `Primitive`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PointList`: 0 bytes
print-type-size     variant `LineList`: 0 bytes
print-type-size     variant `LineStrip`: 0 bytes
print-type-size     variant `TriangleList`: 0 bytes
print-type-size     variant `TriangleStrip`: 0 bytes
print-type-size type: `draw_state::state::BlendValue`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SourceColor`: 0 bytes
print-type-size     variant `SourceAlpha`: 0 bytes
print-type-size     variant `DestColor`: 0 bytes
print-type-size     variant `DestAlpha`: 0 bytes
print-type-size     variant `ConstColor`: 0 bytes
print-type-size     variant `ConstAlpha`: 0 bytes
print-type-size type: `draw_state::state::ColorMask`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `draw_state::state::Comparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Never`: 0 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `LessEqual`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `GreaterEqual`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size     variant `NotEqual`: 0 bytes
print-type-size     variant `Always`: 0 bytes
print-type-size type: `draw_state::state::CullFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nothing`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `draw_state::state::Equation`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Sub`: 0 bytes
print-type-size     variant `RevSub`: 0 bytes
print-type-size     variant `Min`: 0 bytes
print-type-size     variant `Max`: 0 bytes
print-type-size type: `draw_state::state::FrontFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Clockwise`: 0 bytes
print-type-size     variant `CounterClockwise`: 0 bytes
print-type-size type: `draw_state::state::StencilOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Keep`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Replace`: 0 bytes
print-type-size     variant `IncrementClamp`: 0 bytes
print-type-size     variant `IncrementWrap`: 0 bytes
print-type-size     variant `DecrementClamp`: 0 bytes
print-type-size     variant `DecrementWrap`: 0 bytes
print-type-size     variant `Invert`: 0 bytes
print-type-size type: `factory::Bind`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `factory::BufferRole`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Vertex`: 0 bytes
print-type-size     variant `Index`: 0 bytes
print-type-size     variant `Uniform`: 0 bytes
print-type-size type: `factory::BufferUpdateError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `OutOfBounds`: 0 bytes
print-type-size type: `factory::MapAccess`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Readable`: 0 bytes
print-type-size     variant `Writable`: 0 bytes
print-type-size     variant `RW`: 0 bytes
print-type-size type: `format::ChannelSource`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `X`: 0 bytes
print-type-size     variant `Y`: 0 bytes
print-type-size     variant `Z`: 0 bytes
print-type-size     variant `W`: 0 bytes
print-type-size type: `format::ChannelType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Int`: 0 bytes
print-type-size     variant `Uint`: 0 bytes
print-type-size     variant `Inorm`: 0 bytes
print-type-size     variant `Unorm`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Srgb`: 0 bytes
print-type-size type: `format::I8Norm`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `format::SurfaceType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `R4_G4`: 0 bytes
print-type-size     variant `R4_G4_B4_A4`: 0 bytes
print-type-size     variant `R5_G5_B5_A1`: 0 bytes
print-type-size     variant `R5_G6_B5`: 0 bytes
print-type-size     variant `R8`: 0 bytes
print-type-size     variant `R8_G8`: 0 bytes
print-type-size     variant `R8_G8_B8_A8`: 0 bytes
print-type-size     variant `R10_G10_B10_A2`: 0 bytes
print-type-size     variant `R11_G11_B10`: 0 bytes
print-type-size     variant `R16`: 0 bytes
print-type-size     variant `R16_G16`: 0 bytes
print-type-size     variant `R16_G16_B16`: 0 bytes
print-type-size     variant `R16_G16_B16_A16`: 0 bytes
print-type-size     variant `R32`: 0 bytes
print-type-size     variant `R32_G32`: 0 bytes
print-type-size     variant `R32_G32_B32`: 0 bytes
print-type-size     variant `R32_G32_B32_A32`: 0 bytes
print-type-size     variant `D16`: 0 bytes
print-type-size     variant `D24`: 0 bytes
print-type-size     variant `D24_S8`: 0 bytes
print-type-size     variant `D32`: 0 bytes
print-type-size type: `format::U8Norm`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `shade::BaseType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `F32`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size type: `shade::CompatibilityError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ErrorArraySize`: 0 bytes
print-type-size     variant `ErrorBaseType`: 0 bytes
print-type-size     variant `ErrorContainer`: 0 bytes
print-type-size type: `shade::IsArray`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size     variant `NoArray`: 0 bytes
print-type-size type: `shade::IsComparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `NoCompare`: 0 bytes
print-type-size type: `shade::IsMultiSample`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `MultiSample`: 0 bytes
print-type-size     variant `NoMultiSample`: 0 bytes
print-type-size type: `shade::IsRect`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Rect`: 0 bytes
print-type-size     variant `NoRect`: 0 bytes
print-type-size type: `shade::MatrixFormat`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ColumnMajor`: 0 bytes
print-type-size     variant `RowMajor`: 0 bytes
print-type-size type: `shade::Stage`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Vertex`: 0 bytes
print-type-size     variant `Geometry`: 0 bytes
print-type-size     variant `Pixel`: 0 bytes
print-type-size type: `shade::Usage`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::ops::RangeFrom<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<<dummy::DummyResources as Resources>::DepthStencilView>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<<dummy::DummyResources as Resources>::RenderTargetView>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<draw_state::state::MultiSample>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `tex::CubeFace`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PosX`: 0 bytes
print-type-size     variant `NegX`: 0 bytes
print-type-size     variant `PosY`: 0 bytes
print-type-size     variant `NegY`: 0 bytes
print-type-size     variant `PosZ`: 0 bytes
print-type-size     variant `NegZ`: 0 bytes
print-type-size type: `tex::DepthStencilFlags`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `tex::WrapMode`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tile`: 0 bytes
print-type-size     variant `Mirror`: 0 bytes
print-type-size     variant `Clamp`: 0 bytes
print-type-size     variant `Border`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.4.0/src/tex.rs:330:44: 332:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `bitflags::<unnamed>::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `draw_state::state::MultiSample`: 0 bytes, alignment: 1 bytes
print-type-size type: `dummy::DummyCommandBuffer`: 0 bytes, alignment: 1 bytes
print-type-size type: `dummy::DummyResources`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D24`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D24_S8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::D32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Float`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Inorm`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Int`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R10_G10_B10_A2`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R11_G11_B10`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16_G16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16_G16_B16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R16_G16_B16_A16`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32_G32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32_G32_B32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R32_G32_B32_A32`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R4_G4`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R4_G4_B4_A4`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R5_G5_B5_A1`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R5_G6_B5`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R8_G8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::R8_G8_B8_A8`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Srgb`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Uint`: 0 bytes, alignment: 1 bytes
print-type-size type: `format::Unorm`: 0 bytes, alignment: 1 bytes
print-type-size type: `pso::CreationError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[f32; 2]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[f32; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[f32; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::AttributeVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::ConstVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::ConstantBufferVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::OutputVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::SamplerVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::TextureVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&shade::UnorderedVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<(format::Format, pso::ColorInfo)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<(pso::Element<format::Format>, u8)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::AttributeVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::ConstVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::ConstantBufferVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::OutputVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::SamplerVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::TextureVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<shade::UnorderedVar>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Buffer>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::DepthStencilView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Fence>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::PipelineStateObject>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Program>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::RenderTargetView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Sampler>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Shader>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::ShaderResourceView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::Texture>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<<dummy::DummyResources as Resources>::UnorderedAccessView>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `gfx_core::shade::UniformValue`: 68 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `I32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `I32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `I32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `I32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `F32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `F32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix2`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix3`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `F32Matrix4`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `factory::PipelineStateError`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Program`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `DescriptorInit`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `DeviceCreate`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `shade::ProgramError`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vertex`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Pixel`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Link`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `gfx_core::shade::AttributeVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `gfx_core::shade::CreateShaderError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ModelNotSupported`: 0 bytes
print-type-size     variant `StageNotSupported`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CompilationFailed`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `gfx_core::shade::SamplerVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.ty`: 2 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `pso::InitError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `VertexImport`: 4 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 3 bytes
print-type-size     variant `ConstantBuffer`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `GlobalConstant`: 16 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `ResourceView`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `UnorderedView`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `Sampler`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `PixelExport`: 4 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 3 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `gfx_core::shade::ContainerType`: 4 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Single`: 0 bytes
print-type-size     variant `Vector`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Matrix`: 3 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         field `.2`: 1 bytes
print-type-size type: `pso::resource::Sampler`: 3 bytes, alignment: 1 bytes
print-type-size     field `.0`: 3 bytes
print-type-size type: `std::option::Option<(u8, gfx_core::shade::Usage)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<gfx_core::format::Format>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `gfx_core::format::Format`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `gfx_core::shade::SamplerType`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `gfx_core::format::ChannelType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Int`: 0 bytes
print-type-size     variant `Uint`: 0 bytes
print-type-size     variant `Inorm`: 0 bytes
print-type-size     variant `Unorm`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Srgb`: 0 bytes
print-type-size type: `gfx_core::format::SurfaceType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `R4_G4`: 0 bytes
print-type-size     variant `R4_G4_B4_A4`: 0 bytes
print-type-size     variant `R5_G5_B5_A1`: 0 bytes
print-type-size     variant `R5_G6_B5`: 0 bytes
print-type-size     variant `R8`: 0 bytes
print-type-size     variant `R8_G8`: 0 bytes
print-type-size     variant `R8_G8_B8_A8`: 0 bytes
print-type-size     variant `R10_G10_B10_A2`: 0 bytes
print-type-size     variant `R11_G11_B10`: 0 bytes
print-type-size     variant `R16`: 0 bytes
print-type-size     variant `R16_G16`: 0 bytes
print-type-size     variant `R16_G16_B16`: 0 bytes
print-type-size     variant `R16_G16_B16_A16`: 0 bytes
print-type-size     variant `R32`: 0 bytes
print-type-size     variant `R32_G32`: 0 bytes
print-type-size     variant `R32_G32_B32`: 0 bytes
print-type-size     variant `R32_G32_B32_A32`: 0 bytes
print-type-size     variant `D16`: 0 bytes
print-type-size     variant `D24`: 0 bytes
print-type-size     variant `D24_S8`: 0 bytes
print-type-size     variant `D32`: 0 bytes
print-type-size type: `gfx_core::shade::BaseType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `F32`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size type: `gfx_core::shade::IsComparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `NoCompare`: 0 bytes
print-type-size type: `gfx_core::shade::IsRect`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Rect`: 0 bytes
print-type-size     variant `NoRect`: 0 bytes
print-type-size type: `gfx_core::shade::MatrixFormat`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ColumnMajor`: 0 bytes
print-type-size     variant `RowMajor`: 0 bytes
print-type-size type: `gfx_core::shade::Stage`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Vertex`: 0 bytes
print-type-size     variant `Geometry`: 0 bytes
print-type-size     variant `Pixel`: 0 bytes
print-type-size type: `gfx_core::shade::Usage`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `pso::target::Scissor`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `gfx_core::pso::CreationError`: 0 bytes, alignment: 1 bytes
print-type-size type: `pso::target::BlendRef`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `pipeline::PipelineBuilder`: 96 bytes, alignment: 8 bytes
print-type-size     field `.cur_stage`: 48 bytes
print-type-size     field `.pipe`: 48 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `pipeline::stage::Step`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ClearTarget`: 44 bytes
print-type-size         field `.buffers`: 24 bytes
print-type-size         field `.value`: 20 bytes
print-type-size     variant `DrawObjects`: 0 bytes
print-type-size     variant `UseTarget`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `frontend::Renderer`: 48 bytes, alignment: 8 bytes
print-type-size     field `.back`: 0 bytes
print-type-size     field `.pipe`: 48 bytes
print-type-size type: `pipeline::Pipeline`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.stages`: 24 bytes
print-type-size type: `pipeline::stage::Stage`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.steps`: 24 bytes
print-type-size type: `std::option::Option<pipeline::stage::Stage>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<pipeline::stage::Stage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<pipeline::stage::Step>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<[f32; 4]>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<pipeline::stage::Stage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<pipeline::stage::Step>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<pipeline::stage::Stage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<pipeline::stage::Step>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<pipeline::stage::Stage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<pipeline::stage::Step>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::nonzero::NonZero<*const pipeline::stage::Stage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const pipeline::stage::Step>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::option::Option<&f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&pipeline::stage::Stage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&pipeline::stage::Step>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<pipeline::stage::Stage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<pipeline::stage::Step>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `backend::Backend`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `frame::Frame`: 0 bytes, alignment: 1 bytes
print-type-size type: `frame::FrameBuilder`: 0 bytes, alignment: 1 bytes
print-type-size     field `.frame`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&pipeline::stage::Stage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&pipeline::stage::Step>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<pipeline::stage::Stage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<pipeline::stage::Step>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::InternalNode<std::string::String, serde_json::Value>`: 728 bytes, alignment: 8 bytes
print-type-size     field `.data`: 632 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<std::string::String, serde_json::Value>`: 632 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 352 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::option::Option<TargetInfo>`: 200 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size type: `std::result::Result<TargetInfo, Error>`: 200 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `TargetInfo`: 192 bytes, alignment: 8 bytes
print-type-size     field `.arch`: 32 bytes
print-type-size     field `.vendor`: 32 bytes
print-type-size     field `.os`: 32 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.endian`: 32 bytes
print-type-size     field `.pointer_width`: 32 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, serde_json::Value, collections::btree::node::marker::Internal>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 96 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 32 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `collections::btree::node::InsertResult<std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Fit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Split`: 96 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 32 bytes
print-type-size         field `.3`: 16 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `phf::Map<&'static str, TargetInfo>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.disps`: 32 bytes
print-type-size     field `.entries`: 32 bytes
print-type-size type: `phf::Map<&str, TargetInfo>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.disps`: 32 bytes
print-type-size     field `.entries`: 32 bytes
print-type-size type: `std::collections::btree_map::Entry<std::string::String, serde_json::Value>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, serde_json::Value>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::hash::SipHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher24`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip24Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<std::string::String, serde_json::Value>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::result::Result<&str, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(), serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<bool, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<serde_json::Value, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<std::collections::BTreeMap<std::string::String, serde_json::Value>, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<std::option::Option<(std::string::String, serde_json::Value)>, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<std::option::Option<serde_json::Value>, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<std::option::Option<std::string::String>, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<std::option::Option<u8>, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<std::vec::Vec<serde_json::Value>, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<u16, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 62 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u8, serde_json::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `serde_json::Error`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Syntax`: 48 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.2`: 8 bytes
print-type-size     variant `Io`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `serde_json::de::DeserializerImpl<serde_json::read::IteratorRead<std::io::Bytes<std::fs::File>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.read`: 32 bytes
print-type-size     field `.str_buf`: 24 bytes
print-type-size type: `std::option::Option<(std::string::String, serde_json::Value)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Internal`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::Leaf>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `collections::btree::search::SearchResult<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::LeafOrInternal, collections::btree::node::marker::LeafOrInternal>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `GoDown`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<std::string::String, serde_json::Value>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::env::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Map<std::slice::Split<u8, fn(&u8) -> bool>, fn(&[u8]) -> std::path::PathBuf>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::option::Option<serde_json::Value>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, &mut collections::btree::node::Root<std::string::String, serde_json::Value>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<serde_json::Value, Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys::imp::os::SplitPaths`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::LeafOrInternal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `phf::Slice<(&'static str, TargetInfo)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Static`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Dynamic`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `phf::Slice<(&str, TargetInfo)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Static`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Dynamic`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `phf::Slice<(u32, u32)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Static`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Dynamic`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `serde_json::ErrorCode`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Custom`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidType`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidValue`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidLength`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `UnknownVariant`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnknownField`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MissingField`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `EOFWhileParsingList`: 0 bytes
print-type-size     variant `EOFWhileParsingObject`: 0 bytes
print-type-size     variant `EOFWhileParsingString`: 0 bytes
print-type-size     variant `EOFWhileParsingValue`: 0 bytes
print-type-size     variant `ExpectedColon`: 0 bytes
print-type-size     variant `ExpectedListCommaOrEnd`: 0 bytes
print-type-size     variant `ExpectedObjectCommaOrEnd`: 0 bytes
print-type-size     variant `ExpectedSomeIdent`: 0 bytes
print-type-size     variant `ExpectedSomeValue`: 0 bytes
print-type-size     variant `InvalidEscape`: 0 bytes
print-type-size     variant `InvalidNumber`: 0 bytes
print-type-size     variant `NumberOutOfRange`: 0 bytes
print-type-size     variant `InvalidUnicodeCodePoint`: 0 bytes
print-type-size     variant `KeyMustBeAString`: 0 bytes
print-type-size     variant `LoneLeadingSurrogateInHexEscape`: 0 bytes
print-type-size     variant `TrailingCharacters`: 0 bytes
print-type-size     variant `UnexpectedEndOfHexEscape`: 0 bytes
print-type-size type: `serde_json::Value`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Object`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `serde_json::read::IteratorRead<std::io::Bytes<std::fs::File>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.ch`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::borrow::Cow<'static, str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::result::Result<u8, std::io::Error>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::fs::File, Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::slice::Split<u8, fn(&u8) -> bool>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.pred`: 8 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `Error`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TargetUnset`: 0 bytes
print-type-size     variant `TargetNotFound`: 0 bytes
print-type-size     variant `InvalidSpec`: 0 bytes
print-type-size     variant `Io`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, serde_json::Value, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, serde_json::Value, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, serde_json::Value, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `serde::iter::LineColIterator<std::io::Bytes<std::fs::File>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.line`: 8 bytes, alignment: 8 bytes
print-type-size     field `.col`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, serde_json::Value>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<u8>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u8, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::imp::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(&'static str, TargetInfo)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(&str, TargetInfo)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(u32, u32)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<serde_json::Value>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&'static str, TargetInfo)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&str, TargetInfo)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(u32, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<serde_json::Value>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `collections::btree::node::Root<std::string::String, serde_json::Value>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, TargetInfo)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(u32, u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<collections::btree::node::BoxedNode<std::string::String, serde_json::Value>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<serde_json::Value>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `serde_json::de::MapVisitor<serde_json::read::IteratorRead<std::io::Bytes<std::fs::File>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.de`: 8 bytes
print-type-size     field `.first`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `serde_json::de::SeqVisitor<serde_json::read::IteratorRead<std::io::Bytes<std::fs::File>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.de`: 8 bytes
print-type-size     field `.first`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `serde_json::read::Position`: 16 bytes, alignment: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.column`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::append_to_string::Guard`: 16 bytes, alignment: 8 bytes
print-type-size     field `.s`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&&str, &TargetInfo)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::sys::imp::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_flags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:142:23: 143:83 json:&serde_json::Value]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut std::fs::File]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(1738) => serde_json/132bb0d62db2f713fed175b64c12b3ac::read[0]::as_str[0]::{{closure}}[0] } 0:&&serde_json::read::IteratorRead<std::io::Bytes<std::fs::File>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<std::string::String>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<std::string::String, serde_json::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (&'static str, TargetInfo)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (&str, TargetInfo)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (u32, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<std::string::String, serde_json::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const serde_json::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&TargetInfo>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&serde_json::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Unique<(&'static str, TargetInfo)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(&str, TargetInfo)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(u32, u32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<std::string::String, serde_json::Value>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<serde_json::Value>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::io::Bytes<std::fs::File>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `serde::de::Type`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size     variant `Usize`: 0 bytes
print-type-size     variant `U8`: 0 bytes
print-type-size     variant `U16`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `U64`: 0 bytes
print-type-size     variant `Isize`: 0 bytes
print-type-size     variant `I8`: 0 bytes
print-type-size     variant `I16`: 0 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `I64`: 0 bytes
print-type-size     variant `F32`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `String`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `Option`: 0 bytes
print-type-size     variant `Seq`: 0 bytes
print-type-size     variant `Map`: 0 bytes
print-type-size     variant `UnitStruct`: 0 bytes
print-type-size     variant `NewtypeStruct`: 0 bytes
print-type-size     variant `TupleStruct`: 0 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size     variant `FieldName`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size     variant `VariantName`: 0 bytes
print-type-size     variant `StructVariant`: 0 bytes
print-type-size     variant `TupleVariant`: 0 bytes
print-type-size     variant `UnitVariant`: 0 bytes
print-type-size     variant `Bytes`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `<serde_json::Value as serde::de::Deserialize>::deserialize::ValueVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:120:36: 120:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:120:69: 120:97]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:137:51: 137:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:138:65: 141:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:143:42: 143:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:149:50: 149:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/target_build_utils-0.1.2/src/lib.rs:151:59: 151:73]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4161) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::append_to_string[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(17), node: DefIndex(56) => phf/3d87a8e2eaae27c16d3f384605c11354::map[0]::{{impl}}[2]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1723) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::unwrap_unchecked[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1786) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1793) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::{{impl}}[62]::insert[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Immut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Mut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `serde::de::impls::BTreeMapVisitor<std::string::String, serde_json::Value>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `serde::de::impls::StringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `serde::de::impls::VecVisitor<serde_json::Value>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip24Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (std::string::String, serde_json::Value)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&'static str, TargetInfo)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, TargetInfo)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u32, u32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<std::string::String, serde_json::Value>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<serde_json::Value>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::collections::BTreeMap<std::string::String, serde_json::Value>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip24Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<serde_json::Value>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `gfx_core::shade::UniformValue`: 68 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `I32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `F32`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `I32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `I32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `I32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Vector2`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `F32Vector3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `F32Vector4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix2`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `F32Matrix3`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `F32Matrix4`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `factory::PipelineStateError`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Program`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `DescriptorInit`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `DeviceCreate`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `gfx_core::shade::ConstantBufferVar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.size`: 8 bytes, alignment: 8 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `shade::ProgramError`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vertex`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Pixel`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Link`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `gfx_core::shade::AttributeVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `gfx_core::shade::CreateShaderError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ModelNotSupported`: 0 bytes
print-type-size     variant `StageNotSupported`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CompilationFailed`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `gfx_core::shade::OutputVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.container`: 4 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `gfx_core::shade::SamplerVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.ty`: 2 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `gfx_core::shade::TextureVar`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.slot`: 1 bytes
print-type-size     field `.base_type`: 1 bytes
print-type-size     field `.ty`: 3 bytes
print-type-size     field `.usage`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `pso::InitError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `VertexImport`: 4 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 3 bytes
print-type-size     variant `ConstantBuffer`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `GlobalConstant`: 16 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `ResourceView`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `UnorderedView`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `Sampler`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `PixelExport`: 4 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 3 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::result::Result<(gfx_core::pso::Element<gfx_core::format::Format>, u8), gfx_core::format::Format>>`: 24 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::result::Result<(gfx_core::pso::Element<gfx_core::format::Format>, u8), gfx_core::format::Format>`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 19 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::result::Result<(gfx_core::format::Format, gfx_core::pso::ColorInfo), gfx_core::format::Format>>`: 17 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.12.1/src/pso/buffer.rs:116:18: 116:45 self:&mut &mut pso::buffer::RawVertexBuffer, at:&&gfx_core::shade::AttributeVar]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::slice::Repr<(&str, gfx_core::pso::Element<gfx_core::format::Format>, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(gfx_core::format::Format, gfx_core::pso::ColorInfo), gfx_core::format::Format>`: 16 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         field `.0`: 15 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::slice::Iter<(&str, gfx_core::pso::Element<gfx_core::format::Format>, u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `gfx_core::pso::ColorInfo`: 13 bytes, alignment: 1 bytes
print-type-size     field `.mask`: 1 bytes
print-type-size     field `.color`: 6 bytes
print-type-size     field `.alpha`: 6 bytes
print-type-size type: `gfx_core::pso::Element<gfx_core::format::Format>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.format`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.offset`: 4 bytes, alignment: 4 bytes
print-type-size     field `.stride`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<draw_state::state::Blend>`: 11 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 10 bytes
print-type-size         field `.0`: 10 bytes
print-type-size type: `draw_state::state::Blend`: 10 bytes, alignment: 1 bytes
print-type-size     field `.color`: 5 bytes
print-type-size     field `.alpha`: 5 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.12.1/src/pso/buffer.rs:115:26: 115:45 at:&&gfx_core::shade::AttributeVar]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `pso::buffer::RawVertexBuffer`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::option::Option<&(&str, gfx_core::pso::Element<gfx_core::format::Format>, u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<(), (gfx_core::shade::BaseType, gfx_core::shade::ContainerType)>>`: 7 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size type: `std::option::Option<draw_state::state::BlendChannel>`: 6 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 5 bytes
print-type-size         field `.0`: 5 bytes
print-type-size type: `std::result::Result<(), (gfx_core::shade::BaseType, gfx_core::shade::ContainerType)>`: 6 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 5 bytes
print-type-size         field `.0`: 5 bytes
print-type-size type: `draw_state::state::BlendChannel`: 5 bytes, alignment: 1 bytes
print-type-size     field `.equation`: 1 bytes
print-type-size     field `.source`: 2 bytes
print-type-size     field `.destination`: 2 bytes
print-type-size type: `gfx_core::shade::ContainerType`: 4 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Single`: 0 bytes
print-type-size     variant `Vector`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Matrix`: 3 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         field `.2`: 1 bytes
print-type-size type: `std::option::Option<std::result::Result<(), gfx_core::format::Format>>`: 4 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `gfx_core::shade::TextureType`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Buffer`: 0 bytes
print-type-size     variant `D1`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `D2`: 2 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `D3`: 0 bytes
print-type-size     variant `Cube`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `pso::buffer::RawConstantBuffer`: 3 bytes, alignment: 1 bytes
print-type-size     field `.0`: 3 bytes
print-type-size type: `pso::resource::RawShaderResource`: 3 bytes, alignment: 1 bytes
print-type-size     field `.0`: 3 bytes
print-type-size type: `pso::resource::Sampler`: 3 bytes, alignment: 1 bytes
print-type-size     field `.0`: 3 bytes
print-type-size type: `std::option::Option<(gfx_core::shade::Usage, u8)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<(u8, gfx_core::shade::Usage)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::option::Option<gfx_core::format::Format>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<(), gfx_core::format::Format>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `draw_state::state::Factor`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `SourceAlphaSaturated`: 0 bytes
print-type-size     variant `ZeroPlus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `OneMinus`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `gfx_core::format::Format`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `gfx_core::shade::SamplerType`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size type: `pso::target::RawRenderTarget`: 2 bytes, alignment: 1 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `draw_state::state::BlendValue`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SourceColor`: 0 bytes
print-type-size     variant `SourceAlpha`: 0 bytes
print-type-size     variant `DestColor`: 0 bytes
print-type-size     variant `DestAlpha`: 0 bytes
print-type-size     variant `ConstColor`: 0 bytes
print-type-size     variant `ConstAlpha`: 0 bytes
print-type-size type: `draw_state::state::ColorMask`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `draw_state::state::Equation`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Sub`: 0 bytes
print-type-size     variant `RevSub`: 0 bytes
print-type-size     variant `Min`: 0 bytes
print-type-size     variant `Max`: 0 bytes
print-type-size type: `gfx_core::format::ChannelType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Int`: 0 bytes
print-type-size     variant `Uint`: 0 bytes
print-type-size     variant `Inorm`: 0 bytes
print-type-size     variant `Unorm`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Srgb`: 0 bytes
print-type-size type: `gfx_core::format::SurfaceType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `R4_G4`: 0 bytes
print-type-size     variant `R4_G4_B4_A4`: 0 bytes
print-type-size     variant `R5_G5_B5_A1`: 0 bytes
print-type-size     variant `R5_G6_B5`: 0 bytes
print-type-size     variant `R8`: 0 bytes
print-type-size     variant `R8_G8`: 0 bytes
print-type-size     variant `R8_G8_B8_A8`: 0 bytes
print-type-size     variant `R10_G10_B10_A2`: 0 bytes
print-type-size     variant `R11_G11_B10`: 0 bytes
print-type-size     variant `R16`: 0 bytes
print-type-size     variant `R16_G16`: 0 bytes
print-type-size     variant `R16_G16_B16`: 0 bytes
print-type-size     variant `R16_G16_B16_A16`: 0 bytes
print-type-size     variant `R32`: 0 bytes
print-type-size     variant `R32_G32`: 0 bytes
print-type-size     variant `R32_G32_B32`: 0 bytes
print-type-size     variant `R32_G32_B32_A32`: 0 bytes
print-type-size     variant `D16`: 0 bytes
print-type-size     variant `D24`: 0 bytes
print-type-size     variant `D24_S8`: 0 bytes
print-type-size     variant `D32`: 0 bytes
print-type-size type: `gfx_core::shade::BaseType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `F32`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size type: `gfx_core::shade::IsArray`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size     variant `NoArray`: 0 bytes
print-type-size type: `gfx_core::shade::IsComparison`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `NoCompare`: 0 bytes
print-type-size type: `gfx_core::shade::IsMultiSample`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `MultiSample`: 0 bytes
print-type-size     variant `NoMultiSample`: 0 bytes
print-type-size type: `gfx_core::shade::IsRect`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Rect`: 0 bytes
print-type-size     variant `NoRect`: 0 bytes
print-type-size type: `gfx_core::shade::MatrixFormat`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ColumnMajor`: 0 bytes
print-type-size     variant `RowMajor`: 0 bytes
print-type-size type: `gfx_core::shade::Stage`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Vertex`: 0 bytes
print-type-size     variant `Geometry`: 0 bytes
print-type-size     variant `Pixel`: 0 bytes
print-type-size type: `gfx_core::shade::Usage`: 1 bytes, alignment: 1 bytes
print-type-size     field `.bits`: 1 bytes
print-type-size type: `pso::target::Scissor`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.12.1/src/pso/target.rs:123:35: 123:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.12.1/src/pso/target.rs:124:35: 124:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `gfx_core::pso::CreationError`: 0 bytes, alignment: 1 bytes
print-type-size type: `pso::target::BlendRef`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, gfx_core::pso::Element<gfx_core::format::Format>, u8)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::InternalNode<std::string::String, std::string::String>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<std::string::String, std::string::String>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `collections::btree::node::InternalNode<u8, std::vec::Vec<std::string::String>>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.data`: 296 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>`: 296 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 11 bytes
print-type-size     padding: 5 bytes
print-type-size     field `.vals`: 264 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `header::common::content_disposition::DispositionParam`: 232 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Filename`: 224 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 168 bytes
print-type-size         field `.2`: 24 bytes
print-type-size     variant `Ext`: 48 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size type: `std::result::Result<header::parsing::ExtendedValue, error::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<server::request::Request, error::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `header::parsing::ExtendedValue`: 224 bytes, alignment: 8 bytes
print-type-size     field `.charset`: 32 bytes
print-type-size     field `.language_tag`: 168 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `server::request::Request`: 224 bytes, alignment: 8 bytes
print-type-size     field `.remote_addr`: 32 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.uri`: 96 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.body`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(std::string::String, cookie::Cookie)>`: 216 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 216 bytes
print-type-size         field `.0`: 216 bytes
print-type-size type: `client::RequestBuilder`: 200 bytes, alignment: 8 bytes
print-type-size     field `.client`: 8 bytes
print-type-size     field `.url`: 96 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.body`: 40 bytes
print-type-size type: `cookie::Cookie`: 192 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `.expires`: 48 bytes
print-type-size     field `.max_age`: 16 bytes
print-type-size     field `.domain`: 24 bytes
print-type-size     field `.path`: 24 bytes
print-type-size     field `.secure`: 1 bytes
print-type-size     field `.httponly`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.custom`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<cookie::Cookie>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size type: `std::result::Result<client::response::Response, error::Error>`: 192 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<cookie::Cookie, ()>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size type: `client::response::Response`: 184 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.headers`: 24 bytes, alignment: 8 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.url`: 88 bytes, alignment: 8 bytes
print-type-size     field `.status_raw`: 40 bytes
print-type-size     field `.message`: 16 bytes
print-type-size type: `std::result::Result<header::shared::quality_item::QualityItem<language_tags::LanguageTag>, error::Error>`: 184 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `cookie::CookieJar`: 176 bytes, alignment: 8 bytes
print-type-size     field `.flavor`: 176 bytes
print-type-size type: `cookie::jar::Flavor`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Child`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size type: `header::shared::quality_item::QualityItem<language_tags::LanguageTag>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.item`: 168 bytes
print-type-size     field `.quality`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `http::h2::MessageState`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Idle`: 0 bytes
print-type-size     variant `Writing`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Reading`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size type: `std::result::Result<client::request::Request<net::Fresh>, error::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<client::request::Request<net::Streaming>, error::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<httparse::Status<(http::h1::Incoming<(method::Method, uri::RequestUri)>, usize)>, error::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<language_tags::LanguageTag, language_tags::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 175 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/http/h1.rs:136:34: 239:10 res:&mut std::result::Result<http::message::RequestHead, error::Error>, is_proxied:&bool, head:http::message::RequestHead, method:&mut std::option::Option<method::Method>]`: 168 bytes, alignment: 8 bytes
print-type-size     end padding: 168 bytes
print-type-size type: `client::request::Request<net::Fresh>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.url`: 88 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.message`: 16 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `client::request::Request<net::Streaming>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.url`: 88 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.message`: 16 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `cookie::jar::Root`: 168 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size     field `.new_cookies`: 48 bytes
print-type-size     field `.removed_cookies`: 48 bytes
print-type-size     field `._key`: 24 bytes
print-type-size type: `core::num::bignum::Big32x40`: 168 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.base`: 160 bytes
print-type-size type: `http::h2::Http2Request`: 168 bytes, alignment: 8 bytes
print-type-size     field `.head`: 144 bytes
print-type-size     field `.body`: 24 bytes
print-type-size type: `httparse::Status<(http::h1::Incoming<(method::Method, uri::RequestUri)>, usize)>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Complete`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size type: `language_tags::LanguageTag`: 168 bytes, alignment: 8 bytes
print-type-size     field `.language`: 24 bytes
print-type-size     field `.extlangs`: 24 bytes
print-type-size     field `.script`: 24 bytes
print-type-size     field `.region`: 24 bytes
print-type-size     field `.variants`: 24 bytes
print-type-size     field `.extensions`: 24 bytes
print-type-size     field `.privateuse`: 24 bytes
print-type-size type: `std::option::Option<http::h2::Http2Request>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size type: `std::option::Option<language_tags::LanguageTag>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size type: `std::result::Result<http::h1::Incoming<(method::Method, uri::RequestUri)>, error::Error>`: 168 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `http::h1::Incoming<(method::Method, uri::RequestUri)>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.subject`: 128 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size type: `std::result::Result<http::message::RequestHead, error::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `http::h1::Http11Message`: 144 bytes, alignment: 8 bytes
print-type-size     field `.is_proxied`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.method`: 40 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 96 bytes
print-type-size type: `http::message::RequestHead`: 144 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.url`: 88 bytes
print-type-size type: `core::str::SplitNInternal<&str>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 128 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `std::str::SplitN<&str>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.0`: 136 bytes
print-type-size type: `client::Client`: 128 bytes, alignment: 8 bytes
print-type-size     field `.protocol`: 16 bytes
print-type-size     field `.redirect_policy`: 16 bytes
print-type-size     field `.read_timeout`: 24 bytes
print-type-size     field `.write_timeout`: 24 bytes
print-type-size     field `.proxy`: 48 bytes
print-type-size type: `core::str::SplitInternal<&str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 104 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::hash_map::Entry<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Vacant`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::str::Split<&str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 64 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::result::Result<client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size     field `.is_closed`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.pool`: 8 bytes, alignment: 8 bytes
print-type-size type: `openssl_sys::BIO`: 112 bytes, alignment: 8 bytes
print-type-size     field `.method`: 8 bytes
print-type-size     field `.callback`: 8 bytes
print-type-size     field `.cb_arg`: 8 bytes
print-type-size     field `.init`: 4 bytes
print-type-size     field `.shutdown`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.retry_reason`: 4 bytes
print-type-size     field `.num`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ptr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.next_bio`: 8 bytes
print-type-size     field `.prev_bio`: 8 bytes
print-type-size     field `.references`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.num_read`: 8 bytes, alignment: 8 bytes
print-type-size     field `.num_write`: 8 bytes
print-type-size     field `.ex_data`: 16 bytes
print-type-size type: `std::option::Option<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 112 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `std::option::Option<std::result::Result<url::Url, url::ParseError>>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::result::Result<(http::message::ResponseHead, std::vec::Vec<u8>), error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::shared::quality_item::QualityItem<mime_crate::Mime>, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<uri::RequestUri, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::str::pattern::StrSearcher`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `alloc::arc::ArcInner<openssl::ssl::bio::BioMethod>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 80 bytes
print-type-size type: `client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.key`: 64 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.previous_response_expected_no_content`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `header::shared::quality_item::QualityItem<mime_crate::Mime>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.item`: 88 bytes
print-type-size     field `.quality`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `http::h1::Wrapper<http::h1::Stream>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.obj`: 96 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.key`: 64 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::option::Option<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::option::Option<header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size type: `std::option::Option<http::h1::Stream>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::result::Result<header::common::content_type::ContentType, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<mime_crate::Mime, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<url::Url, url::ParseError>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 95 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `uri::RequestUri`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AbsolutePath`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `AbsoluteUri`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Authority`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Star`: 0 bytes
print-type-size type: `core::str::SplitNInternal<char>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `header::common::content_type::ContentType`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 88 bytes
print-type-size type: `http::h1::Stream`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Idle`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Writing`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Reading`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `mime_crate::Mime`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size     field `.1`: 32 bytes
print-type-size     field `.2`: 24 bytes
print-type-size type: `std::iter::Map<std::str::RSplitN<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/shared/quality_item.rs:80:54: 80:66]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<((std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>)>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<header::common::prefer::Preference>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::result::Result<header::common::prefer::Preference, std::num::ParseIntError>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 87 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<header::common::prefer::Preference, std::option::Option<std::num::ParseIntError>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 87 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<httparse::Status<(http::h1::Incoming<http::RawStatus>, usize)>, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<mime_crate::Mime, ()>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::result::Result<std::io::BufWriter<Box<net::NetworkStream + Send>>, http::h1::EndError<std::io::BufWriter<Box<net::NetworkStream + Send>>>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::str::RSplitN<char>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 88 bytes
print-type-size type: `std::str::SplitN<char>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.0`: 88 bytes
print-type-size type: `url::Url`: 88 bytes, alignment: 8 bytes
print-type-size     field `.serialization`: 24 bytes
print-type-size     field `.scheme_end`: 4 bytes
print-type-size     field `.username_end`: 4 bytes
print-type-size     field `.host_start`: 4 bytes
print-type-size     field `.host_end`: 4 bytes
print-type-size     field `.host`: 20 bytes
print-type-size     field `.port`: 4 bytes
print-type-size     field `.path_start`: 4 bytes
print-type-size     field `.query_start`: 8 bytes
print-type-size     field `.fragment_start`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::Mutex<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `core::str::SplitInternal<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 56 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `header::common::prefer::Preference`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `RespondAsync`: 0 bytes
print-type-size     variant `ReturnRepresentation`: 0 bytes
print-type-size     variant `ReturnMinimal`: 0 bytes
print-type-size     variant `HandlingStrict`: 0 bytes
print-type-size     variant `HandlingLeniant`: 0 bytes
print-type-size     variant `Wait`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Extension`: 76 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.2`: 24 bytes
print-type-size type: `http::h1::EndError<std::io::BufWriter<Box<net::NetworkStream + Send>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 64 bytes
print-type-size type: `http::h1::HttpReader<buffer::BufReader<Box<net::NetworkStream + Send + 'static>>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SizedReader`: 64 bytes
print-type-size         field `.0`: 56 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `ChunkedReader`: 72 bytes
print-type-size         field `.0`: 56 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `EofReader`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `EmptyReader`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `http::h1::HttpReader<buffer::BufReader<Box<net::NetworkStream + Send>>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SizedReader`: 64 bytes
print-type-size         field `.0`: 56 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `ChunkedReader`: 72 bytes
print-type-size         field `.0`: 56 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `EofReader`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `EmptyReader`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `httparse::Status<(http::h1::Incoming<http::RawStatus>, usize)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Complete`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `openssl::ssl::bio::BioMethod`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `openssl_sys::BIO_METHOD`: 80 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.name`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bwrite`: 8 bytes
print-type-size     field `.bread`: 8 bytes
print-type-size     field `.bputs`: 8 bytes
print-type-size     field `.bgets`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.create`: 8 bytes
print-type-size     field `.destroy`: 8 bytes
print-type-size     field `.callback_ctrl`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::iter::FilterMap<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/parsing.rs:31:35: 34:24]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/parsing.rs:35:35: 35:53]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::FilterMap<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/parsing.rs:31:35: 34:24]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/prefer.rs:127:43: 138:10]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/prefer.rs:141:62: 141:99]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::str::Split<char>, fn(&str) -> &str {std::str::<impl str>::trim}>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:88:18: 103:14]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::Split<char>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/prefer.rs:127:43: 138:10]>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::Split<char>, fn(&str) -> &str {std::str::<impl str>::trim}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<header::internals::item::Item>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::any::TypeId, i32>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::result::Result<http::h1::Incoming<http::RawStatus>, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<http::message::ResponseHead, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::str::Split<char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `alloc::arc::ArcInner<std::thread::Inner>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `header::internals::item::Item`: 72 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 24 bytes
print-type-size     field `.typed`: 48 bytes
print-type-size type: `http::h1::Incoming<http::RawStatus>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.subject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size type: `http::message::ResponseHead`: 72 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.raw_status`: 40 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `openssl::ssl::error::OpensslError`: 72 bytes, alignment: 8 bytes
print-type-size     variant `UnknownError`: 72 bytes
print-type-size         field `.library`: 24 bytes
print-type-size         field `.function`: 24 bytes
print-type-size         field `.reason`: 24 bytes
print-type-size type: `server::Timeouts`: 72 bytes, alignment: 8 bytes
print-type-size     field `.read`: 24 bytes
print-type-size     field `.write`: 24 bytes
print-type-size     field `.keep_alive`: 24 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, std::string::String>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::IntoIter<u8, std::vec::Vec<std::string::String>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::Entry<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<std::any::TypeId, i32>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<Box<net::NetworkStream + Send>, std::io::IntoInnerError<std::io::BufWriter<Box<net::NetworkStream + Send>>>>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `http::h1::HttpWriter<std::io::BufWriter<Box<net::NetworkStream + Send + 'static>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ThroughWriter`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `ChunkedWriter`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `SizedWriter`: 56 bytes
print-type-size         field `.0`: 48 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `EmptyWriter`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `http::h1::HttpWriter<std::io::BufWriter<Box<net::NetworkStream + Send>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ThroughWriter`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `ChunkedWriter`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `SizedWriter`: 56 bytes
print-type-size         field `.0`: 48 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `EmptyWriter`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `server::Listening`: 64 bytes, alignment: 8 bytes
print-type-size     field `._guard`: 32 bytes
print-type-size     field `.socket`: 32 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, std::collections::hash::table::FullBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::any::TypeId, i32, std::collections::hash::table::FullBucket<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::any::TypeId, i32>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::io::IntoInnerError<std::io::BufWriter<Box<net::NetworkStream + Send>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size     field `.1`: 16 bytes
print-type-size type: `std::option::Option<(std::string::String, u16, client::pool::Scheme)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::option::Option<header::common::cache_control::CacheDirective>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::option::Option<header::common::upgrade::Protocol>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<header::common::cache_control::CacheDirective, std::num::ParseIntError>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<header::common::cache_control::CacheDirective, std::option::Option<std::num::ParseIntError>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<header::common::content_disposition::ContentDisposition, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::content_range::ContentRange, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::content_range::ContentRangeSpec, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::origin::Origin, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::range::Range, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::upgrade::Protocol, ()>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<server::response::Response<net::Streaming>, std::io::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::sync::Mutex<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 48 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `buffer::BufReader<&mut net::NetworkStream>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `buffer::BufReader<Box<net::NetworkStream + Send + 'static>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `buffer::BufReader<Box<net::NetworkStream + Send>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `header::common::cache_control::CacheDirective`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `NoCache`: 0 bytes
print-type-size     variant `NoStore`: 0 bytes
print-type-size     variant `NoTransform`: 0 bytes
print-type-size     variant `OnlyIfCached`: 0 bytes
print-type-size     variant `MaxAge`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MaxStale`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MinFresh`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `MustRevalidate`: 0 bytes
print-type-size     variant `Public`: 0 bytes
print-type-size     variant `Private`: 0 bytes
print-type-size     variant `ProxyRevalidate`: 0 bytes
print-type-size     variant `SMaxAge`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Extension`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size type: `header::common::content_disposition::ContentDisposition`: 56 bytes, alignment: 8 bytes
print-type-size     field `.disposition`: 32 bytes
print-type-size     field `.parameters`: 24 bytes
print-type-size type: `header::common::content_range::ContentRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `header::common::content_range::ContentRangeSpec`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Bytes`: 40 bytes
print-type-size         field `.range`: 24 bytes
print-type-size         field `.instance_length`: 16 bytes
print-type-size     variant `Unregistered`: 48 bytes
print-type-size         field `.unit`: 24 bytes
print-type-size         field `.resp`: 24 bytes
print-type-size type: `header::common::origin::Origin`: 56 bytes, alignment: 8 bytes
print-type-size     field `.scheme`: 24 bytes
print-type-size     field `.host`: 32 bytes
print-type-size type: `header::common::range::Range`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Bytes`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unregistered`: 48 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size type: `header::common::upgrade::Protocol`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 32 bytes
print-type-size     field `.version`: 24 bytes
print-type-size type: `httparse::Request`: 56 bytes, alignment: 8 bytes
print-type-size     field `.method`: 16 bytes
print-type-size     field `.path`: 16 bytes
print-type-size     field `.version`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.headers`: 16 bytes, alignment: 8 bytes
print-type-size type: `server::response::Response`: 56 bytes, alignment: 8 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.body`: 32 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.headers`: 8 bytes, alignment: 8 bytes
print-type-size     field `._writing`: 0 bytes
print-type-size type: `server::response::Response<net::Streaming>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.body`: 32 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.headers`: 8 bytes, alignment: 8 bytes
print-type-size     field `._writing`: 0 bytes
print-type-size type: `solicit::http::Response`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stream_id`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.headers`: 24 bytes, alignment: 8 bytes
print-type-size     field `.body`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, std::collections::hash::table::FullBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::any::TypeId, i32, std::collections::hash::table::FullBucket<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, std::collections::hash::table::FullBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::any::TypeId, i32, std::collections::hash::table::FullBucket<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, std::collections::hash::table::FullBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::any::TypeId, i32, std::collections::hash::table::FullBucket<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::GapThenFull<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.gap`: 24 bytes
print-type-size     field `.full`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::GapThenFull<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<header::common::authorization::Basic, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::if_range::IfRange, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::io::BufWriter<Box<net::NetworkStream + Send>>, (std::io::Error, Box<net::NetworkStream + Send>)>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::str::pattern::CharEqSearcher<char>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.haystack`: 16 bytes, alignment: 8 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.ascii_only`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::CharSearcher`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 40 bytes, alignment: 8 bytes
print-type-size type: `std::thread::Inner`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.lock`: 16 bytes
print-type-size     field `.cvar`: 16 bytes
print-type-size type: `client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.conns`: 40 bytes
print-type-size     field `.config`: 8 bytes
print-type-size type: `client::proxy::Proxy<net::HttpConnector, net::openssl::Openssl>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.connector`: 0 bytes
print-type-size     field `.proxy`: 40 bytes
print-type-size     field `.ssl`: 8 bytes
print-type-size type: `core::num::dec2flt::parse::ParseResult`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Valid`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `ShortcutToInf`: 0 bytes
print-type-size     variant `ShortcutToZero`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `header::common::authorization::Basic`: 48 bytes, alignment: 8 bytes
print-type-size     field `.username`: 24 bytes
print-type-size     field `.password`: 24 bytes
print-type-size type: `header::common::if_range::IfRange`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `EntityTag`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Date`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size type: `header::internals::cell::PtrMap<Box<header::HeaderFormat + Send + Sync + 'static>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `One`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Many`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `header::internals::cell::PtrMap<Box<header::HeaderFormat + Send + Sync>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `One`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Many`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `header::internals::cell::PtrMapCell<header::HeaderFormat + Send + Sync + 'static>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `header::internals::cell::PtrMapCell<header::HeaderFormat + Send + Sync>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `header::internals::vec_map::Entry<unicase::UniCase<header::CowStr>, header::internals::item::Item>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `openssl::ssl::bio::StreamState<net::HttpStream>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.panic`: 16 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashMap<std::string::String, cookie::Cookie>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::RefCell<std::collections::HashSet<std::string::String>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<header::internals::cell::PtrMap<Box<header::HeaderFormat + Send + Sync + 'static>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<header::internals::cell::PtrMap<Box<header::HeaderFormat + Send + Sync>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_cond_t>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::any::TypeId, i32>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::io::BufWriter<Box<net::NetworkStream + Send + 'static>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::BufWriter<Box<net::NetworkStream + Send>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<u8>, std::slice::Iter<u8>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<(std::borrow::Cow<'static, str>, u16)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<(std::borrow::Cow<str>, u16)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<(std::string::String, std::string::String)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<std::result::Result<u64, error::Error>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<time::Tm>`: 48 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size type: `std::result::Result<header::common::date::Date, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::common::expires::Expires, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::common::if_modified_since::IfModifiedSince, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::common::if_unmodified_since::IfUnmodifiedSince, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::common::last_modified::LastModified, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::shared::httpdate::HttpDate, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::shared::quality_item::QualityItem<header::shared::charset::Charset>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<time::Tm, time::ParseError>`: 48 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::sys::imp::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::sys_common::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `header::common::date::Date`: 44 bytes, alignment: 4 bytes
print-type-size     field `.0`: 44 bytes
print-type-size type: `header::common::expires::Expires`: 44 bytes, alignment: 4 bytes
print-type-size     field `.0`: 44 bytes
print-type-size type: `header::common::if_modified_since::IfModifiedSince`: 44 bytes, alignment: 4 bytes
print-type-size     field `.0`: 44 bytes
print-type-size type: `header::common::if_unmodified_since::IfUnmodifiedSince`: 44 bytes, alignment: 4 bytes
print-type-size     field `.0`: 44 bytes
print-type-size type: `header::common::last_modified::LastModified`: 44 bytes, alignment: 4 bytes
print-type-size     field `.0`: 44 bytes
print-type-size type: `header::shared::httpdate::HttpDate`: 44 bytes, alignment: 4 bytes
print-type-size     field `.0`: 44 bytes
print-type-size type: `time::Tm`: 44 bytes, alignment: 4 bytes
print-type-size     field `.tm_sec`: 4 bytes
print-type-size     field `.tm_min`: 4 bytes
print-type-size     field `.tm_hour`: 4 bytes
print-type-size     field `.tm_mday`: 4 bytes
print-type-size     field `.tm_mon`: 4 bytes
print-type-size     field `.tm_year`: 4 bytes
print-type-size     field `.tm_wday`: 4 bytes
print-type-size     field `.tm_yday`: 4 bytes
print-type-size     field `.tm_isdst`: 4 bytes
print-type-size     field `.tm_utcoff`: 4 bytes
print-type-size     field `.tm_nsec`: 4 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `core::num::dec2flt::parse::Decimal`: 40 bytes, alignment: 8 bytes
print-type-size     field `.integral`: 16 bytes
print-type-size     field `.fractional`: 16 bytes
print-type-size     field `.exp`: 8 bytes
print-type-size type: `header::internals::vec_map::VacantEntry<unicase::UniCase<header::CowStr>, header::internals::item::Item>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.key`: 32 bytes
print-type-size type: `header::shared::quality_item::QualityItem<header::shared::charset::Charset>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.item`: 32 bytes
print-type-size     field `.quality`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.item`: 32 bytes
print-type-size     field `.quality`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `http::RawStatus`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.1`: 32 bytes, alignment: 8 bytes
print-type-size type: `httparse::Response`: 40 bytes, alignment: 8 bytes
print-type-size     field `.version`: 2 bytes
print-type-size     field `.code`: 4 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.reason`: 16 bytes, alignment: 8 bytes
print-type-size     field `.headers`: 16 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `log::LogLocation`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__module_path`: 16 bytes
print-type-size     field `.__file`: 16 bytes
print-type-size     field `.__line`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::any::TypeId, i32>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashMap<std::string::String, cookie::Cookie>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::collections::HashSet<std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<header::HeaderFormat + Send + Sync + 'static>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::string::String, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::string::String, cookie::Cookie>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashSet<std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.map`: 40 bytes
print-type-size type: `std::collections::hash::table::BucketState<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::iter::Chain<std::slice::Iter<u8>, std::slice::Iter<u8>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<client::Body>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<header::common::accept_ranges::RangeUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<header::common::connection::ConnectionOption>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<header::shared::encoding::Encoding>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<method::Method>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<openssl::ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(&str, &str), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(&str, u16), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(), openssl::ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(*mut openssl_sys::BIO, std::sync::Arc<openssl::ssl::bio::BioMethod>), openssl::ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(std::option::Option<u64>, std::option::Option<()>), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<Box<header::HeaderFormat + Send + Sync>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<Box<http::message::HttpMessage>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<Box<net::NetworkStream + Send>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>, collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::Headers, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::accept::Accept, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::accept_charset::AcceptCharset, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::accept_encoding::AcceptEncoding, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::accept_language::AcceptLanguage, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::accept_ranges::AcceptRanges, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::accept_ranges::RangeUnit, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::access_control_allow_credentials::AccessControlAllowCredentials, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::access_control_allow_headers::AccessControlAllowHeaders, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::access_control_allow_methods::AccessControlAllowMethods, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::access_control_allow_origin::AccessControlAllowOrigin, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::access_control_expose_headers::AccessControlExposeHeaders, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::access_control_max_age::AccessControlMaxAge, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::common::access_control_request_headers::AccessControlRequestHeaders, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::access_control_request_method::AccessControlRequestMethod, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::allow::Allow, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::authorization::Bearer, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::cache_control::CacheControl, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::connection::Connection, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::connection::ConnectionOption, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<header::common::content_encoding::ContentEncoding, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::content_language::ContentLanguage, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::content_length::ContentLength, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::cookie::Cookie, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::etag::ETag, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::expect::Expect, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::common::from::From, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::host::Host, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::if_match::IfMatch, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::if_none_match::IfNoneMatch, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::location::Location, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::pragma::Pragma, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::prefer::Prefer, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::preference_applied::PreferenceApplied, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::range::ByteRangeSpec, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::referer::Referer, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::referrer_policy::ReferrerPolicy, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<header::common::server::Server, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::set_cookie::SetCookie, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::strict_transport_security::StrictTransportSecurity, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::transfer_encoding::TransferEncoding, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::upgrade::ProtocolName, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<header::common::upgrade::Upgrade, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::user_agent::UserAgent, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::common::vary::Vary, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::shared::charset::Charset, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::shared::encoding::Encoding, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<header::shared::entity::EntityTag, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<method::Method, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<net::HttpStream, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<openssl::ssl::Ssl, openssl::ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<openssl::ssl::SslContext, openssl::ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<openssl::ssl::SslStream<net::HttpStream>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<openssl::ssl::SslStream<net::HttpStream>, openssl::ssl::error::SslError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::net::SocketAddr, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::string::String, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::IntoIter<std::net::SocketAddr>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::common::accept_ranges::RangeUnit>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::common::cache_control::CacheDirective>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::common::connection::ConnectionOption>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::common::prefer::Preference>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::common::range::ByteRangeSpec>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::common::upgrade::Protocol>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::shared::encoding::Encoding>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::shared::entity::EntityTag>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<header::shared::quality_item::QualityItem<mime_crate::Mime>>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<method::Method>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<std::string::String>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::vec::Vec<unicase::UniCase<std::string::String>>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<u32, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<usize, openssl::ssl::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::vec::Drain<u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `std::option::Option<std::net::SocketAddr>`: 36 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `client::Body`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ChunkedBody`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `SizedBody`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `BufBody`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `client::pool::Scheme`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Http`: 0 bytes
print-type-size     variant `Https`: 0 bytes
print-type-size     variant `Other`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::ForceResult<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::Edge>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>, collections::btree::node::marker::KV>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.node`: 24 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `cookie::AttrVal`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 16 bytes
print-type-size type: `cookie::jar::Iter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.jar`: 8 bytes
print-type-size     field `.keys`: 24 bytes
print-type-size type: `error::Error`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Method`: 0 bytes
print-type-size     variant `Uri`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Version`: 0 bytes
print-type-size     variant `Header`: 0 bytes
print-type-size     variant `TooLarge`: 0 bytes
print-type-size     variant `Status`: 0 bytes
print-type-size     variant `Io`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ssl`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Http2`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Utf8`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `header::CowStr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `header::common::accept_ranges::RangeUnit`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Bytes`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Unregistered`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::common::access_control_allow_origin::AccessControlAllowOrigin`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Any`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `Value`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::common::access_control_request_method::AccessControlRequestMethod`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `header::common::connection::ConnectionOption`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KeepAlive`: 0 bytes
print-type-size     variant `Close`: 0 bytes
print-type-size     variant `ConnectionHeader`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::common::content_disposition::DispositionType`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Inline`: 0 bytes
print-type-size     variant `Attachment`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::common::etag::ETag`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `header::common::host::Host`: 32 bytes, alignment: 8 bytes
print-type-size     field `.hostname`: 24 bytes
print-type-size     field `.port`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `header::common::upgrade::ProtocolName`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Http`: 0 bytes
print-type-size     variant `Tls`: 0 bytes
print-type-size     variant `WebSocket`: 0 bytes
print-type-size     variant `H2c`: 0 bytes
print-type-size     variant `Unregistered`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::shared::charset::Charset`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Us_Ascii`: 0 bytes
print-type-size     variant `Iso_8859_1`: 0 bytes
print-type-size     variant `Iso_8859_2`: 0 bytes
print-type-size     variant `Iso_8859_3`: 0 bytes
print-type-size     variant `Iso_8859_4`: 0 bytes
print-type-size     variant `Iso_8859_5`: 0 bytes
print-type-size     variant `Iso_8859_6`: 0 bytes
print-type-size     variant `Iso_8859_7`: 0 bytes
print-type-size     variant `Iso_8859_8`: 0 bytes
print-type-size     variant `Iso_8859_9`: 0 bytes
print-type-size     variant `Iso_8859_10`: 0 bytes
print-type-size     variant `Shift_Jis`: 0 bytes
print-type-size     variant `Euc_Jp`: 0 bytes
print-type-size     variant `Iso_2022_Kr`: 0 bytes
print-type-size     variant `Euc_Kr`: 0 bytes
print-type-size     variant `Iso_2022_Jp`: 0 bytes
print-type-size     variant `Iso_2022_Jp_2`: 0 bytes
print-type-size     variant `Iso_8859_6_E`: 0 bytes
print-type-size     variant `Iso_8859_6_I`: 0 bytes
print-type-size     variant `Iso_8859_8_E`: 0 bytes
print-type-size     variant `Iso_8859_8_I`: 0 bytes
print-type-size     variant `Gb2312`: 0 bytes
print-type-size     variant `Big5`: 0 bytes
print-type-size     variant `Koi8_R`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::shared::encoding::Encoding`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Chunked`: 0 bytes
print-type-size     variant `Gzip`: 0 bytes
print-type-size     variant `Deflate`: 0 bytes
print-type-size     variant `Compress`: 0 bytes
print-type-size     variant `Identity`: 0 bytes
print-type-size     variant `EncodingExt`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::shared::entity::EntityTag`: 32 bytes, alignment: 8 bytes
print-type-size     field `.weak`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.tag`: 24 bytes, alignment: 8 bytes
print-type-size type: `http::h1::HttpReader<&mut buffer::BufReader<&mut net::NetworkStream + 'static>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SizedReader`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `ChunkedReader`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `EofReader`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `EmptyReader`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `http::h1::HttpReader<&mut buffer::BufReader<&mut net::NetworkStream>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SizedReader`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `ChunkedReader`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `EofReader`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `EmptyReader`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `http::h1::HttpWriter<&mut std::io::Write>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ThroughWriter`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `ChunkedWriter`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `SizedWriter`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `EmptyWriter`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `http::h2::Http2Response`: 32 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size type: `httparse::Header`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `method::Method`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Options`: 0 bytes
print-type-size     variant `Get`: 0 bytes
print-type-size     variant `Post`: 0 bytes
print-type-size     variant `Put`: 0 bytes
print-type-size     variant `Delete`: 0 bytes
print-type-size     variant `Head`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size     variant `Connect`: 0 bytes
print-type-size     variant `Patch`: 0 bytes
print-type-size     variant `Extension`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `mime_crate::Attr`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Charset`: 0 bytes
print-type-size     variant `Boundary`: 0 bytes
print-type-size     variant `Q`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `mime_crate::SubLevel`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Star`: 0 bytes
print-type-size     variant `Plain`: 0 bytes
print-type-size     variant `Html`: 0 bytes
print-type-size     variant `Xml`: 0 bytes
print-type-size     variant `Javascript`: 0 bytes
print-type-size     variant `Css`: 0 bytes
print-type-size     variant `EventStream`: 0 bytes
print-type-size     variant `Json`: 0 bytes
print-type-size     variant `WwwFormUrlEncoded`: 0 bytes
print-type-size     variant `Msgpack`: 0 bytes
print-type-size     variant `OctetStream`: 0 bytes
print-type-size     variant `FormData`: 0 bytes
print-type-size     variant `Png`: 0 bytes
print-type-size     variant `Gif`: 0 bytes
print-type-size     variant `Bmp`: 0 bytes
print-type-size     variant `Jpeg`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `mime_crate::TopLevel`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Star`: 0 bytes
print-type-size     variant `Text`: 0 bytes
print-type-size     variant `Image`: 0 bytes
print-type-size     variant `Audio`: 0 bytes
print-type-size     variant `Video`: 0 bytes
print-type-size     variant `Application`: 0 bytes
print-type-size     variant `Multipart`: 0 bytes
print-type-size     variant `Message`: 0 bytes
print-type-size     variant `Model`: 0 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `openssl::ssl::Error`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ZeroReturn`: 0 bytes
print-type-size     variant `WantRead`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `WantWrite`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `WantX509Lookup`: 0 bytes
print-type-size     variant `Stream`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ssl`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `openssl::ssl::error::SslError`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `StreamError`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `SslSessionClosed`: 0 bytes
print-type-size     variant `OpenSslErrors`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `openssl_sys::_STACK`: 32 bytes, alignment: 8 bytes
print-type-size     field `.num`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.data`: 8 bytes, alignment: 8 bytes
print-type-size     field `.sorted`: 4 bytes
print-type-size     field `.num_alloc`: 4 bytes
print-type-size     field `.comp`: 8 bytes
print-type-size type: `openssl_sys::stack_st_void`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 32 bytes
print-type-size type: `std::borrow::Cow<'static, str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash::table::Bucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::any::TypeId, i32, &mut std::collections::hash::table::RawTable<std::any::TypeId, i32>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, i32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::string::String, cookie::Cookie>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash_map::Iter<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::io::Cursor<std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<http::h1::Http11Message>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<http::h1::HttpWriter<&mut std::io::Write>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<std::io::BufWriter<Box<net::NetworkStream + Send>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.predicate`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::TakeWhile<std::slice::Iter<u8>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.predicate`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `V4`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V6`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size type: `std::option::Option<(&str, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(u8, std::vec::Vec<std::string::String>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<collections::btree::node::Handle<collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>, collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<header::common::range::ByteRangeSpec>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<header::shared::entity::EntityTag>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, &mut std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &mut std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>, &std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::result::Result<u64, std::io::Error>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::thread::JoinHandle<()>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::result::Result<(), std::io::Error>, Box<std::any::Any + Send>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::result::Result<usize, std::io::Error>, Box<std::any::Any + Send>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, serialize::base64::FromBase64Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u16, solicit::http::HttpError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 30 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::thread::JoinHandle<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::thread::JoinInner<()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.native`: 16 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.packet`: 8 bytes
print-type-size type: `std::vec::IntoIter<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::net::SocketAddr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `time::TmFmt`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tm`: 8 bytes
print-type-size     field `.format`: 24 bytes
print-type-size type: `unicase::UniCase<header::CowStr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 28 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/net.rs:682:54: 682:112 host:std::string::String]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::arc::ArcInner<openssl::ssl::SslContext>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Immut, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Mut, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, std::string::String, std::string::String, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Internal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::Leaf>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `collections::btree::node::NodeRef<collections::btree::node::marker::Owned, u8, std::vec::Vec<std::string::String>, collections::btree::node::marker::LeafOrInternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.root`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `cookie::jar::Child`: 24 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.read`: 8 bytes
print-type-size     field `.write`: 8 bytes
print-type-size type: `header::Headers`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `header::common::accept::Accept`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::accept_charset::AcceptCharset`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::accept_encoding::AcceptEncoding`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::accept_language::AcceptLanguage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::accept_ranges::AcceptRanges`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::access_control_allow_headers::AccessControlAllowHeaders`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::access_control_allow_methods::AccessControlAllowMethods`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::access_control_expose_headers::AccessControlExposeHeaders`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::access_control_request_headers::AccessControlRequestHeaders`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::allow::Allow`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::authorization::Bearer`: 24 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size type: `header::common::cache_control::CacheControl`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::connection::Connection`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::content_encoding::ContentEncoding`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::content_language::ContentLanguage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::cookie::Cookie`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::from::From`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::if_match::IfMatch`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Items`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::common::if_none_match::IfNoneMatch`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Items`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::common::location::Location`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::pragma::Pragma`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::common::prefer::Prefer`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::preference_applied::PreferenceApplied`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::range::ByteRangeSpec`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `FromTo`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `AllFrom`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Last`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `header::common::referer::Referer`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::server::Server`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::set_cookie::SetCookie`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::transfer_encoding::TransferEncoding`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::upgrade::Upgrade`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::user_agent::UserAgent`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::common::vary::Vary`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Items`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `header::internals::cell::OptCell<std::vec::Vec<std::vec::Vec<u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `header::internals::vec_map::VecMap<unicase::UniCase<header::CowStr>, header::internals::item::Item>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `http::h1::HttpWriter<&mut &mut std::io::Write>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ThroughWriter`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `ChunkedWriter`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SizedWriter`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `EmptyWriter`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `mime_crate::Value`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ext`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Http`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Https`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `serialize::base64::Config`: 24 bytes, alignment: 8 bytes
print-type-size     field `.char_set`: 1 bytes
print-type-size     field `.newline`: 1 bytes
print-type-size     field `.pad`: 1 bytes
print-type-size     padding: 5 bytes
print-type-size     field `.line_length`: 16 bytes, alignment: 8 bytes
print-type-size type: `solicit::http::HttpError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `IoError`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `InvalidFrame`: 0 bytes
print-type-size     variant `CompressionError`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size     variant `UnknownStreamId`: 0 bytes
print-type-size     variant `UnableToConnect`: 0 bytes
print-type-size     variant `MalformedResponse`: 0 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::BTreeMap<u8, std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::string::String, cookie::Cookie>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<cookie::Cookie>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::common::accept_ranges::RangeUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::common::cache_control::CacheDirective>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::common::connection::ConnectionOption>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::common::prefer::Preference>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::common::range::ByteRangeSpec>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::common::upgrade::Protocol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::shared::encoding::Encoding>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::shared::entity::EntityTag>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<mime_crate::Mime>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<method::Method>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<unicase::UniCase<std::string::String>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/mod.rs:206:61: 206:76]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(&u8, &[u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, Box<header::HeaderFormat + Send + Sync>)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, i32)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::string::String, ())>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(u64, u64)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<header::Headers>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::time::Duration>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<unicase::UniCase<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[u8], std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), url::<unnamed>::uts46::Errors>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<header::common::strict_transport_security::Directive, std::num::ParseIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<httparse::Status<usize>, httparse::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<net::HttpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<server::response::Body, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::net::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::ParseError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>, std::sync::PoisonError<std::sync::MutexGuard<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<std::collections::HashMap<std::any::TypeId, i32>>, std::sync::PoisonError<std::sync::MutexGuard<std::collections::HashMap<std::any::TypeId, i32>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sys_common::net::TcpStream, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<unicase::UniCase<std::string::String>, std::string::ParseError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(mime_crate::Attr, mime_crate::Value)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, std::string::String)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, std::vec::Vec<u8>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(u64, u64)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<cookie::Cookie>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::common::accept_ranges::RangeUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::common::cache_control::CacheDirective>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::common::connection::ConnectionOption>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::common::content_disposition::DispositionParam>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::common::prefer::Preference>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::common::range::ByteRangeSpec>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::common::upgrade::Protocol>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::shared::encoding::Encoding>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::shared::entity::EntityTag>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<httparse::Header>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<method::Method>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<openssl::ssl::error::OpenSslError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<openssl::ssl::error::OpensslError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<unicase::UniCase<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<url::<unnamed>::uts46::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `time::Fmt`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Rfc3339`: 0 bytes
print-type-size     variant `Ctime`: 0 bytes
print-type-size type: `unicase::UniCase<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `url::<unnamed>::uts46::Errors`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `url::ParseOptions`: 24 bytes, alignment: 8 bytes
print-type-size     field `.base_url`: 8 bytes
print-type-size     field `.encoding_override`: 0 bytes
print-type-size     field `.log_syntax_violation`: 16 bytes
print-type-size type: `url::host::HostInternal`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Domain`: 0 bytes
print-type-size     variant `Ipv4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ipv6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/http/h1.rs:251:34: 334:10 res:&mut std::result::Result<http::message::ResponseHead, error::Error>, method:&method::Method]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(20), node: DefIndex(1085) => openssl/5af36c1a5d59ad203b6ead3b49886e77::ssl[0]::bio[0]::bwrite[0]::{{closure}}[0] } 0:&mut &mut openssl::ssl::bio::StreamState<net::HttpStream>, 1:&&[u8]]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(20), node: DefIndex(1096) => openssl/5af36c1a5d59ad203b6ead3b49886e77::ssl[0]::bio[0]::bread[0]::{{closure}}[0] } 0:&mut &mut openssl::ssl::bio::StreamState<net::HttpStream>, 1:&mut &mut [u8]]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(mime_crate::Attr, mime_crate::Value)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<cookie::Cookie>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::common::accept_ranges::RangeUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::common::cache_control::CacheDirective>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::common::connection::ConnectionOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::common::content_disposition::DispositionParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::common::prefer::Preference>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::common::range::ByteRangeSpec>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::common::upgrade::Protocol>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::shared::encoding::Encoding>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::shared::entity::EntityTag>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<httparse::Header>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<method::Method>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<openssl::ssl::error::OpenSslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<openssl::ssl::error::OpensslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::net::SocketAddr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<unicase::UniCase<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<url::<unnamed>::uts46::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `client::RedirectPolicy`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `FollowNone`: 0 bytes
print-type-size     variant `FollowAll`: 0 bytes
print-type-size     variant `FollowIf`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `client::pool::Pool<net::HttpsConnector<net::openssl::OpensslClient>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.connector`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `collections::btree::node::Root<std::string::String, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `collections::btree::node::Root<u8, std::vec::Vec<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::num::dec2flt::rawfp::Unpacked`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sig`: 8 bytes
print-type-size     field `.k`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::num::diy_float::Fp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.e`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(mime_crate::Attr, mime_crate::Value)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::string::String, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::string::String, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<cookie::Cookie>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::common::accept_ranges::RangeUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::common::cache_control::CacheDirective>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::common::connection::ConnectionOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::common::content_disposition::DispositionParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::common::prefer::Preference>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::common::range::ByteRangeSpec>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::common::upgrade::Protocol>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::shared::encoding::Encoding>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::shared::entity::EntityTag>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<httparse::Header>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<method::Method>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<openssl::ssl::error::OpenSslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<openssl::ssl::error::OpensslError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<unicase::UniCase<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<url::<unnamed>::uts46::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `header::HeaderView`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `header::HeadersItems`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `header::common::strict_transport_security::Directive`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `MaxAge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `IncludeSubdomains`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `header::common::strict_transport_security::StrictTransportSecurity`: 16 bytes, alignment: 8 bytes
print-type-size     field `.include_subdomains`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.max_age`: 8 bytes, alignment: 8 bytes
print-type-size type: `header::internals::vec_map::OccupiedEntry<unicase::UniCase<header::CowStr>, header::internals::item::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size type: `http::h1::ConnAdapter<client::pool::Pool<net::HttpsConnector<net::openssl::OpensslClient>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `http::h1::Connector`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `http::h1::Http11Protocol`: 16 bytes, alignment: 8 bytes
print-type-size     field `.connector`: 16 bytes
print-type-size type: `http::h2::Http2ConnectError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `httparse::Status<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Complete`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Partial`: 0 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::notbsd::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `openssl::ssl::SslStream<net::HttpStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ssl`: 8 bytes
print-type-size     field `._method`: 8 bytes
print-type-size     field `._p`: 0 bytes
print-type-size type: `openssl_sys::CRYPTO_EX_DATA`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sk`: 8 bytes
print-type-size     field `.dummy`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `serialize::base64::FromBase64Error`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidBase64Byte`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `InvalidBase64Length`: 0 bytes
print-type-size type: `server::response::Body`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Chunked`: 0 bytes
print-type-size     variant `Sized`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<(std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::string::String, cookie::Cookie>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::append_to_string::Guard`: 16 bytes, alignment: 8 bytes
print-type-size     field `.s`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<(std::string::String, std::string::String)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<cookie::Cookie>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<header::common::connection::ConnectionOption>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<header::shared::encoding::Encoding>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<std::vec::Vec<u8>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Enumerate<&mut std::slice::Iter<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::FilterMap<header::HeadersItems, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/http/h2.rs:272:63: 279:6]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<std::vec::Vec<u8>>, fn(&std::vec::Vec<u8>) -> &[u8] {<std::vec::Vec<u8> as std::ops::Deref>::deref}>, fn(&[u8]) -> std::result::Result<u64, error::Error> {header::parsing::from_raw_str::<u64>}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<(u64, u64)>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/range.rs:88:40: 88:75]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<header::common::prefer::Preference>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/preference_applied.rs:68:53: 76:10]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<std::vec::Vec<u8>>, fn(&std::vec::Vec<u8>) -> &[u8] {<std::vec::Vec<u8> as std::ops::Deref>::deref}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::net::SocketAddrV4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&[std::vec::Vec<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&header::HeaderFormat + Send + Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&mut header::HeaderFormat + Send + Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ops::Fn(&'static str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ops::Fn(&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::any::TypeId, &Box<header::HeaderFormat + Send + Sync>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &(unicase::UniCase<header::CowStr>, header::internals::item::Item))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &cookie::Cookie)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::common::accept_ranges::RangeUnit)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::common::cache_control::CacheDirective)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::common::connection::ConnectionOption)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::common::prefer::Preference)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::common::range::ByteRangeSpec)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::common::upgrade::Protocol)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::shared::encoding::Encoding)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::shared::entity::EntityTag)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::shared::quality_item::QualityItem<header::shared::charset::Charset>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::shared::quality_item::QualityItem<language_tags::LanguageTag>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &header::shared::quality_item::QualityItem<mime_crate::Mime>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &method::Method)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &unicase::UniCase<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<Box<header::HeaderFormat + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<Box<net::NetworkStream + Send + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<Box<net::NetworkStream + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<Box<std::any::Any + Send + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<Box<std::any::Any + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<header::HeaderView>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::any::TypeId>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::sys::imp::thread::Thread>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), Box<std::any::Any + Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u64, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::slice::Iter<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(mime_crate::Attr, mime_crate::Value)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::string::String, std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::string::String, std::vec::Vec<u8>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<cookie::Cookie>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::common::accept_ranges::RangeUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::common::cache_control::CacheDirective>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::common::connection::ConnectionOption>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::common::content_disposition::DispositionParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::common::prefer::Preference>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::common::range::ByteRangeSpec>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::common::upgrade::Protocol>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::shared::encoding::Encoding>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::shared::entity::EntityTag>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<httparse::Header>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<method::Method>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<unicase::UniCase<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sync::Condvar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size type: `std::sync::Mutex<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sync::MutexGuard<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::MutexGuard<std::collections::HashMap<std::any::TypeId, i32>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 8 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<std::collections::HashMap<std::any::TypeId, i32>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `unicase::UniCase<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `url::percent_encoding::PercentDecode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `url::percent_encoding::PercentEncode<header::parsing::HTTP_VALUE>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.encode_set`: 0 bytes
print-type-size type: `time::ParseError`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `InvalidSecond`: 0 bytes
print-type-size     variant `InvalidMinute`: 0 bytes
print-type-size     variant `InvalidHour`: 0 bytes
print-type-size     variant `InvalidDay`: 0 bytes
print-type-size     variant `InvalidMonth`: 0 bytes
print-type-size     variant `InvalidYear`: 0 bytes
print-type-size     variant `InvalidDayOfWeek`: 0 bytes
print-type-size     variant `InvalidDayOfMonth`: 0 bytes
print-type-size     variant `InvalidDayOfYear`: 0 bytes
print-type-size     variant `InvalidZoneOffset`: 0 bytes
print-type-size     variant `InvalidTime`: 0 bytes
print-type-size     variant `InvalidSecondsSinceEpoch`: 0 bytes
print-type-size     variant `MissingFormatConverter`: 0 bytes
print-type-size     variant `InvalidFormatSpecifier`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `UnexpectedCharacter`: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/client/mod.rs:329:29: 329:69 streaming:&mut client::request::Request<net::Streaming>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/client/pool.rs:112:56: 116:14 should_remove:&mut bool]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/client/pool.rs:204:22: 207:14 self:&&mut client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/client/pool.rs:213:22: 216:14 self:&&client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/client/pool.rs:222:22: 225:14 self:&&client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/client/pool.rs:253:35: 258:14 self:&&mut client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/host.rs:77:13: 77:44 s:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/vec_map.rs:34:28: 34:55 self:&header::internals::vec_map::VecMap<unicase::UniCase<header::CowStr>, header::internals::item::Item>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/vec_map.rs:38:28: 38:59 self:&mut header::internals::vec_map::VecMap<unicase::UniCase<header::CowStr>, header::internals::item::Item>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/vec_map.rs:50:28: 50:54 self:&mut &mut header::internals::vec_map::VecMap<unicase::UniCase<header::CowStr>, header::internals::item::Item>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/vec_map.rs:57:34: 57:57 key:&&unicase::UniCase<header::CowStr>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/shared/httpdate.rs:36:63: 38:14 s:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/shared/httpdate.rs:38:24: 40:18 s:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/http/h1.rs:415:34: 432:10 res:&mut std::result::Result<(), error::Error>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::any::TypeId, Box<header::HeaderFormat + Send + Sync>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&std::any::TypeId]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1456) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search_mut[0]::{{closure}}[0] } 0:&&(std::string::String, u16, client::pool::Scheme)]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1456) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search_mut[0]::{{closure}}[0] } 0:&&std::any::TypeId]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&std::any::TypeId]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(3505) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::buffered[0]::{{impl}}[6]::flush[0]::{{closure}}[0] } 0:&mut &mut std::io::BufWriter<Box<net::NetworkStream + Send>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut http::h1::Http11Message]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<std::collections::HashMap<std::any::TypeId, i32>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(15), node: DefIndex(1133) => url/1adc43a6c304f9bdcc1d83b2fb59361f::{{impl}}[1]::port_or_known_default[0]::{{closure}}[0] } 0:&&url::Url]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<&mut std::slice::Iter<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<cookie::Cookie>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::common::accept_ranges::RangeUnit>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::common::cache_control::CacheDirective>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::common::connection::ConnectionOption>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::common::prefer::Preference>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::common::range::ByteRangeSpec>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::common::upgrade::Protocol>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::shared::encoding::Encoding>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::shared::entity::EntityTag>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<header::shared::quality_item::QualityItem<mime_crate::Mime>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<method::Method>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<u8>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<unicase::UniCase<std::string::String>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/mod.rs:206:61: 206:76]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::slice::Iter<u8>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5678) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::contains[0]::{{closure}}[0] } 0:&&header::common::connection::ConnectionOption]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5678) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::contains[0]::{{closure}}[0] } 0:&&u8]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(20), node: DefIndex(1113) => openssl/5af36c1a5d59ad203b6ead3b49886e77::ssl[0]::bio[0]::ctrl[0]::{{closure}}[0] } 0:&mut &mut openssl::ssl::bio::StreamState<net::HttpStream>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `client::pool::Config`: 8 bytes, alignment: 8 bytes
print-type-size     field `.max_idle`: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<std::string::String, std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `collections::btree::node::BoxedNode<u8, std::vec::Vec<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const &str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (mime_crate::Attr, mime_crate::Value)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::string::String, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (u64, u64)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<openssl::ssl::SslContext>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<openssl::ssl::bio::BioMethod>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<client::pool::PoolImpl<<net::HttpsConnector<net::openssl::OpensslClient> as net::NetworkConnector>::Stream>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<std::string::String, std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const cookie::Cookie>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::common::accept_ranges::RangeUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::common::cache_control::CacheDirective>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::common::connection::ConnectionOption>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::common::content_disposition::DispositionParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::common::prefer::Preference>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::common::range::ByteRangeSpec>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::common::upgrade::Protocol>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::shared::encoding::Encoding>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::shared::entity::EntityTag>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const httparse::Header>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const method::Method>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const openssl::ssl::error::OpenSslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const openssl::ssl::error::OpensslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const unicase::UniCase<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const url::<unnamed>::uts46::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `header::common::content_length::ContentLength`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `log::LogLevel`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `log::LogLevelFilter`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Off`: 0 bytes
print-type-size     variant `Error`: 0 bytes
print-type-size     variant `Warn`: 0 bytes
print-type-size     variant `Info`: 0 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size type: `net::HttpsConnector<net::openssl::OpensslClient>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ssl`: 8 bytes
print-type-size     field `.connector`: 0 bytes
print-type-size type: `net::openssl::Openssl`: 8 bytes, alignment: 8 bytes
print-type-size     field `.context`: 8 bytes
print-type-size type: `net::openssl::OpensslClient`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `openssl::ssl::Ssl`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ssl`: 8 bytes
print-type-size type: `openssl::ssl::SslContext`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size type: `openssl::ssl::SslContextOptions`: 8 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size type: `openssl::ssl::error::OpenSslError`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `openssl::x509::X509StoreContext`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ctx`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<client::pool::PooledStream<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<http::h1::Http11Message>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<http::h1::HttpWriter<&mut std::io::Write>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<std::io::BufWriter<Box<net::NetworkStream + Send>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(mime_crate::Attr, mime_crate::Value)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::string::String, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(u64, u64)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&Box<header::HeaderFormat + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&Box<net::NetworkStream + Send>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&client::Body>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&cookie::Cookie>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::accept_ranges::RangeUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::cache_control::CacheDirective>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::connection::Connection>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::connection::ConnectionOption>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::content_disposition::DispositionParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::content_length::ContentLength>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::location::Location>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::prefer::Preference>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::range::ByteRangeSpec>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::set_cookie::SetCookie>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::transfer_encoding::TransferEncoding>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::common::upgrade::Protocol>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::internals::item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::shared::encoding::Encoding>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::shared::entity::EntityTag>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&http::h1::HttpReader<buffer::BufReader<Box<net::NetworkStream + Send>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&http::h1::Stream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&httparse::Header>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&method::Method>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut Box<header::HeaderFormat + Send + Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut Box<net::NetworkStream + Send>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut header::common::transfer_encoding::TransferEncoding>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut header::internals::item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut http::h1::HttpReader<buffer::BufReader<Box<net::NetworkStream + Send>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut http::h1::HttpWriter<std::io::BufWriter<Box<net::NetworkStream + Send>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut http::h1::Stream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&unicase::UniCase<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&url::Url>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, *mut libc::c_void, *const openssl_sys::CRYPTO_EX_DATA, i32, i64, *const libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut libc::c_void, *mut libc::c_void, *mut openssl_sys::CRYPTO_EX_DATA, i32, i64, *mut libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(*mut openssl_sys::CRYPTO_EX_DATA, *mut openssl_sys::CRYPTO_EX_DATA, *mut libc::c_void, i32, i64, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(i32, *mut libc::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*const libc::c_void, *const libc::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, *const i8) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, *const i8, i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, *mut i8, i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, i32, *const i8, i32, i64, i64) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, i32, *const i8, i32, i64, i64)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, i32, i64, *mut libc::c_void) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, i32, std::option::Option<unsafe extern "C" fn(*mut openssl_sys::BIO, i32, *const i8, i32, i64, i64)>) -> i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::ptr::Shared<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<openssl::ssl::SslContext>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<openssl::ssl::bio::BioMethod>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<client::pool::PoolImpl<<net::HttpsConnector<net::openssl::OpensslClient> as net::NetworkConnector>::Stream>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(mime_crate::Attr, mime_crate::Value)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(u64, u64)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<std::string::String, std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<cookie::Cookie>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::common::accept_ranges::RangeUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::common::cache_control::CacheDirective>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::common::connection::ConnectionOption>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::common::content_disposition::DispositionParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::common::prefer::Preference>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::common::range::ByteRangeSpec>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::common::upgrade::Protocol>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::shared::encoding::Encoding>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::shared::entity::EntityTag>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<httparse::Header>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<method::Method>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<openssl::ssl::error::OpenSslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<openssl::ssl::error::OpensslError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::net::SocketAddr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<unicase::UniCase<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<url::<unnamed>::uts46::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<f32, std::num::ParseFloatError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Arc<openssl::ssl::SslContext>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<openssl::ssl::bio::BioMethod>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<client::pool::PoolImpl<<net::HttpsConnector<net::openssl::OpensslClient> as net::NetworkConnector>::Stream>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::imp::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `std::thread::Packet<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `header::common::access_control_max_age::AccessControlMaxAge`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `net::HttpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `net::HttpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `openssl::ssl::LibSslError`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ErrorNone`: 0 bytes
print-type-size     variant `ErrorSsl`: 0 bytes
print-type-size     variant `ErrorWantRead`: 0 bytes
print-type-size     variant `ErrorWantWrite`: 0 bytes
print-type-size     variant `ErrorWantX509Lookup`: 0 bytes
print-type-size     variant `ErrorSyscall`: 0 bytes
print-type-size     variant `ErrorZeroReturn`: 0 bytes
print-type-size     variant `ErrorWantConnect`: 0 bytes
print-type-size     variant `ErrorWantAccept`: 0 bytes
print-type-size type: `openssl::ssl::SslVerifyMode`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size type: `status::StatusCode`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size     variant `SwitchingProtocols`: 0 bytes
print-type-size     variant `Processing`: 0 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `Created`: 0 bytes
print-type-size     variant `Accepted`: 0 bytes
print-type-size     variant `NonAuthoritativeInformation`: 0 bytes
print-type-size     variant `NoContent`: 0 bytes
print-type-size     variant `ResetContent`: 0 bytes
print-type-size     variant `PartialContent`: 0 bytes
print-type-size     variant `MultiStatus`: 0 bytes
print-type-size     variant `AlreadyReported`: 0 bytes
print-type-size     variant `ImUsed`: 0 bytes
print-type-size     variant `MultipleChoices`: 0 bytes
print-type-size     variant `MovedPermanently`: 0 bytes
print-type-size     variant `Found`: 0 bytes
print-type-size     variant `SeeOther`: 0 bytes
print-type-size     variant `NotModified`: 0 bytes
print-type-size     variant `UseProxy`: 0 bytes
print-type-size     variant `TemporaryRedirect`: 0 bytes
print-type-size     variant `PermanentRedirect`: 0 bytes
print-type-size     variant `BadRequest`: 0 bytes
print-type-size     variant `Unauthorized`: 0 bytes
print-type-size     variant `PaymentRequired`: 0 bytes
print-type-size     variant `Forbidden`: 0 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `MethodNotAllowed`: 0 bytes
print-type-size     variant `NotAcceptable`: 0 bytes
print-type-size     variant `ProxyAuthenticationRequired`: 0 bytes
print-type-size     variant `RequestTimeout`: 0 bytes
print-type-size     variant `Conflict`: 0 bytes
print-type-size     variant `Gone`: 0 bytes
print-type-size     variant `LengthRequired`: 0 bytes
print-type-size     variant `PreconditionFailed`: 0 bytes
print-type-size     variant `PayloadTooLarge`: 0 bytes
print-type-size     variant `UriTooLong`: 0 bytes
print-type-size     variant `UnsupportedMediaType`: 0 bytes
print-type-size     variant `RangeNotSatisfiable`: 0 bytes
print-type-size     variant `ExpectationFailed`: 0 bytes
print-type-size     variant `ImATeapot`: 0 bytes
print-type-size     variant `MisdirectedRequest`: 0 bytes
print-type-size     variant `UnprocessableEntity`: 0 bytes
print-type-size     variant `Locked`: 0 bytes
print-type-size     variant `FailedDependency`: 0 bytes
print-type-size     variant `UpgradeRequired`: 0 bytes
print-type-size     variant `PreconditionRequired`: 0 bytes
print-type-size     variant `TooManyRequests`: 0 bytes
print-type-size     variant `RequestHeaderFieldsTooLarge`: 0 bytes
print-type-size     variant `UnavailableForLegalReasons`: 0 bytes
print-type-size     variant `InternalServerError`: 0 bytes
print-type-size     variant `NotImplemented`: 0 bytes
print-type-size     variant `BadGateway`: 0 bytes
print-type-size     variant `ServiceUnavailable`: 0 bytes
print-type-size     variant `GatewayTimeout`: 0 bytes
print-type-size     variant `HttpVersionNotSupported`: 0 bytes
print-type-size     variant `VariantAlsoNegotiates`: 0 bytes
print-type-size     variant `InsufficientStorage`: 0 bytes
print-type-size     variant `LoopDetected`: 0 bytes
print-type-size     variant `NotExtended`: 0 bytes
print-type-size     variant `NetworkAuthenticationRequired`: 0 bytes
print-type-size     variant `Unregistered`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::RangeTo<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::result::Result<u16, std::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::str::pattern::CharEqPattern<char>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::net::Socket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys_common::net::TcpListener`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::net::TcpStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hpack::decoder::DecoderError`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `HeaderIndexOutOfBounds`: 0 bytes
print-type-size     variant `IntegerDecodingError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `StringDecodingError`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `InvalidMaxDynamicSize`: 0 bytes
print-type-size type: `header::shared::quality_item::Quality`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hpack::decoder::StringDecodingError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `HuffmanDecoderError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::Range<url::Position>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::sys_common::poison::Guard, std::sync::PoisonError<std::sys_common::poison::Guard>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size     variant `Underflow`: 0 bytes
print-type-size type: `core::num::dec2flt::FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `core::num::dec2flt::parse::Sign`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Positive`: 0 bytes
print-type-size     variant `Negative`: 0 bytes
print-type-size type: `header::common::expect::Expect`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size type: `header::common::referrer_policy::ReferrerPolicy`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NoReferrer`: 0 bytes
print-type-size     variant `NoReferrerWhenDowngrade`: 0 bytes
print-type-size     variant `SameOrigin`: 0 bytes
print-type-size     variant `Origin`: 0 bytes
print-type-size     variant `OriginWhenCrossOrigin`: 0 bytes
print-type-size     variant `UnsafeUrl`: 0 bytes
print-type-size     variant `StrictOrigin`: 0 bytes
print-type-size     variant `StrictOriginWhenCrossOrigin`: 0 bytes
print-type-size type: `hpack::decoder::IntegerDecodingError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TooManyOctets`: 0 bytes
print-type-size     variant `ValueTooLarge`: 0 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `InvalidPrefix`: 0 bytes
print-type-size type: `hpack::huffman::HuffmanDecoderError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PaddingTooLarge`: 0 bytes
print-type-size     variant `InvalidPadding`: 0 bytes
print-type-size     variant `EOSInString`: 0 bytes
print-type-size type: `httparse::Error`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `HeaderName`: 0 bytes
print-type-size     variant `HeaderValue`: 0 bytes
print-type-size     variant `NewLine`: 0 bytes
print-type-size     variant `Status`: 0 bytes
print-type-size     variant `Token`: 0 bytes
print-type-size     variant `TooManyHeaders`: 0 bytes
print-type-size     variant `Version`: 0 bytes
print-type-size type: `language_tags::Error`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `DuplicateExtension`: 0 bytes
print-type-size     variant `EmptyExtension`: 0 bytes
print-type-size     variant `EmptyPrivateUse`: 0 bytes
print-type-size     variant `ForbiddenChar`: 0 bytes
print-type-size     variant `InvalidSubtag`: 0 bytes
print-type-size     variant `InvalidLanguage`: 0 bytes
print-type-size     variant `SubtagTooLong`: 0 bytes
print-type-size     variant `TooManyExtlangs`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `openssl::ssl::SslMethod`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Sslv23`: 0 bytes
print-type-size     variant `Tlsv1`: 0 bytes
print-type-size type: `serialize::base64::CharacterSet`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Standard`: 0 bytes
print-type-size     variant `UrlSafe`: 0 bytes
print-type-size type: `serialize::base64::Newline`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `LF`: 0 bytes
print-type-size     variant `CRLF`: 0 bytes
print-type-size type: `status::StatusClass`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Informational`: 0 bytes
print-type-size     variant `Success`: 0 bytes
print-type-size     variant `Redirection`: 0 bytes
print-type-size     variant `ClientError`: 0 bytes
print-type-size     variant `ServerError`: 0 bytes
print-type-size     variant `NoClass`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::iter::ChainState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `std::net::Shutdown`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Read`: 0 bytes
print-type-size     variant `Write`: 0 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size type: `std::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `std::num::ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::PoisonError<std::sys_common::poison::Guard>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.guard`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `std::sys_common::poison::Guard`: 1 bytes, alignment: 1 bytes
print-type-size     field `.panicking`: 1 bytes
print-type-size type: `url::<unnamed>::uts46::Error`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PunycodeError`: 0 bytes
print-type-size     variant `ValidityCriteria`: 0 bytes
print-type-size     variant `DissallowedByStd3AsciiRules`: 0 bytes
print-type-size     variant `DissallowedMappedInStd3`: 0 bytes
print-type-size     variant `DissallowedCharacter`: 0 bytes
print-type-size     variant `TooLongForDns`: 0 bytes
print-type-size type: `url::ParseError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `EmptyHost`: 0 bytes
print-type-size     variant `IdnaError`: 0 bytes
print-type-size     variant `InvalidPort`: 0 bytes
print-type-size     variant `InvalidIpv4Address`: 0 bytes
print-type-size     variant `InvalidIpv6Address`: 0 bytes
print-type-size     variant `InvalidDomainCharacter`: 0 bytes
print-type-size     variant `RelativeUrlWithoutBase`: 0 bytes
print-type-size     variant `RelativeUrlWithCannotBeABaseBase`: 0 bytes
print-type-size     variant `SetHostOnCannotBeABaseUrl`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size type: `url::Position`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `BeforeScheme`: 0 bytes
print-type-size     variant `AfterScheme`: 0 bytes
print-type-size     variant `BeforeUsername`: 0 bytes
print-type-size     variant `AfterUsername`: 0 bytes
print-type-size     variant `BeforePassword`: 0 bytes
print-type-size     variant `AfterPassword`: 0 bytes
print-type-size     variant `BeforeHost`: 0 bytes
print-type-size     variant `AfterHost`: 0 bytes
print-type-size     variant `BeforePort`: 0 bytes
print-type-size     variant `AfterPort`: 0 bytes
print-type-size     variant `BeforePath`: 0 bytes
print-type-size     variant `AfterPath`: 0 bytes
print-type-size     variant `BeforeQuery`: 0 bytes
print-type-size     variant `AfterQuery`: 0 bytes
print-type-size     variant `BeforeFragment`: 0 bytes
print-type-size     variant `AfterFragment`: 0 bytes
print-type-size type: `version::HttpVersion`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Http09`: 0 bytes
print-type-size     variant `Http10`: 0 bytes
print-type-size     variant `Http11`: 0 bytes
print-type-size     variant `Http20`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/content_disposition.rs:97:49: 145:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/content_length.rs:47:25: 54:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/content_range.rs:130:63: 130:82]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/content_range.rs:137:70: 137:89]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/content_range.rs:138:68: 138:87]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/pragma.rs:47:49: 53:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/prefer.rs:127:43: 138:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/prefer.rs:141:62: 141:99]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/preference_applied.rs:68:53: 76:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/range.rs:88:40: 88:75]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:104:37: 111:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:112:23: 118:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:88:18: 103:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/upgrade.rs:144:80: 144:96]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/cell.rs:73:15: 73:27]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/cell.rs:87:15: 87:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/item.rs:68:15: 68:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/item.rs:84:37: 84:86]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/item.rs:91:40: 95:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/internals/vec_map.rs:50:60: 50:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/mod.rs:206:61: 206:76]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/mod.rs:392:31: 392:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/parsing.rs:31:35: 34:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/parsing.rs:35:35: 35:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/shared/entity.rs:9:23: 10:88]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/shared/quality_item.rs:80:54: 80:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/http/h1.rs:170:37: 178:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/http/h2.rs:272:63: 279:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/net.rs:698:85: 702:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/server/mod.rs:405:40: 405:52]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1565) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get_mut[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1576) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::remove[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4161) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::append_to_string[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(5382) => std/8a732dca6b5bfa0e664f890723f35836::net[0]::each_addr[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(747) => std/8a732dca6b5bfa0e664f890723f35836::ascii[0]::{{impl}}[1]::eq_ignore_ascii_case[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3645) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::count[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/content_length.rs:47:25: 54:14], 1:fn(&[u8]) -> std::result::Result<u64, error::Error> {header::parsing::from_raw_str::<u64>}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:104:37: 111:14], 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:88:18: 103:14]]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/content_length.rs:47:25: 54:14], 1:fn(&[u8]) -> std::result::Result<u64, error::Error> {header::parsing::from_raw_str::<u64>}], 1:fn(&std::vec::Vec<u8>) -> &[u8] {<std::vec::Vec<u8> as std::ops::Deref>::deref}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@DefId { krate: CrateNum(2), node: DefIndex(4505) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[26]::fold[0]::{{closure}}[0] } 0:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:104:37: 111:14], 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.9.13/src/header/common/strict_transport_security.rs:88:18: 103:14]], 1:fn(&str) -> &str {std::str::<impl str>::trim}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7461) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::find[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(7468) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[33]::rfind[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(20), node: DefIndex(1153) => openssl/5af36c1a5d59ad203b6ead3b49886e77::ssl[0]::get_ssl_verify_data_idx[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(20), node: DefIndex(1603) => openssl/5af36c1a5d59ad203b6ead3b49886e77::ssl[0]::{{impl}}[21]::write[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(1723) => collections/8a732dca6b5bfa0e664f890723f35836::btree[0]::map[0]::unwrap_unchecked[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4414) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[61]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Immut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `collections::btree::node::marker::Mut`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `error::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `header::common::access_control_allow_credentials::AccessControlAllowCredentials`: 0 bytes, alignment: 1 bytes
print-type-size type: `header::parsing::HTTP_VALUE`: 0 bytes, alignment: 1 bytes
print-type-size type: `net::Fresh`: 0 bytes, alignment: 1 bytes
print-type-size type: `net::HttpConnector`: 0 bytes, alignment: 1 bytes
print-type-size type: `net::Streaming`: 0 bytes, alignment: 1 bytes
print-type-size type: `openssl::ssl::SSL_INDEXES`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(mime_crate::Attr, mime_crate::Value)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::string::String, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::string::String, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(u64, u64)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&cookie::Cookie>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::common::accept_ranges::RangeUnit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::common::cache_control::CacheDirective>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::common::connection::ConnectionOption>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::common::content_disposition::DispositionParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::common::prefer::Preference>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::common::range::ByteRangeSpec>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::common::upgrade::Protocol>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::shared::encoding::Encoding>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::shared::entity::EntityTag>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&httparse::Header>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&method::Method>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&unicase::UniCase<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<((std::string::String, u16, client::pool::Scheme), std::vec::Vec<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Immut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Mut, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(collections::btree::node::marker::Owned, collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(mime_crate::Attr, mime_crate::Value)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<header::HeaderFormat + Send + Sync + 'static>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<header::HeaderFormat + Send + Sync>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, i32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, cookie::Cookie)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::vec::Vec<u8>, std::vec::Vec<u8>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u64, u64)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(unicase::UniCase<header::CowStr>, header::internals::item::Item)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<openssl::ssl::SslContext>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<openssl::ssl::bio::BioMethod>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send + 'static>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<(), Box<std::any::Any + Send>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<client::pool::PoolImpl<<net::HttpsConnector<net::openssl::OpensslClient> as net::NetworkConnector>::Stream>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<client::pool::PoolImpl<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<client::pool::PooledStreamInner<net::HttpsStream<openssl::ssl::SslStream<net::HttpStream>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<std::string::String, std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::LeafNode<u8, std::vec::Vec<std::string::String>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<cookie::Cookie>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::common::accept_ranges::RangeUnit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::common::cache_control::CacheDirective>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::common::connection::ConnectionOption>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::common::content_disposition::DispositionParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::common::prefer::Preference>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::common::range::ByteRangeSpec>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::common::upgrade::Protocol>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::shared::encoding::Encoding>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::shared::entity::EntityTag>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::shared::quality_item::QualityItem<header::shared::charset::Charset>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::shared::quality_item::QualityItem<header::shared::encoding::Encoding>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::shared::quality_item::QualityItem<language_tags::LanguageTag>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<header::shared::quality_item::QualityItem<mime_crate::Mime>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<httparse::Header>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<method::Method>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<net::Fresh>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<net::HttpStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<net::Streaming>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<openssl::ssl::error::OpenSslError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<openssl::ssl::error::OpensslError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<unicase::UniCase<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<url::<unnamed>::uts46::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::string::ParseError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `url::encoding::EncodingOverride`: 0 bytes, alignment: 1 bytes
print-type-size type: `url::percent_encoding::SIMPLE_ENCODE_SET`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:657:74: 668:10 new_rt:runtime::Runtime, new_module:Module, fake_call:ast::Call]>, std::result::Result<Variable, std::string::String>>`: 4752 bytes, alignment: 8 bytes
print-type-size     field `.f`: 4720 bytes
print-type-size     field `.r`: 32 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(592) => std/8a732dca6b5bfa0e664f890723f35836::thread[0]::{{impl}}[0]::spawn[0]::{{closure}}[0] } 0:std::thread::Thread, 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:657:74: 668:10 new_rt:runtime::Runtime, new_module:Module, fake_call:ast::Call], 2:std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>>>]`: 4736 bytes, alignment: 8 bytes
print-type-size     end padding: 4736 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:657:74: 668:10 new_rt:runtime::Runtime, new_module:Module, fake_call:ast::Call]`: 4720 bytes, alignment: 8 bytes
print-type-size     end padding: 4720 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:657:74: 668:10 new_rt:runtime::Runtime, new_module:Module, fake_call:ast::Call]>`: 4720 bytes, alignment: 8 bytes
print-type-size     field `.0`: 4720 bytes
print-type-size type: `runtime::Runtime`: 4592 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size     field `.call_stack`: 24 bytes
print-type-size     field `.local_stack`: 24 bytes
print-type-size     field `.current_stack`: 24 bytes
print-type-size     field `.ret`: 8 bytes
print-type-size     field `.rng`: 4128 bytes
print-type-size     field `.text_type`: 24 bytes
print-type-size     field `.f64_type`: 24 bytes
print-type-size     field `.vec4_type`: 24 bytes
print-type-size     field `.return_type`: 24 bytes
print-type-size     field `.bool_type`: 24 bytes
print-type-size     field `.object_type`: 24 bytes
print-type-size     field `.array_type`: 24 bytes
print-type-size     field `.link_type`: 24 bytes
print-type-size     field `.ref_type`: 24 bytes
print-type-size     field `.unsafe_ref_type`: 24 bytes
print-type-size     field `.rust_object_type`: 24 bytes
print-type-size     field `.option_type`: 24 bytes
print-type-size     field `.result_type`: 24 bytes
print-type-size     field `.thread_type`: 24 bytes
print-type-size     field `.closure_type`: 24 bytes
print-type-size type: `std::result::Result<rand::StdRng, std::io::Error>`: 4136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 4128 bytes
print-type-size         field `.0`: 4128 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `rand::Isaac64Rng`: 4128 bytes, alignment: 8 bytes
print-type-size     field `.cnt`: 8 bytes
print-type-size     field `.rsl`: 2048 bytes
print-type-size     field `.mem`: 2048 bytes
print-type-size     field `.a`: 8 bytes
print-type-size     field `.b`: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size type: `rand::StdRng`: 4128 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 4128 bytes
print-type-size type: `alloc::arc::ArcInner<link::Block>`: 1040 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 1024 bytes
print-type-size type: `link::Block`: 1024 bytes, alignment: 8 bytes
print-type-size     field `.data`: 992 bytes
print-type-size     field `.tys`: 32 bytes
print-type-size type: `std::result::Result<(range::Range, ast::For), ()>`: 440 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 440 bytes
print-type-size         field `.0`: 440 bytes
print-type-size type: `ast::For`: 424 bytes, alignment: 8 bytes
print-type-size     field `.init`: 120 bytes
print-type-size     field `.cond`: 120 bytes
print-type-size     field `.step`: 120 bytes
print-type-size     field `.block`: 40 bytes
print-type-size     field `.label`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `std::result::Result<(grab::Grabbed, runtime::Flow), std::string::String>`: 352 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 344 bytes
print-type-size         field `.0`: 344 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(range::Range, ast::ForN), ()>`: 336 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 336 bytes
print-type-size         field `.0`: 336 bytes
print-type-size type: `grab::Grabbed`: 328 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Variable`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Expression`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Block`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Item`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `ForN`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size type: `ast::ForN`: 320 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.start`: 128 bytes
print-type-size     field `.end`: 120 bytes
print-type-size     field `.block`: 40 bytes
print-type-size     field `.label`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Assign), ()>`: 288 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Compare), ()>`: 288 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ast::ArrayFill), ()>`: 280 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ast::If), ()>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Pow), ()>`: 280 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `ast::Assign`: 264 bytes, alignment: 8 bytes
print-type-size     field `.op`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.left`: 120 bytes, alignment: 8 bytes
print-type-size     field `.right`: 120 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::BinOpExpression`: 264 bytes, alignment: 8 bytes
print-type-size     field `.op`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.left`: 120 bytes, alignment: 8 bytes
print-type-size     field `.right`: 120 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Compare`: 264 bytes, alignment: 8 bytes
print-type-size     field `.op`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.left`: 120 bytes, alignment: 8 bytes
print-type-size     field `.right`: 120 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::If`: 264 bytes, alignment: 8 bytes
print-type-size     field `.cond`: 120 bytes
print-type-size     field `.true_block`: 40 bytes
print-type-size     field `.else_if_conds`: 24 bytes
print-type-size     field `.else_if_blocks`: 24 bytes
print-type-size     field `.else_block`: 40 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::ArrayFill`: 256 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 120 bytes
print-type-size     field `.n`: 120 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Pow`: 256 bytes, alignment: 8 bytes
print-type-size     field `.base`: 120 bytes
print-type-size     field `.exp`: 120 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `alloc::arc::ArcInner<ast::Closure>`: 240 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 224 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Closure), ()>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size type: `lifetime::node::Node`: 232 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.names`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 32 bytes
print-type-size     field `.mutable`: 1 bytes
print-type-size     field `.try`: 1 bytes
print-type-size     field `.grab_level`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.source`: 16 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 16 bytes
print-type-size     field `.children`: 24 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.lifetime`: 8 bytes
print-type-size     field `.declaration`: 16 bytes
print-type-size     field `.op`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.binops`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ids`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.lts`: 24 bytes, alignment: 8 bytes
print-type-size type: `ast::Closure`: 224 bytes, alignment: 8 bytes
print-type-size     field `.file`: 8 bytes
print-type-size     field `.source`: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.currents`: 24 bytes
print-type-size     field `.expr`: 120 bytes
print-type-size     field `.ret`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Swizzle), ()>`: 208 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 200 bytes
print-type-size         field `.0`: 200 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `hyper::client::RequestBuilder`: 200 bytes, alignment: 8 bytes
print-type-size     field `.client`: 8 bytes
print-type-size     field `.url`: 96 bytes
print-type-size     field `.headers`: 24 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.body`: 40 bytes
print-type-size type: `std::result::Result<hyper::client::Response, hyper::Error>`: 192 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<hyper::client::Response, std::string::String>`: 192 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ast::Swizzle`: 184 bytes, alignment: 8 bytes
print-type-size     field `.sw0`: 8 bytes
print-type-size     field `.sw1`: 8 bytes
print-type-size     field `.sw2`: 16 bytes
print-type-size     field `.sw3`: 16 bytes
print-type-size     field `.expr`: 120 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `hyper::client::Response`: 184 bytes, alignment: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.headers`: 24 bytes, alignment: 8 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.url`: 88 bytes, alignment: 8 bytes
print-type-size     field `.status_raw`: 40 bytes
print-type-size     field `.message`: 16 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Function), ()>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size type: `core::num::bignum::Big32x40`: 168 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.base`: 160 bytes
print-type-size type: `std::result::Result<(range::Range, ast::CallClosure), ()>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Grab), ()>`: 168 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ast::UnOpExpression), ()>`: 168 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Vec4UnLoop), ()>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size type: `ast::Function`: 160 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.file`: 8 bytes
print-type-size     field `.source`: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.currents`: 24 bytes
print-type-size     field `.block`: 40 bytes
print-type-size     field `.ret`: 24 bytes
print-type-size     field `.resolved`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.source_range`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ast::Function>`: 160 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 160 bytes
print-type-size         field `.0`: 160 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Norm), ()>`: 160 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `ast::CallClosure`: 152 bytes, alignment: 8 bytes
print-type-size     field `.item`: 112 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Vec4UnLoop`: 152 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.expr`: 120 bytes
print-type-size     field `.len`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.source_range`: 16 bytes, alignment: 8 bytes
print-type-size type: `ast::Grab`: 144 bytes, alignment: 8 bytes
print-type-size     field `.level`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.expr`: 120 bytes, alignment: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::UnOpExpression`: 144 bytes, alignment: 8 bytes
print-type-size     field `.op`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.expr`: 120 bytes, alignment: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `std::result::Result<(range::Range, (std::sync::Arc<std::string::String>, ast::Expression)), ()>`: 144 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Expression), ()>`: 144 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `ast::Norm`: 136 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 120 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `std::option::Option<ast::Id>`: 136 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `ast::Id`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `F64`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Expression`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `hyper::Client`: 128 bytes, alignment: 8 bytes
print-type-size     field `.protocol`: 16 bytes
print-type-size     field `.redirect_policy`: 16 bytes
print-type-size     field `.read_timeout`: 24 bytes
print-type-size     field `.write_timeout`: 24 bytes
print-type-size     field `.proxy`: 48 bytes
print-type-size type: `std::option::Option<(std::sync::Arc<std::string::String>, ast::Expression)>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `std::option::Option<ast::Expression>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Item), ()>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size type: `std::result::Result<ast::Expression, ()>`: 128 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `ast::Expression`: 120 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Link`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Object`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Array`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `ArrayFill`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Return`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `ReturnVoid`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Block`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Go`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Item`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `BinOp`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Assign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Text`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Number`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Vec4`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Bool`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `For`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `ForN`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Sum`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SumVec4`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Prod`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Min`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Max`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Sift`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Any`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `All`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `If`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Compare`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `UnOp`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Norm`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Variable`: 40 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `Try`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Swizzle`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Closure`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `CallClosure`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Grab`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `ast::Item`: 112 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.stack_id`: 16 bytes
print-type-size     field `.static_stack_id`: 16 bytes
print-type-size     field `.current`: 1 bytes
print-type-size     field `.try`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.ids`: 24 bytes, alignment: 8 bytes
print-type-size     field `.try_ids`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `piston_meta::meta_rules::SeparateBy`: 112 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.by`: 48 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     field `.allow_trail`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.debug_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ast::Item>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size type: `std::result::Result<ast::Item, ()>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Go), ()>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `std::fmt::Formatter`: 96 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.width`: 16 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.curarg`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::result::Result<hyper::Url, hyper::error::ParseError>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 95 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<hyper::Url, std::string::String>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `FnExternal`: 88 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.p`: 72 bytes
print-type-size type: `ast::Go`: 88 bytes, alignment: 8 bytes
print-type-size     field `.call`: 72 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `hyper::Url`: 88 bytes, alignment: 8 bytes
print-type-size     field `.serialization`: 24 bytes
print-type-size     field `.scheme_end`: 4 bytes
print-type-size     field `.username_end`: 4 bytes
print-type-size     field `.host_start`: 4 bytes
print-type-size     field `.host_end`: 4 bytes
print-type-size     field `.host`: 20 bytes
print-type-size     field `.port`: 4 bytes
print-type-size     field `.path_start`: 4 bytes
print-type-size     field `.query_start`: 8 bytes
print-type-size     field `.fragment_start`: 8 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::option::Option<FnExternal>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Call), ()>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size type: `alloc::arc::ArcInner<prelude::Prelude>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<(usize, std::sync::Arc<std::string::String>), (usize, usize)>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Vacant`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, ()>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, Variable>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, ty::Type>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::option::Option<std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, usize>>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:392:32: 395:6 check_data:std::vec::Vec<range::Range<piston_meta::MetaData>>, prelude2:std::sync::Arc<prelude::Prelude>]>, std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.f`: 32 bytes
print-type-size     field `.r`: 48 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Add), ()>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Arg), ()>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Loop), ()>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Mul), ()>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size type: `alloc::arc::ArcInner<Module>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::Mutex<std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `alloc::arc::ArcInner<std::thread::Inner>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 56 bytes
print-type-size type: `ast::Call`: 72 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.f_index`: 16 bytes
print-type-size     field `.custom_source`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `hyper::header::internals::item::Item`: 72 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 24 bytes
print-type-size     field `.typed`: 48 bytes
print-type-size type: `prelude::Dfn`: 72 bytes, alignment: 8 bytes
print-type-size     field `.lts`: 24 bytes
print-type-size     field `.tys`: 24 bytes
print-type-size     field `.ret`: 24 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, ()>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, Variable>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, ty::Type>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::Entry<std::sync::Arc<std::string::String>, usize>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<(usize, std::sync::Arc<std::string::String>), (usize, usize)>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<ast::Call>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `std::result::Result<ast::Call, ()>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size type: `alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 48 bytes
print-type-size type: `ast::Add`: 64 bytes, alignment: 8 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.ops`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Arg`: 64 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.lifetime`: 8 bytes
print-type-size     field `.ty`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size     field `.mutable`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `ast::Loop`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 40 bytes
print-type-size     field `.label`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Mul`: 64 bytes, alignment: 8 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.ops`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `piston_meta::meta_rules::Repeat`: 64 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.debug_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `prelude::Prelude`: 64 bytes, alignment: 8 bytes
print-type-size     field `.functions`: 40 bytes
print-type-size     field `.list`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<(usize, std::sync::Arc<std::string::String>), (usize, usize), &std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::sync::Arc<std::string::String>, (), &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::sync::Arc<std::string::String>, Variable, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::map::InternalEntry<std::sync::Arc<std::string::String>, usize, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.elem`: 32 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.hash`: 8 bytes
print-type-size         field `.elem`: 48 bytes
print-type-size     variant `TableIsEmpty`: 0 bytes
print-type-size type: `std::collections::hash::table::BucketState<(usize, std::sync::Arc<std::string::String>), (usize, usize), std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, (), std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, Variable, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, ty::Type, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, usize, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Full`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::sync::Arc<std::string::String>, ()>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::sync::Arc<std::string::String>, Variable>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::sync::Arc<std::string::String>, ty::Type>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<std::sync::Arc<std::string::String>, usize>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 48 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 64 bytes, alignment: 8 bytes
print-type-size     field `.position`: 16 bytes
print-type-size     field `.format`: 48 bytes
print-type-size type: `std::iter::Zip<std::iter::Enumerate<std::slice::Iter<prelude::Lt>>, std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:549:25: 549:61 nodes:&std::vec::Vec<lifetime::node::Node>]>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<ast::Arg>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size type: `std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 48 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 64 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 48 bytes
print-type-size type: `Module`: 56 bytes, alignment: 8 bytes
print-type-size     field `.functions`: 24 bytes
print-type-size     field `.ext_prelude`: 24 bytes
print-type-size     field `.intrinsics`: 8 bytes
print-type-size type: `alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 40 bytes
print-type-size type: `alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 40 bytes
print-type-size type: `piston_meta::meta_rules::Lines`: 56 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `piston_meta::meta_rules::Optional`: 56 bytes, alignment: 8 bytes
print-type-size     field `.rule`: 48 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, (), std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, Variable, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, ty::Type, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, usize, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, (), std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, Variable, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, ty::Type, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, usize, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, ty::Type, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `std::iter::Zip<std::iter::Filter<std::iter::Map<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:127:64: 127:78 nodes:&&[lifetime::node::Node]]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:128:33: 128:61]>, std::slice::Iter<prelude::Lt>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Array), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Block), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Link), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Object), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Vec4), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size type: `std::result::Result<(std::option::Option<Variable>, runtime::Flow), std::string::String>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<piston_meta::Syntax, std::string::String>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>, std::string::String>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>, std::sync::Arc<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::Mutex<std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 40 bytes, alignment: 8 bytes
print-type-size type: `std::thread::Inner`: 56 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.lock`: 16 bytes
print-type-size     field `.cvar`: 16 bytes
print-type-size type: `Error`: 48 bytes, alignment: 8 bytes
print-type-size     field `.message`: 24 bytes
print-type-size     field `.trace`: 24 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(592) => std/8a732dca6b5bfa0e664f890723f35836::thread[0]::{{impl}}[0]::spawn[0]::{{closure}}[0] } 0:std::thread::Thread, 1:[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:392:32: 395:6 check_data:std::vec::Vec<range::Range<piston_meta::MetaData>>, prelude2:std::sync::Arc<prelude::Prelude>], 2:std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>>>]`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::Mutex<std::io::Error>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `core::num::dec2flt::parse::ParseResult`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Valid`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `ShortcutToInf`: 0 bytes
print-type-size     variant `ShortcutToZero`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `hyper::header::internals::cell::PtrMap<Box<hyper::header::HeaderFormat + Send + Sync + 'static>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `One`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Many`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `hyper::header::internals::cell::PtrMap<Box<hyper::header::HeaderFormat + Send + Sync>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `One`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Many`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `hyper::header::internals::cell::PtrMapCell<hyper::header::HeaderFormat + Send + Sync + 'static>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `hyper::header::internals::cell::PtrMapCell<hyper::header::HeaderFormat + Send + Sync>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `piston_meta::Rule`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Whitespace`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Tag`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `UntilAny`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `UntilAnyOrWhitespace`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Text`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Number`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Select`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Sequence`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `SeparateBy`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Repeat`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Lines`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Node`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Optional`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `piston_meta::Syntax`: 48 bytes, alignment: 8 bytes
print-type-size     field `.rules`: 24 bytes
print-type-size     field `.names`: 24 bytes
print-type-size type: `runtime::Call`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fn_name`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.file`: 8 bytes
print-type-size     field `.stack_len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size     field `.current_len`: 8 bytes
print-type-size type: `std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<hyper::header::internals::cell::PtrMap<Box<hyper::header::HeaderFormat + Send + Sync + 'static>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<hyper::header::internals::cell::PtrMap<Box<hyper::header::HeaderFormat + Send + Sync>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_cond_t>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<(usize, std::sync::Arc<std::string::String>), (usize, usize), &std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::sync::Arc<std::string::String>, (), &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::sync::Arc<std::string::String>, Variable, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::map::VacantEntryState<std::sync::Arc<std::string::String>, usize, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `NeqElem`: 40 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `NoElem`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<(usize, std::sync::Arc<std::string::String>), (usize, usize)>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::fmt::Arguments`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.flags`: 4 bytes, alignment: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.precision`: 16 bytes, alignment: 8 bytes
print-type-size     field `.width`: 16 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:118:17: 122:10 nodes:&std::vec::Vec<lifetime::node::Node>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:123:14: 130:14 nodes:&std::vec::Vec<lifetime::node::Node>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:132:17: 132:44 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<ast::Expression>, std::slice::Iter<ast::Block>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<ty::Type>, std::slice::Iter<ty::Type>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::option::Option<(std::borrow::Cow<'static, str>, u16)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<(std::borrow::Cow<str>, u16)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<range::Range<piston_meta::MetaData>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<runtime::Call>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Break), ()>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Continue), ()>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Current), ()>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::result::Result<(range::Range, ast::Sw), ()>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, ty::Type), ()>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::sys::imp::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::sys_common::condvar::Condvar`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `alloc::arc::ArcInner<std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::Mutex<std::sync::Arc<Module>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `alloc::arc::ArcInner<std::vec::Vec<Variable>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `ast::Array`: 40 bytes, alignment: 8 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Block`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expressions`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Link`: 40 bytes, alignment: 8 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Object`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key_values`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Vec4`: 40 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `core::num::dec2flt::parse::Decimal`: 40 bytes, alignment: 8 bytes
print-type-size     field `.integral`: 16 bytes
print-type-size     field `.fractional`: 16 bytes
print-type-size     field `.exp`: 8 bytes
print-type-size type: `hyper::http::RawStatus`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.1`: 32 bytes, alignment: 8 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `piston_meta::meta_rules::Node`: 40 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.property`: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size     field `.index`: 16 bytes
print-type-size type: `range::Range<piston_meta::MetaData>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `range::Range<std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<libc::unix::notbsd::linux::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::collections::HashMap<(usize, std::sync::Arc<std::string::String>), (usize, usize)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync + 'static>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::sync::Arc<std::string::String>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashMap<std::sync::Arc<std::string::String>, usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size     field `.table`: 24 bytes
print-type-size     field `.resize_policy`: 0 bytes
print-type-size type: `std::collections::HashSet<std::sync::Arc<std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.map`: 40 bytes
print-type-size type: `std::collections::hash::table::BucketState<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<(usize, std::sync::Arc<std::string::String>), (usize, usize), &std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, (), &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, Variable, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash::table::BucketState<std::sync::Arc<std::string::String>, usize, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Empty`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Full`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::sync::Arc<std::string::String>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::sync::Arc<std::string::String>, Variable>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::sync::Arc<std::string::String>, ty::Type>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<std::sync::Arc<std::string::String>, usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size     field `.elem`: 32 bytes
print-type-size type: `std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.buf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `std::io::BufWriter<std::fs::File>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::BufWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Chain<std::slice::Iter<u8>, std::slice::Iter<u8>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::collections::hash_map::Iter<std::sync::Arc<std::string::String>, Variable>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:118:17: 122:10 nodes:&std::vec::Vec<lifetime::node::Node>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:123:14: 130:14 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<usize>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:607:25: 607:62 nodes:&std::vec::Vec<lifetime::node::Node>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:608:22: 608:61 map_arg_call_arg_index:&[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:564:38: 583:10 call:&&lifetime::node::Node, nodes:&std::vec::Vec<lifetime::node::Node>]]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::option::Option<ast::Block>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::option::Option<hyper::client::Body>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<lifetime::lt::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(), hyper::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<(), range::Range<std::string::String>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<ast::Block, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<std::option::Option<Variable>, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>, std::sync::PoisonError<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::thread::JoinHandle<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>>, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sys::imp::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys::imp::mutex::ReentrantMutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::sys_common::mutex::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::thread::Builder`: 40 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.stack_size`: 16 bytes
print-type-size type: `std::vec::Drain<u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:392:32: 395:6 check_data:std::vec::Vec<range::Range<piston_meta::MetaData>>, prelude2:std::sync::Arc<prelude::Prelude>]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7662) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[4]::into_inner[0]::{{closure}}[0] } 0:std::cell::UnsafeCell<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::arc::ArcInner<std::sync::Mutex<std::any::Any>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size type: `ast::Current`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size     field `.mutable`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `hyper::Error`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Method`: 0 bytes
print-type-size     variant `Uri`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Version`: 0 bytes
print-type-size     variant `Header`: 0 bytes
print-type-size     variant `TooLarge`: 0 bytes
print-type-size     variant `Status`: 0 bytes
print-type-size     variant `Io`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ssl`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Http2`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Utf8`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `hyper::client::Body`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ChunkedBody`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `SizedBody`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `BufBody`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `hyper::header::CowStr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `hyper::method::Method`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Options`: 0 bytes
print-type-size     variant `Get`: 0 bytes
print-type-size     variant `Post`: 0 bytes
print-type-size     variant `Put`: 0 bytes
print-type-size     variant `Delete`: 0 bytes
print-type-size     variant `Head`: 0 bytes
print-type-size     variant `Trace`: 0 bytes
print-type-size     variant `Connect`: 0 bytes
print-type-size     variant `Patch`: 0 bytes
print-type-size     variant `Extension`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `lifetime::lt::Lifetime`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Return`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Argument`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Local`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Current`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `piston_meta::meta_rules::Select`: 32 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `piston_meta::meta_rules::Sequence`: 32 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `piston_meta::meta_rules::Tag`: 32 bytes, alignment: 8 bytes
print-type-size     field `.text`: 8 bytes
print-type-size     field `.not`: 1 bytes
print-type-size     field `.inverted`: 1 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `piston_meta::meta_rules::UntilAny`: 32 bytes, alignment: 8 bytes
print-type-size     field `.any_characters`: 8 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `piston_meta::meta_rules::UntilAnyOrWhitespace`: 32 bytes, alignment: 8 bytes
print-type-size     field `.any_characters`: 8 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `std::borrow::Cow<'static, str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::borrow::Cow<str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::collections::hash::table::Bucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, (), &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, Variable, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Bucket<std::sync::Arc<std::string::String>, usize, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Drain<std::sync::Arc<std::string::String>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, (), &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, Variable, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::EmptyBucket<std::sync::Arc<std::string::String>, usize, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &mut std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, ty::Type, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, &mut std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::sync::Arc<std::string::String>, Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::sync::Arc<std::string::String>, ty::Type>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::Iter<std::sync::Arc<std::string::String>, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size type: `std::collections::hash::table::IterMut<std::sync::Arc<std::string::String>, Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<(usize, std::sync::Arc<std::string::String>), (usize, usize)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::sync::Arc<std::string::String>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::sync::Arc<std::string::String>, Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::sync::Arc<std::string::String>, ty::Type>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RevMoveBuckets<std::sync::Arc<std::string::String>, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.elems_left`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash_map::Drain<std::sync::Arc<std::string::String>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::sync::Arc<std::string::String>, Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::sync::Arc<std::string::String>, ty::Type>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Iter<std::sync::Arc<std::string::String>, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::IterMut<std::sync::Arc<std::string::String>, Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Keys<std::sync::Arc<std::string::String>, Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Keys<std::sync::Arc<std::string::String>, usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::collections::hash_map::Values<std::sync::Arc<std::string::String>, Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::fmt::DebugTuple`: 32 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.fields`: 8 bytes, alignment: 8 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<std::io::BufWriter<std::fs::File>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::io::Write::write_fmt::Adaptor<std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 24 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:412:21: 412:53 nodes:&std::vec::Vec<lifetime::node::Node>]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:432:21: 432:53 nodes:&std::vec::Vec<lifetime::node::Node>]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:100:17: 113:10 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:118:17: 122:10 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:153:17: 156:10 locals:&std::vec::Vec<(usize, usize)>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:162:17: 165:10 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:88:17: 95:10 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<usize>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:537:25: 537:62 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<usize>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:607:25: 607:62 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Map<std::collections::hash_map::Keys<std::sync::Arc<std::string::String>, Variable>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:2516:28: 2516:57]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<std::slice::Iter<prelude::Lt>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:643:22: 643:61 map_arg_call_arg_index:&[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:564:38: 583:10 call:&&lifetime::node::Node, nodes:&std::vec::Vec<lifetime::node::Node>]]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:100:17: 113:10 nodes:&std::vec::Vec<lifetime::node::Node>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:113:16: 113:26]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:138:17: 140:10]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:141:14: 148:14 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:153:17: 156:10 locals:&std::vec::Vec<(usize, usize)>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:157:14: 157:24]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:162:17: 165:10 nodes:&std::vec::Vec<lifetime::node::Node>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:166:14: 166:24]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:88:17: 95:10 nodes:&std::vec::Vec<lifetime::node::Node>]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:96:14: 96:24]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Take<std::iter::Skip<std::str::Chars>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.predicate`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::TakeWhile<std::slice::Iter<u8>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.predicate`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<((usize, std::sync::Arc<std::string::String>), (usize, usize))>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(std::sync::Arc<std::string::String>, Variable)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<(std::sync::Arc<std::string::String>, ty::Type)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<Variable>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<ast::Current>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize), &std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, (), &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, Variable, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::FullBucket<std::sync::Arc<std::string::String>, usize, &std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::option::Option<ty::Type>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:392:32: 395:6 check_data:std::vec::Vec<range::Range<piston_meta::MetaData>>, prelude2:std::sync::Arc<prelude::Prelude>]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::result::Result<&piston_meta::Syntax, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(range::Range, bool), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(range::Range, f64), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<*mut Variable, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<Variable, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<bool, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<f32, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<f64, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<runtime::Flow, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::fs::File, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, range::Range<read_token::ParseStringError>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::sync::Arc<std::string::String>, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::sync::Arc<std::sync::Mutex<std::any::Any>>, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<std::any::Any>, std::sync::PoisonError<std::sync::MutexGuard<std::any::Any>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::sync::MutexGuard<std::any::Any>, std::sync::TryLockError<std::sync::MutexGuard<std::any::Any>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<Variable>, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::Type, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<usize, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<vec4::Vec4, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::string::FromUtf8Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::sync::Mutex<std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::sync::PoisonError<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 32 bytes
print-type-size type: `std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::thread::JoinHandle<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::thread::JoinInner<std::result::Result<Variable, std::string::String>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.native`: 16 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.packet`: 8 bytes
print-type-size type: `std::thread::JoinInner<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.native`: 16 bytes
print-type-size     field `.thread`: 8 bytes
print-type-size     field `.packet`: 8 bytes
print-type-size type: `unicase::UniCase<hyper::header::CowStr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `Variable`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ref`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size     variant `Bool`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Vec4`: 19 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Text`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Object`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Link`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `UnsafeRef`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `RustObject`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Option`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Result`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Thread`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Closure`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1733:63: 1735:71 module:&&std::sync::Arc<Module>, call:&&ast::Call, rt:&&mut runtime::Runtime]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1814:63: 1816:71 module:&&std::sync::Arc<Module>, call:&&ast::Call, rt:&&mut runtime::Runtime]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:837:40: 838:64 module:&&std::sync::Arc<Module>, call:&&ast::Call, self:&&mut runtime::Runtime]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:852:40: 853:64 module:&&std::sync::Arc<Module>, call:&&ast::Call, self:&&mut runtime::Runtime]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `ast::Bool`: 24 bytes, alignment: 8 bytes
print-type-size     field `.val`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.source_range`: 16 bytes, alignment: 8 bytes
print-type-size type: `ast::Break`: 24 bytes, alignment: 8 bytes
print-type-size     field `.label`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Continue`: 24 bytes, alignment: 8 bytes
print-type-size     field `.label`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Number`: 24 bytes, alignment: 8 bytes
print-type-size     field `.num`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Sw`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ind`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `ast::Text`: 24 bytes, alignment: 8 bytes
print-type-size     field `.text`: 8 bytes
print-type-size     field `.source_range`: 16 bytes
print-type-size type: `hyper::header::Headers`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `hyper::header::internals::cell::OptCell<std::vec::Vec<std::vec::Vec<u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `hyper::header::internals::vec_map::VecMap<unicase::UniCase<hyper::header::CowStr>, hyper::header::internals::item::Item>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `link::Link`: 24 bytes, alignment: 8 bytes
print-type-size     field `.slices`: 24 bytes
print-type-size type: `piston_meta::MetaData`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `StartNode`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `EndNode`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Bool`: 9 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 1 bytes
print-type-size     variant `F64`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `String`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `piston_meta::ParseErrorHandler`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lines`: 24 bytes
print-type-size type: `piston_meta::bootstrap::Convert`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `piston_meta::meta_rules::Number`: 24 bytes, alignment: 8 bytes
print-type-size     field `.property`: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size     field `.allow_underscore`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `piston_meta::meta_rules::Text`: 24 bytes, alignment: 8 bytes
print-type-size     field `.allow_empty`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.property`: 8 bytes, alignment: 8 bytes
print-type-size     field `.debug_id`: 8 bytes
print-type-size type: `range::Range<read_token::ParseStringError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `read_token::ReadToken`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `solicit::http::HttpError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `IoError`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `InvalidFrame`: 0 bytes
print-type-size     variant `CompressionError`: 3 bytes
print-type-size         field `.0`: 3 bytes
print-type-size     variant `UnknownStreamId`: 0 bytes
print-type-size     variant `UnableToConnect`: 0 bytes
print-type-size     variant `MalformedResponse`: 0 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<'static, std::sync::Arc<std::string::String>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::sync::Arc<std::string::String>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::sync::Arc<std::string::String>, Variable>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::sync::Arc<std::string::String>, ty::Type>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBuckets<std::sync::Arc<std::string::String>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 16 bytes
print-type-size     field `.hashes_end`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<(usize, std::sync::Arc<std::string::String>), (usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync + 'static>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, Variable>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ty::Type>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.hashes`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.error`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Rev<std::slice::Iter<std::option::Option<std::sync::Arc<std::string::String>>>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(range::Range, &str)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<(std::sync::Arc<std::string::String>, ast::Expression)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<Variable>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<ast::Arg>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<ast::Expression>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<ast::Function>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<ast::Id>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<prelude::Lt>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<range::Range<piston_meta::MetaData>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<ty::Type>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:138:17: 140:10]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:73:17: 73:45]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:80:17: 80:47]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:84:17: 84:49]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:127:64: 127:78 nodes:&&[lifetime::node::Node]]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:128:33: 128:61]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:329:51: 329:83 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:359:25: 359:61 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:362:33: 365:26 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:412:21: 412:53 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:419:21: 419:53 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:432:21: 432:53 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:518:21: 518:57 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:549:25: 549:61 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:59:25: 61:18 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:703:21: 704:46 nodes:&std::vec::Vec<lifetime::node::Node>]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:246:37: 246:69 nodes:&&[lifetime::node::Node]]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:73:17: 73:45]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:73:51: 73:61]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:80:17: 80:47]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:80:53: 80:63]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:84:17: 84:49]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:84:55: 84:65]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Take<std::slice::Iter<ast::Id>>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/mod.rs:1498:46: 1498:61]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<Variable>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1749:39: 1751:56 call:&&ast::Call]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<Variable>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1830:39: 1832:56 call:&&ast::Call]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:127:64: 127:78 nodes:&&[lifetime::node::Node]]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Rev<std::iter::Enumerate<std::slice::Iter<ast::Function>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Skip<std::slice::Iter<link::Slice>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Skip<std::str::Chars>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::StepBy<usize, std::ops::Range<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.step_by`: 8 bytes
print-type-size     field `.range`: 16 bytes
print-type-size type: `std::iter::Take<std::iter::Rev<std::slice::Iter<(std::sync::Arc<std::string::String>, usize)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::slice::Iter<ast::Id>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::slice::Iter<link::Slice>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::option::Option<((usize, &prelude::Lt), &usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync>)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, (&std::sync::Arc<std::string::String>, &Variable))>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<hyper::header::Headers>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<prelude::Lt>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<range::Range>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, ()>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, Variable>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, ty::Type>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::result::Result<Box<Variable>, Box<Error>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::time::Duration>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(range::Range, std::sync::Arc<std::string::String>), ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<range::Range, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::sys::imp::thread::Thread, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::time::Duration, std::time::SystemTimeError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u64, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sync::Mutex<std::sync::Arc<Module>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.data`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::sync::MutexGuard<std::any::Any>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.__lock`: 16 bytes
print-type-size     field `.__poison`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sync::PoisonError<std::sync::MutexGuard<std::any::Any>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 24 bytes
print-type-size type: `std::sync::TryLockError<std::sync::MutexGuard<std::any::Any>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Poisoned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<(range::Range, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::sync::Arc<std::string::String>, ast::Expression)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::sync::Arc<std::string::String>, std::option::Option<ast::Expression>, std::option::Option<ast::Expression>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::sync::Arc<std::string::String>, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(unicase::UniCase<hyper::header::CowStr>, hyper::header::internals::item::Item)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<FnExternal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<Variable>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Arg>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::BinOp>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Block>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Current>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Expression>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Function>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Id>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<lifetime::node::Node>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<link::Slice>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<piston_meta::Rule>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<prelude::Dfn>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<prelude::Lt>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<range::Range<piston_meta::MetaData>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<range::Range>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<runtime::Call>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<std::sync::Arc<std::string::String>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::sync::Arc<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ty::Type>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `ty::Type`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Unreachable`: 0 bytes
print-type-size     variant `Void`: 0 bytes
print-type-size     variant `Any`: 0 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size     variant `F64`: 0 bytes
print-type-size     variant `Vec4`: 0 bytes
print-type-size     variant `Text`: 0 bytes
print-type-size     variant `Link`: 0 bytes
print-type-size     variant `Array`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Object`: 0 bytes
print-type-size     variant `Option`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Result`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Secret`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Thread`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AdHoc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Closure`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `url::ParseOptions`: 24 bytes, alignment: 8 bytes
print-type-size     field `.base_url`: 8 bytes
print-type-size     field `.encoding_override`: 0 bytes
print-type-size     field `.log_syntax_violation`: 16 bytes
print-type-size type: `url::host::HostInternal`: 20 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Domain`: 0 bytes
print-type-size     variant `Ipv4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ipv6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `ClosureEnvironment`: 16 bytes, alignment: 8 bytes
print-type-size     field `.module`: 8 bytes
print-type-size     field `.relative`: 8 bytes
print-type-size type: `FnIndex`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Intrinsic`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Loaded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `ExternalVoid`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `ExternalReturn`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/infer_len.rs:266:13: 276:6 for_n_expr:&&ast::ForN, name:&&str]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/infer_len.rs:288:13: 313:6 block:&&ast::Block, name:&&str]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/replace.rs:225:26: 225:74 name:&&std::sync::Arc<std::string::String>, val:&f64]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/replace.rs:335:22: 335:54 name:&&std::sync::Arc<std::string::String>, val:&f64]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:238:61: 239:72 nodes:&std::vec::Vec<lifetime::node::Node>, i:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:275:53: 276:60 nodes:&std::vec::Vec<lifetime::node::Node>, i:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:471:26: 471:61 nodes:&std::vec::Vec<lifetime::node::Node>, right:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:480:26: 480:61 nodes:&std::vec::Vec<lifetime::node::Node>, right:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:489:26: 489:61 nodes:&std::vec::Vec<lifetime::node::Node>, right:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:498:26: 498:57 nodes:&std::vec::Vec<lifetime::node::Node>, i:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:509:26: 509:57 nodes:&std::vec::Vec<lifetime::node::Node>, i:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:521:30: 521:61 nodes:&std::vec::Vec<lifetime::node::Node>, a:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:564:38: 583:10 call:&&lifetime::node::Node, nodes:&std::vec::Vec<lifetime::node::Node>]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:584:28: 601:10 call:&&lifetime::node::Node, nodes:&std::vec::Vec<lifetime::node::Node>]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:634:42: 634:77 nodes:&std::vec::Vec<lifetime::node::Node>, right:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:665:42: 665:77 nodes:&std::vec::Vec<lifetime::node::Node>, right:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/typecheck.rs:438:63: 438:92 nodes:&&mut std::vec::Vec<lifetime::node::Node>, i:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/typecheck.rs:454:30: 454:59 nodes:&&mut std::vec::Vec<lifetime::node::Node>, i:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/typecheck.rs:82:63: 82:92 nodes:&&mut std::vec::Vec<lifetime::node::Node>, i:&usize]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:(usize, &prelude::Lt)]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(range::Range, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::sync::Arc<std::string::String>, ast::Expression)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::sync::Arc<std::string::String>, std::option::Option<ast::Expression>, std::option::Option<ast::Expression>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::sync::Arc<std::string::String>, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(unicase::UniCase<hyper::header::CowStr>, hyper::header::internals::item::Item)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<FnExternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Variable>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Arg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::BinOp>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Block>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Current>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Expression>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Function>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Id>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<lifetime::node::Node>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<link::Slice>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<piston_meta::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<prelude::Dfn>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<prelude::Lt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<range::Range<piston_meta::MetaData>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<range::Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<runtime::Call>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<std::sync::Arc<std::string::String>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::sync::Arc<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<ty::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<std::any::Any + 'static>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<std::any::Any>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::num::dec2flt::rawfp::Unpacked`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sig`: 8 bytes
print-type-size     field `.k`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::num::diy_float::Fp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.e`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::slice::Repr<(range::Range, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::sync::Arc<std::string::String>, ast::Expression)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::sync::Arc<std::string::String>, std::option::Option<ast::Expression>, std::option::Option<ast::Expression>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(std::sync::Arc<std::string::String>, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(unicase::UniCase<hyper::header::CowStr>, hyper::header::internals::item::Item)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<FnExternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<Variable>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ast::Arg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ast::BinOp>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ast::Block>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ast::Current>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ast::Expression>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ast::Function>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ast::Id>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<lifetime::node::Node>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<link::Slice>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<piston_meta::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<prelude::Dfn>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<prelude::Lt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<range::Range<piston_meta::MetaData>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<range::Range>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<runtime::Call>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::option::Option<std::sync::Arc<std::string::String>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::sync::Arc<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<ty::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::Repr<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `hyper::client::RedirectPolicy`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `FollowNone`: 0 bytes
print-type-size     variant `FollowAll`: 0 bytes
print-type-size     variant `FollowIf`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `lazy_static::lazy::Lazy<std::result::Result<piston_meta::Syntax, std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `libc::unix::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size type: `libc::unix::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `link::Slice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.block`: 8 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `piston_meta::meta_rules::Whitespace`: 16 bytes, alignment: 8 bytes
print-type-size     field `.optional`: 1 bytes
print-type-size     padding: 7 bytes
print-type-size     field `.debug_id`: 8 bytes, alignment: 8 bytes
print-type-size type: `prelude::Lt`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Arg`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `range::Range`: 16 bytes, alignment: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `runtime::Flow`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `ContinueLoop`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<FnIndex>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<FnIndex>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash::table::RawBucket<(usize, std::sync::Arc<std::string::String>), (usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, Variable>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, ty::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash::table::RawBucket<std::sync::Arc<std::string::String>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.pair`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::ArgumentV1`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::fmt::DebugList`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugMap`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::DebugStruct`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `NextParam`: 0 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Position`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Next`: 0 bytes
print-type-size     variant `At`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 16 bytes
print-type-size type: `std::io::append_to_string::Guard`: 16 bytes, alignment: 8 bytes
print-type-size     field `.s`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::io::error::Repr`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<(std::sync::Arc<std::string::String>, ast::Expression)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<FnExternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<Variable>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ast::Arg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ast::Block>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ast::Current>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ast::Expression>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ast::Function>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ast::Id>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<link::Slice>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<prelude::Lt>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<range::Range<piston_meta::MetaData>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<std::option::Option<std::sync::Arc<std::string::String>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<ty::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<Variable>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:165:17: 165:37]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<Variable>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:168:17: 168:35]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<range::Range<piston_meta::MetaData>>, [closure@DefId { krate: CrateNum(12), node: DefIndex(439) => piston_meta/13ab74d09197ba4f1a455b5525d4617d::json[0]::write[0]::{{closure}}[0] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<range::Range<piston_meta::MetaData>>, [closure@DefId { krate: CrateNum(12), node: DefIndex(442) => piston_meta/13ab74d09197ba4f1a455b5525d4617d::json[0]::write[0]::{{closure}}[1] }]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<Variable>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:1011:34: 1011:95]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::Chars, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:2541:14: 2545:10]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<(std::sync::Arc<std::string::String>, usize)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<FnExternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<ast::Expression>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<std::option::Option<std::sync::Arc<std::string::String>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<std::sync::Arc<std::string::String>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::str::Chars>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ops::Fn(&'static str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<&std::ops::Fn(&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&ast::Expression, &ast::Block)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&lifetime::node::Node, &prelude::Lt)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::sync::Arc<std::string::String>, &Variable)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::sync::Arc<std::string::String>, &mut Variable)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::sync::Arc<std::string::String>, &ty::Type)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&std::sync::Arc<std::string::String>, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(&ty::Type, &ty::Type)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::collections::hash::table::SafeHash, std::sync::Arc<std::string::String>, ())>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::sync::Arc<std::string::String>, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &(range::Range, &str))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &(std::sync::Arc<std::string::String>, ast::Expression))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &Variable)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &ast::Arg)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &ast::Expression)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &ast::Function)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &ast::Id)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &lifetime::node::Node)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &prelude::Lt)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &range::Range<piston_meta::MetaData>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &std::option::Option<std::sync::Arc<std::string::String>>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &ty::Type)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(usize, std::sync::Arc<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<link::Slice>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::option::Option<std::sync::Arc<std::string::String>>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::sys::imp::thread::Thread>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<std::any::Any + 'static>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<std::any::Any>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::raw::TraitObject`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.vtable`: 8 bytes
print-type-size type: `std::result::Result<&piston_meta::Syntax, &std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<Box<Variable>, Box<Error>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<f64, read_token::ParseNumberError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<f64, std::num::ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<(range::Range, &str)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::sync::Arc<std::string::String>, ast::Expression)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(std::sync::Arc<std::string::String>, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<(usize, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<FnExternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<Variable>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ast::Arg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ast::BinOp>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ast::Block>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ast::Current>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ast::Expression>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ast::Function>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ast::Id>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<lifetime::node::Node>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<link::Slice>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<prelude::Lt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<range::Range<piston_meta::MetaData>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<runtime::Call>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::fmt::ArgumentV1>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::option::Option<std::sync::Arc<std::string::String>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<std::sync::Arc<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<ty::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<Variable>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<std::any::Any + 'static>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<std::any::Any>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 16 bytes
print-type-size type: `std::sync::Condvar`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size type: `std::sync::Mutex<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sync::Mutex<std::any::Any>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.poison`: 1 bytes
print-type-size     field `.data`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sys::imp::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_flags`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::sys::imp::time::Timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::sys::imp::time::inner::SystemTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::SystemTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::time::SystemTimeError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::vec::SetLenOnDrop`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `vec4::Vec4`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `FnExternalRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 8 bytes
print-type-size type: `UnsafeRef`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/mod.rs:2487:20: 2488:61 source_range:&range::Range]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/data.rs:17:55: 17:89 file:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/data.rs:19:51: 19:85 file:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/functions.rs:108:23: 119:10 name:&std::sync::Arc<std::string::String>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:115:18: 116:49 url:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:118:53: 120:10 file:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:11:48: 12:68 meta:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:122:22: 123:53 url:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:14:56: 15:61 file:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:58:57: 58:91 meta:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:60:53: 60:87 meta:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:61:55: 61:89 file:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:63:51: 63:85 file:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:79:18: 80:49 url:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:84:22: 85:53 url:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:95:57: 95:91 meta:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:97:53: 97:87 meta:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1638:46: 1638:66 f:&&FnExternal]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1749:39: 1751:56 call:&&ast::Call]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1830:39: 1832:56 call:&&ast::Call]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:2466:57: 2470:14 rt:&&mut runtime::Runtime]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:357:57: 358:56 source:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:385:9: 385:51 source:&&str]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:89:58: 91:62 rt:&&mut runtime::Runtime]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:92:36: 93:95 rt:&&mut runtime::Runtime]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:100:17: 113:10 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:118:17: 122:10 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:123:14: 130:14 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:132:17: 132:44 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:141:14: 148:14 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:153:17: 156:10 locals:&std::vec::Vec<(usize, usize)>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:155:37: 155:58 i:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:162:17: 165:10 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:329:51: 329:83 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:359:25: 359:61 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:362:33: 365:26 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:412:21: 412:53 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:419:21: 419:53 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:432:21: 432:53 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:50:18: 53:35 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:518:21: 518:57 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:537:25: 537:62 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:549:25: 549:61 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:59:25: 61:18 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:607:25: 607:62 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:608:22: 608:61 map_arg_call_arg_index:&[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:564:38: 583:10 call:&&lifetime::node::Node, nodes:&std::vec::Vec<lifetime::node::Node>]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:643:22: 643:61 map_arg_call_arg_index:&[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:564:38: 583:10 call:&&lifetime::node::Node, nodes:&std::vec::Vec<lifetime::node::Node>]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:690:25: 700:10 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:703:21: 704:46 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:88:17: 95:10 nodes:&std::vec::Vec<lifetime::node::Node>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:127:64: 127:78 nodes:&&[lifetime::node::Node]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:246:37: 246:69 nodes:&&[lifetime::node::Node]]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:267:50: 267:67 lifetime:&lifetime::lt::Lifetime]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/write.rs:396:36: 396:49 i:&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::sync::Arc<std::string::String>, Variable>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::sync::Arc<std::string::String>, ty::Type>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1264) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[38]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::Iter<std::sync::Arc<std::string::String>, usize>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1281) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::collections::hash::table::IterMut<std::sync::Arc<std::string::String>, Variable>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1317) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::table[0]::{{impl}}[44]::next[0]::{{closure}}[0] } 0:&&mut std::collections::hash::table::Drain<std::sync::Arc<std::string::String>, ()>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&(usize, std::sync::Arc<std::string::String>)]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&std::string::String]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1448) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search[0]::{{closure}}[0] } 0:&&std::sync::Arc<std::string::String>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1456) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[1]::search_mut[0]::{{closure}}[0] } 0:&&std::sync::Arc<std::string::String>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&(usize, std::sync::Arc<std::string::String>)]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1525) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::insert_hashed_nocheck[0]::{{closure}}[0] } 0:&std::sync::Arc<std::string::String>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1585) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[4]::eq[0]::{{closure}}[0] } 0:&&std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1588) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[4]::eq[0]::{{closure}}[0]::{{closure}}[0] } 0:&&Variable]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut hyper::client::Response]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4183) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::Read[0]::read_to_string[0]::{{closure}}[0] } 0:&mut &mut std::fs::File]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7686) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::mutex[0]::{{impl}}[8]::new[0]::{{closure}}[0] } 0:&&std::sync::Mutex<std::any::Any>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(7744) => std/8a732dca6b5bfa0e664f890723f35836::sync[0]::once[0]::{{impl}}[2]::call_once[0]::{{closure}}[0] } 0:&mut std::option::Option<[closure@DefId { krate: CrateNum(28), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::result::Result<piston_meta::Syntax, std::string::String>, 1:fn() -> std::result::Result<piston_meta::Syntax, std::string::String> {<load_str::SYNTAX_RULES as std::ops::Deref>::deref::__static_ref_initialize}]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::iter::Enumerate<std::slice::Iter<prelude::Lt>>, std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:549:25: 549:61 nodes:&std::vec::Vec<lifetime::node::Node>]>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4421) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Zip<std::iter::Filter<std::iter::Map<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:127:64: 127:78 nodes:&&[lifetime::node::Node]]>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:128:33: 128:61]>, std::slice::Iter<prelude::Lt>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4423) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[19]::next[0]::{{closure}}[0]::{{closure}}[0] } 0:&lifetime::node::Node]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::collections::hash_map::Iter<std::sync::Arc<std::string::String>, Variable>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:412:21: 412:53 nodes:&std::vec::Vec<lifetime::node::Node>]>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::iter::Filter<std::slice::Iter<usize>, [closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:432:21: 432:53 nodes:&std::vec::Vec<lifetime::node::Node>]>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::iter::Rev<std::slice::Iter<std::option::Option<std::sync::Arc<std::string::String>>>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<(range::Range, &str)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<(std::sync::Arc<std::string::String>, ast::Expression)>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<Variable>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<ast::Arg>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<ast::Expression>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<ast::Function>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<ast::Id>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<lifetime::node::Node>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<prelude::Lt>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<range::Range<piston_meta::MetaData>>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<ty::Type>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::slice::Iter<usize>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4598) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[40]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::Enumerate<std::str::Chars>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4615) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[41]::next_back[0]::{{closure}}[0] } 0:&&mut std::iter::Enumerate<std::slice::Iter<ast::Function>>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::iter::Rev<std::slice::Iter<u8>>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(4709) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::{{impl}}[54]::next[0]::{{closure}}[0] } 0:&mut &mut std::iter::TakeWhile<std::slice::Iter<u8>, &[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]>]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5692) => core/8a732dca6b5bfa0e664f890723f35836::slice[0]::{{impl}}[0]::binary_search[0]::{{closure}}[0] } 0:&&usize]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(28), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::result::Result<piston_meta::Syntax, std::string::String>, 1:fn() -> std::result::Result<piston_meta::Syntax, std::string::String> {<load_str::SYNTAX_RULES as std::ops::Deref>::deref::__static_ref_initialize}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (range::Range, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::sync::Arc<std::string::String>, ast::Expression)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::sync::Arc<std::string::String>, std::option::Option<ast::Expression>, std::option::Option<ast::Expression>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (std::sync::Arc<std::string::String>, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (unicase::UniCase<hyper::header::CowStr>, hyper::header::internals::item::Item)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const (usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const FnExternal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const Variable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<Module>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<ast::Closure>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<link::Block>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<prelude::Prelude>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<std::io::Error>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<std::sync::Arc<Module>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const alloc::arc::ArcInner<std::vec::Vec<Variable>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ast::Arg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ast::BinOp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ast::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ast::Current>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ast::Expression>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ast::Function>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ast::Id>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const lifetime::node::Node>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const link::Slice>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const piston_meta::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const prelude::Dfn>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const prelude::Lt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const range::Range<piston_meta::MetaData>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const range::Range>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const runtime::Call>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::option::Option<std::sync::Arc<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::nonzero::NonZero<*const usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::sync::Arc<Module>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::collections::hash::table::SafeHash`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<std::io::BufWriter<std::fs::File>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::io::Write::write_fmt::Adaptor<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::Write::write_fmt::Adapter<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Stdin`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::Stdout`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::num::Wrapping<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&&std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(range::Range, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::sync::Arc<std::string::String>, ast::Expression)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(std::sync::Arc<std::string::String>, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&(usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&FnExternal>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&Variable>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ast::Arg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ast::BinOp>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ast::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ast::Current>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ast::Expression>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ast::Function>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ast::Id>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&hyper::Url>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&lifetime::lt::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&lifetime::node::Node>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&link::Slice>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut Variable>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut link::Slice>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::fs::File>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&mut std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&prelude::Lt>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&range::Range<piston_meta::MetaData>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&runtime::Call>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::option::Option<std::sync::Arc<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::sync::Arc<Module>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<(std::sync::Arc<std::string::String>, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<Box<Variable>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<Box<std::vec::Vec<Variable>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size type: `std::option::Option<[closure@DefId { krate: CrateNum(28), node: DefIndex(20) => lazy_static/075f6720ad30c67b74ebf9d460d54b25::lazy[0]::{{impl}}[0]::get[0]::{{closure}}[0] } 0:&mut &mut *const std::result::Result<piston_meta::Syntax, std::string::String>, 1:fn() -> std::result::Result<piston_meta::Syntax, std::string::String> {<load_str::SYNTAX_RULES as std::ops::Deref>::deref::__static_ref_initialize}]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<char>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::fs::File>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<std::sync::Arc<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<Module>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<ast::Closure>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<link::Block>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<prelude::Prelude>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send + 'static>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, usize>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<std::io::Error>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<std::sync::Arc<Module>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<alloc::arc::ArcInner<std::vec::Vec<Variable>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Shared<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(range::Range, &str)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::sync::Arc<std::string::String>, ast::Expression)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::sync::Arc<std::string::String>, std::option::Option<ast::Expression>, std::option::Option<ast::Expression>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::sync::Arc<std::string::String>, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(unicase::UniCase<hyper::header::CowStr>, hyper::header::internals::item::Item)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(usize, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<FnExternal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<Variable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Arg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::BinOp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Current>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Expression>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Function>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Id>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<lifetime::node::Node>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<link::Slice>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<piston_meta::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<prelude::Dfn>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<prelude::Lt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<range::Range<piston_meta::MetaData>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<range::Range>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<runtime::Call>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<std::sync::Arc<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::sync::Arc<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<std::sync::Arc<std::string::String>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size type: `std::sync::Arc<Module>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<ast::Closure>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<link::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<prelude::Prelude>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send + 'static>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send + 'static>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::collections::HashMap<std::sync::Arc<std::string::String>, usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<std::io::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<std::sync::Arc<Module>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Arc<std::vec::Vec<Variable>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Once`: 8 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::sync::Weak<link::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Weak<std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Weak<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Weak<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Weak<std::vec::Vec<Variable>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::imp::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size type: `std::thread::Packet<std::result::Result<Variable, std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::thread::Packet<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<([u8; 3], std::option::Option<u8>)>`: 6 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 5 bytes
print-type-size         field `.0`: 5 bytes
print-type-size type: `hyper::status::StatusCode`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size     variant `SwitchingProtocols`: 0 bytes
print-type-size     variant `Processing`: 0 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `Created`: 0 bytes
print-type-size     variant `Accepted`: 0 bytes
print-type-size     variant `NonAuthoritativeInformation`: 0 bytes
print-type-size     variant `NoContent`: 0 bytes
print-type-size     variant `ResetContent`: 0 bytes
print-type-size     variant `PartialContent`: 0 bytes
print-type-size     variant `MultiStatus`: 0 bytes
print-type-size     variant `AlreadyReported`: 0 bytes
print-type-size     variant `ImUsed`: 0 bytes
print-type-size     variant `MultipleChoices`: 0 bytes
print-type-size     variant `MovedPermanently`: 0 bytes
print-type-size     variant `Found`: 0 bytes
print-type-size     variant `SeeOther`: 0 bytes
print-type-size     variant `NotModified`: 0 bytes
print-type-size     variant `UseProxy`: 0 bytes
print-type-size     variant `TemporaryRedirect`: 0 bytes
print-type-size     variant `PermanentRedirect`: 0 bytes
print-type-size     variant `BadRequest`: 0 bytes
print-type-size     variant `Unauthorized`: 0 bytes
print-type-size     variant `PaymentRequired`: 0 bytes
print-type-size     variant `Forbidden`: 0 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `MethodNotAllowed`: 0 bytes
print-type-size     variant `NotAcceptable`: 0 bytes
print-type-size     variant `ProxyAuthenticationRequired`: 0 bytes
print-type-size     variant `RequestTimeout`: 0 bytes
print-type-size     variant `Conflict`: 0 bytes
print-type-size     variant `Gone`: 0 bytes
print-type-size     variant `LengthRequired`: 0 bytes
print-type-size     variant `PreconditionFailed`: 0 bytes
print-type-size     variant `PayloadTooLarge`: 0 bytes
print-type-size     variant `UriTooLong`: 0 bytes
print-type-size     variant `UnsupportedMediaType`: 0 bytes
print-type-size     variant `RangeNotSatisfiable`: 0 bytes
print-type-size     variant `ExpectationFailed`: 0 bytes
print-type-size     variant `ImATeapot`: 0 bytes
print-type-size     variant `MisdirectedRequest`: 0 bytes
print-type-size     variant `UnprocessableEntity`: 0 bytes
print-type-size     variant `Locked`: 0 bytes
print-type-size     variant `FailedDependency`: 0 bytes
print-type-size     variant `UpgradeRequired`: 0 bytes
print-type-size     variant `PreconditionRequired`: 0 bytes
print-type-size     variant `TooManyRequests`: 0 bytes
print-type-size     variant `RequestHeaderFieldsTooLarge`: 0 bytes
print-type-size     variant `UnavailableForLegalReasons`: 0 bytes
print-type-size     variant `InternalServerError`: 0 bytes
print-type-size     variant `NotImplemented`: 0 bytes
print-type-size     variant `BadGateway`: 0 bytes
print-type-size     variant `ServiceUnavailable`: 0 bytes
print-type-size     variant `GatewayTimeout`: 0 bytes
print-type-size     variant `HttpVersionNotSupported`: 0 bytes
print-type-size     variant `VariantAlsoNegotiates`: 0 bytes
print-type-size     variant `InsufficientStorage`: 0 bytes
print-type-size     variant `LoopDetected`: 0 bytes
print-type-size     variant `NotExtended`: 0 bytes
print-type-size     variant `NetworkAuthenticationRequired`: 0 bytes
print-type-size     variant `Unregistered`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `libc::unix::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `libc::unix::notbsd::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__align`: 0 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `std::sys::imp::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::imp::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hpack::decoder::DecoderError`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `HeaderIndexOutOfBounds`: 0 bytes
print-type-size     variant `IntegerDecodingError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `StringDecodingError`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `InvalidMaxDynamicSize`: 0 bytes
print-type-size type: `hpack::decoder::StringDecodingError`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `HuffmanDecoderError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `runtime::Side`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `LeftInsert`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size type: `std::ops::Range<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::option::Option<ast::AssignOp>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<ast::BinOp>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<ast::CompareOp>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<ast::UnOp>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<lifetime::kind::Kind>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<ast::AssignOp, ()>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<ast::CompareOp, ()>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<ast::UnOp, ()>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::sys_common::poison::Guard, std::sync::PoisonError<std::sys_common::poison::Guard>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `ast::AssignOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size     variant `Set`: 0 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Sub`: 0 bytes
print-type-size     variant `Mul`: 0 bytes
print-type-size     variant `Div`: 0 bytes
print-type-size     variant `Rem`: 0 bytes
print-type-size     variant `Pow`: 0 bytes
print-type-size type: `ast::BinOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Sub`: 0 bytes
print-type-size     variant `Mul`: 0 bytes
print-type-size     variant `Dot`: 0 bytes
print-type-size     variant `Cross`: 0 bytes
print-type-size     variant `Div`: 0 bytes
print-type-size     variant `Rem`: 0 bytes
print-type-size     variant `Pow`: 0 bytes
print-type-size     variant `OrElse`: 0 bytes
print-type-size     variant `AndAlso`: 0 bytes
print-type-size type: `ast::CompareOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `LessOrEqual`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size     variant `GreaterOrEqual`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `NotEqual`: 0 bytes
print-type-size type: `ast::UnOp`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Not`: 0 bytes
print-type-size     variant `Neg`: 0 bytes
print-type-size type: `core::fmt::FlagV1`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SignPlus`: 0 bytes
print-type-size     variant `SignMinus`: 0 bytes
print-type-size     variant `Alternate`: 0 bytes
print-type-size     variant `SignAwareZeroPad`: 0 bytes
print-type-size type: `core::num::dec2flt::FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `core::num::dec2flt::parse::Sign`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Positive`: 0 bytes
print-type-size     variant `Negative`: 0 bytes
print-type-size type: `hpack::decoder::IntegerDecodingError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TooManyOctets`: 0 bytes
print-type-size     variant `ValueTooLarge`: 0 bytes
print-type-size     variant `NotEnoughOctets`: 0 bytes
print-type-size     variant `InvalidPrefix`: 0 bytes
print-type-size type: `hpack::huffman::HuffmanDecoderError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PaddingTooLarge`: 0 bytes
print-type-size     variant `InvalidPadding`: 0 bytes
print-type-size     variant `EOSInString`: 0 bytes
print-type-size type: `hyper::error::ParseError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `EmptyHost`: 0 bytes
print-type-size     variant `IdnaError`: 0 bytes
print-type-size     variant `InvalidPort`: 0 bytes
print-type-size     variant `InvalidIpv4Address`: 0 bytes
print-type-size     variant `InvalidIpv6Address`: 0 bytes
print-type-size     variant `InvalidDomainCharacter`: 0 bytes
print-type-size     variant `RelativeUrlWithoutBase`: 0 bytes
print-type-size     variant `RelativeUrlWithCannotBeABaseBase`: 0 bytes
print-type-size     variant `SetHostOnCannotBeABaseUrl`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size type: `hyper::version::HttpVersion`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Http09`: 0 bytes
print-type-size     variant `Http10`: 0 bytes
print-type-size     variant `Http11`: 0 bytes
print-type-size     variant `Http20`: 0 bytes
print-type-size type: `lifetime::kind::Kind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fn`: 0 bytes
print-type-size     variant `Arg`: 0 bytes
print-type-size     variant `Current`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size     variant `Expr`: 0 bytes
print-type-size     variant `Add`: 0 bytes
print-type-size     variant `Mul`: 0 bytes
print-type-size     variant `Pow`: 0 bytes
print-type-size     variant `Base`: 0 bytes
print-type-size     variant `Exp`: 0 bytes
print-type-size     variant `Val`: 0 bytes
print-type-size     variant `Call`: 0 bytes
print-type-size     variant `CallArg`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Item`: 0 bytes
print-type-size     variant `ItemExtra`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size     variant `Object`: 0 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size     variant `ArrayItem`: 0 bytes
print-type-size     variant `ArrayFill`: 0 bytes
print-type-size     variant `Fill`: 0 bytes
print-type-size     variant `N`: 0 bytes
print-type-size     variant `KeyValue`: 0 bytes
print-type-size     variant `For`: 0 bytes
print-type-size     variant `ForN`: 0 bytes
print-type-size     variant `Sum`: 0 bytes
print-type-size     variant `SumVec4`: 0 bytes
print-type-size     variant `Prod`: 0 bytes
print-type-size     variant `Min`: 0 bytes
print-type-size     variant `Max`: 0 bytes
print-type-size     variant `Sift`: 0 bytes
print-type-size     variant `Any`: 0 bytes
print-type-size     variant `All`: 0 bytes
print-type-size     variant `Vec4UnLoop`: 0 bytes
print-type-size     variant `Start`: 0 bytes
print-type-size     variant `End`: 0 bytes
print-type-size     variant `Init`: 0 bytes
print-type-size     variant `Cond`: 0 bytes
print-type-size     variant `ElseIfCond`: 0 bytes
print-type-size     variant `ElseIfBlock`: 0 bytes
print-type-size     variant `Step`: 0 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `If`: 0 bytes
print-type-size     variant `TrueBlock`: 0 bytes
print-type-size     variant `ElseBlock`: 0 bytes
print-type-size     variant `Loop`: 0 bytes
print-type-size     variant `Id`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size     variant `Norm`: 0 bytes
print-type-size     variant `UnOp`: 0 bytes
print-type-size     variant `Vec4`: 0 bytes
print-type-size     variant `X`: 0 bytes
print-type-size     variant `Y`: 0 bytes
print-type-size     variant `Z`: 0 bytes
print-type-size     variant `W`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Arr`: 0 bytes
print-type-size     variant `Opt`: 0 bytes
print-type-size     variant `Res`: 0 bytes
print-type-size     variant `RetType`: 0 bytes
print-type-size     variant `ReturnVoid`: 0 bytes
print-type-size     variant `Go`: 0 bytes
print-type-size     variant `Swizzle`: 0 bytes
print-type-size     variant `Sw0`: 0 bytes
print-type-size     variant `Sw1`: 0 bytes
print-type-size     variant `Sw2`: 0 bytes
print-type-size     variant `Sw3`: 0 bytes
print-type-size     variant `Link`: 0 bytes
print-type-size     variant `LinkItem`: 0 bytes
print-type-size     variant `Closure`: 0 bytes
print-type-size     variant `CallClosure`: 0 bytes
print-type-size     variant `ClosureType`: 0 bytes
print-type-size     variant `ClArg`: 0 bytes
print-type-size     variant `ClRet`: 0 bytes
print-type-size     variant `Grab`: 0 bytes
print-type-size type: `read_token::NumberSettings`: 1 bytes, alignment: 1 bytes
print-type-size     field `.allow_underscore`: 1 bytes
print-type-size type: `read_token::ParseNumberError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ExpectedDigits`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size     variant `OverflowInfinity`: 0 bytes
print-type-size     variant `OverflowNegInfinity`: 0 bytes
print-type-size type: `read_token::ParseStringError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `ExpectedFourHexadecimals`: 0 bytes
print-type-size     variant `ExpectedHexadecimal`: 0 bytes
print-type-size     variant `ExpectedValidUnicode`: 0 bytes
print-type-size     variant `ExpectedValidEscapeCharacter`: 0 bytes
print-type-size type: `std::cell::Cell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::io::stdio::Maybe<std::io::stdio::StdinRaw>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Real`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fake`: 0 bytes
print-type-size type: `std::io::stdio::Maybe<std::io::stdio::StdoutRaw>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Real`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fake`: 0 bytes
print-type-size type: `std::iter::ChainState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Both`: 0 bytes
print-type-size     variant `Front`: 0 bytes
print-type-size     variant `Back`: 0 bytes
print-type-size type: `std::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `std::num::ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), ()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::PoisonError<std::sys_common::poison::Guard>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.guard`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `std::sys_common::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `std::sys_common::poison::Guard`: 1 bytes, alignment: 1 bytes
print-type-size     field `.panicking`: 1 bytes
print-type-size type: `write::EscapeString`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Json`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/infer_len.rs:19:24: 30:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/mod.rs:131:44: 131:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/mod.rs:1498:46: 1498:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/mod.rs:1724:31: 1724:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ast/mod.rs:1793:31: 1793:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/lifetimechk.rs:9:26: 9:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:111:18: 111:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:165:17: 165:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:168:17: 168:35]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/meta.rs:75:18: 75:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1444:17: 1446:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1481:21: 1487:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:1507:19: 1513:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:210:16: 216:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:2516:28: 2516:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:2541:14: 2545:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:714:32: 714:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:725:32: 725:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:736:32: 736:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:747:32: 747:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:758:32: 758:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:769:32: 769:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:780:32: 780:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:814:32: 814:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:825:32: 825:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:836:32: 836:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:847:32: 847:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:858:32: 858:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:869:32: 869:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:880:32: 880:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/intrinsics/mod.rs:891:32: 891:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lib.rs:381:18: 381:35]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:113:16: 113:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:138:17: 140:10]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:157:14: 157:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:166:14: 166:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:172:32: 172:52]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:36:48: 36:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:73:17: 73:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:73:51: 73:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:741:15: 741:33]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:80:17: 80:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:80:53: 80:63]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:84:17: 84:49]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:84:55: 84:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/mod.rs:96:14: 96:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:128:33: 128:61]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:152:36: 152:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/node.rs:319:49: 319:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/lifetime/typecheck.rs:654:50: 654:71]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:1011:34: 1011:95]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:392:51: 392:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:598:51: 598:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/runtime.rs:857:59: 857:70]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/ty.rs:209:68: 209:91]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/camlorn/.cargo/registry/src/github.com-1ecc6299db9ec823/dyon-0.12.1/src/write.rs:551:16: 559:6]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1555) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[3]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1838) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[29]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(1859) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[32]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2007) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[47]::new[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(2035) => std/8a732dca6b5bfa0e664f890723f35836::collections[0]::hash[0]::map[0]::{{impl}}[53]::get[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(410) => std/8a732dca6b5bfa0e664f890723f35836::f64[0]::{{impl}}[0]::ln[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(4161) => std/8a732dca6b5bfa0e664f890723f35836::io[0]::append_to_string[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(417) => std/8a732dca6b5bfa0e664f890723f35836::f64[0]::{{impl}}[0]::log2[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(1), node: DefIndex(421) => std/8a732dca6b5bfa0e664f890723f35836::f64[0]::{{impl}}[0]::log10[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(439) => piston_meta/13ab74d09197ba4f1a455b5525d4617d::json[0]::write[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(12), node: DefIndex(442) => piston_meta/13ab74d09197ba4f1a455b5525d4617d::json[0]::write[0]::{{closure}}[1] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(3645) => core/8a732dca6b5bfa0e664f890723f35836::iter[0]::iterator[0]::Iterator[0]::count[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(5038) => core/8a732dca6b5bfa0e664f890723f35836::option[0]::{{impl}}[1]::cloned[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6847) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[4]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(6863) => core/8a732dca6b5bfa0e664f890723f35836::str[0]::{{impl}}[5]::next_back[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(2), node: DefIndex(953) => core/8a732dca6b5bfa0e664f890723f35836::num[0]::dec2flt[0]::simplify[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@DefId { krate: CrateNum(3), node: DefIndex(4414) => collections/8a732dca6b5bfa0e664f890723f35836::vec[0]::{{impl}}[61]::next[0]::{{closure}}[0] }]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `hyper::error::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `load_str::SYNTAX_RULES`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<std::any::Any>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::collections::hash::map::DefaultResizePolicy`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::io::stdio::StdinRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::io::stdio::StdoutRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&'static ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(range::Range, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::sync::Arc<std::string::String>, ast::Expression)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::sync::Arc<std::string::String>, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&FnExternal>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&Variable>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Arg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::BinOp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Block>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Current>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Expression>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Function>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Id>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&lifetime::node::Node>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&link::Slice>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut Variable>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&prelude::Lt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&range::Range<piston_meta::MetaData>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&runtime::Call>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::fmt::ArgumentV1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<std::sync::Arc<std::string::String>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::sync::Arc<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ty::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<((usize, std::sync::Arc<std::string::String>), (usize, usize))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(range::Range, &str)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync + 'static>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, Box<hyper::header::HeaderFormat + Send + Sync>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::sync::Arc<std::string::String>, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::sync::Arc<std::string::String>, Variable)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::sync::Arc<std::string::String>, ast::Expression)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::sync::Arc<std::string::String>, std::option::Option<ast::Expression>, std::option::Option<ast::Expression>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::sync::Arc<std::string::String>, ty::Type)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::sync::Arc<std::string::String>, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(unicase::UniCase<hyper::header::CowStr>, hyper::header::internals::item::Item)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut std::sync::once::Waiter>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<FnExternal>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Variable>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<Module>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<ast::Closure>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<link::Block>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<prelude::Prelude>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send + 'static>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<Variable, std::string::String>, Box<std::any::Any + Send>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send + 'static>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::cell::UnsafeCell<std::option::Option<std::result::Result<std::result::Result<std::collections::HashMap<std::sync::Arc<std::string::String>, ty::Type>, range::Range<std::string::String>>, Box<std::any::Any + Send>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, Variable>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::collections::HashMap<std::sync::Arc<std::string::String>, usize>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<std::any::Any + 'static>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<std::any::Any>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<std::io::BufReader<std::io::stdio::Maybe<std::io::stdio::StdinRaw>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<std::io::Error>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<std::sync::Arc<Module>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sync::Mutex<std::thread::JoinHandle<std::result::Result<Variable, std::string::String>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::sys_common::remutex::ReentrantMutex<std::cell::RefCell<std::io::LineWriter<std::io::stdio::Maybe<std::io::stdio::StdoutRaw>>>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::arc::ArcInner<std::vec::Vec<Variable>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Arg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::BinOp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Block>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Current>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Expression>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Function>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Id>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lifetime::node::Node>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<link::Slice>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<piston_meta::Rule>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<prelude::Dfn>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<prelude::Lt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<range::Range<piston_meta::MetaData>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<range::Range>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<runtime::Call>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::collections::hash::table::RawTable<std::sync::Arc<std::string::String>, ()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<std::sync::Arc<std::string::String>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::sync::Arc<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ty::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::imp::stdio::Stdin`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::imp::stdio::Stdout`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `url::encoding::EncodingOverride`: 0 bytes, alignment: 1 bytes
